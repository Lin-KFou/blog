import{_ as l,c as o,a as s,d as e,e as t,f as i,r as c,o as u,b as p}from"./app-BCC5ysrj.js";const r={},d={class:"vuepress-toc"},k={class:"vuepress-toc-item"},m={class:"vuepress-toc-item"},v={class:"vuepress-toc-item"},_={class:"vuepress-toc-item"},h={class:"vuepress-toc-item"},b={class:"vuepress-toc-item"},f={class:"vuepress-toc-item"},g={class:"vuepress-toc-item"},y={class:"vuepress-toc-item"},w={class:"vuepress-toc-item"},x={class:"vuepress-toc-item"},P={class:"vuepress-toc-item"};function q(O,n){const a=c("router-link");return u(),o("div",null,[n[12]||(n[12]=s("h1",{id:"python-面向对象编程-oop",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#python-面向对象编程-oop"},[s("span",null,"Python: 面向对象编程(OOP)")])],-1)),s("nav",d,[s("ul",null,[s("li",k,[e(a,{to:"#_1-面向对象基础"},{default:t(()=>n[0]||(n[0]=[p("1. 面向对象基础")])),_:1}),s("ul",null,[s("li",m,[e(a,{to:"#_1-1-对象与类"},{default:t(()=>n[1]||(n[1]=[p("1.1 对象与类")])),_:1})]),s("li",v,[e(a,{to:"#_1-2-类的定义"},{default:t(()=>n[2]||(n[2]=[p("1.2 类的定义")])),_:1})])])]),s("li",_,[e(a,{to:"#_2-类的方法"},{default:t(()=>n[3]||(n[3]=[p("2. 类的方法")])),_:1}),s("ul",null,[s("li",h,[e(a,{to:"#_2-1-构造方法"},{default:t(()=>n[4]||(n[4]=[p("2.1 构造方法")])),_:1})]),s("li",b,[e(a,{to:"#_2-2-实例方法"},{default:t(()=>n[5]||(n[5]=[p("2.2 实例方法")])),_:1})])])]),s("li",f,[e(a,{to:"#_3-继承"},{default:t(()=>n[6]||(n[6]=[p("3. 继承")])),_:1}),s("ul",null,[s("li",g,[e(a,{to:"#_3-1-基本继承"},{default:t(()=>n[7]||(n[7]=[p("3.1 基本继承")])),_:1})]),s("li",y,[e(a,{to:"#_3-2-方法重写"},{default:t(()=>n[8]||(n[8]=[p("3.2 方法重写")])),_:1})])])]),s("li",w,[e(a,{to:"#_4-实战案例"},{default:t(()=>n[9]||(n[9]=[p("4. 实战案例")])),_:1}),s("ul",null,[s("li",x,[e(a,{to:"#_4-1-游戏示例"},{default:t(()=>n[10]||(n[10]=[p("4.1 游戏示例")])),_:1})])])]),s("li",P,[e(a,{to:"#总结"},{default:t(()=>n[11]||(n[11]=[p("总结")])),_:1})])])]),n[13]||(n[13]=i(`<hr><p>面向对象编程(OOP)是一种组织程序的方法，提倡仔细设计和代码重用。本文介绍 Python 中的面向对象编程基础概念和实践。</p><h2 id="_1-面向对象基础" tabindex="-1"><a class="header-anchor" href="#_1-面向对象基础"><span>1. 面向对象基础</span></a></h2><h3 id="_1-1-对象与类" tabindex="-1"><a class="header-anchor" href="#_1-1-对象与类"><span>1.1 对象与类</span></a></h3><ul><li>对象是一组数据及其操作方法的集合</li><li>类是对象的设计蓝图，定义了对象包含的数据和方法</li><li>Python 中的数字、字符串、列表等都是对象</li></ul><h3 id="_1-2-类的定义" tabindex="-1"><a class="header-anchor" href="#_1-2-类的定义"><span>1.2 类的定义</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;表示一个人的类&quot;&quot;&quot;</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;&#39;</span></span>
<span class="line">        self<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-类的方法" tabindex="-1"><a class="header-anchor" href="#_2-类的方法"><span>2. 类的方法</span></a></h2><h3 id="_2-1-构造方法" tabindex="-1"><a class="header-anchor" href="#_2-1-构造方法"><span>2.1 构造方法</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name</span>
<span class="line">        self<span class="token punctuation">.</span>age <span class="token operator">=</span> age</span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&quot;Person(&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span><span class="token string">&#39;, </span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>age<span class="token punctuation">}</span></span><span class="token string">)&quot;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-实例方法" tabindex="-1"><a class="header-anchor" href="#_2-2-实例方法"><span>2.2 实例方法</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">display</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;姓名: </span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span><span class="token string">, 年龄: </span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>age<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">have_birthday</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>age <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-继承" tabindex="-1"><a class="header-anchor" href="#_3-继承"><span>3. 继承</span></a></h2><h3 id="_3-1-基本继承" tabindex="-1"><a class="header-anchor" href="#_3-1-基本继承"><span>3.1 基本继承</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Player</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>_name <span class="token operator">=</span> name</span>
<span class="line">        self<span class="token punctuation">.</span>_score <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">reset_score</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>_score <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">Human</span><span class="token punctuation">(</span>Player<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__repr__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&#39;Human(</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>_name<span class="token punctuation">}</span></span><span class="token string">)&#39;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-方法重写" tabindex="-1"><a class="header-anchor" href="#_3-2-方法重写"><span>3.2 方法重写</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Computer</span><span class="token punctuation">(</span>Player<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">get_move</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-实战案例" tabindex="-1"><a class="header-anchor" href="#_4-实战案例"><span>4. 实战案例</span></a></h2><h3 id="_4-1-游戏示例" tabindex="-1"><a class="header-anchor" href="#_4-1-游戏示例"><span>4.1 游戏示例</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">play_undercut</span><span class="token punctuation">(</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    p1<span class="token punctuation">.</span>reset_score<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    p2<span class="token punctuation">.</span>reset_score<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    m1 <span class="token operator">=</span> p1<span class="token punctuation">.</span>get_move<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    m2 <span class="token operator">=</span> p2<span class="token punctuation">.</span>get_move<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>p1<span class="token punctuation">.</span>get_name<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string"> move: </span><span class="token interpolation"><span class="token punctuation">{</span>m1<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>p2<span class="token punctuation">.</span>get_name<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string"> move: </span><span class="token interpolation"><span class="token punctuation">{</span>m2<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">if</span> m1 <span class="token operator">==</span> m2 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">:</span></span>
<span class="line">        p1<span class="token punctuation">.</span>incr_score<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> p1<span class="token punctuation">,</span> p2<span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>p1<span class="token punctuation">.</span>get_name<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string"> wins!&#39;</span></span></span>
<span class="line">    <span class="token keyword">elif</span> m2 <span class="token operator">==</span> m1 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">:</span></span>
<span class="line">        p2<span class="token punctuation">.</span>incr_score<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> p1<span class="token punctuation">,</span> p2<span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>p2<span class="token punctuation">.</span>get_name<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string"> wins!&#39;</span></span></span>
<span class="line">    <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> p1<span class="token punctuation">,</span> p2<span class="token punctuation">,</span> <span class="token string">&#39;draw: no winner&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>Python 的面向对象编程特性：</p><ul><li>简洁的类定义语法</li><li>灵活的继承机制</li><li>强大的多态支持</li><li>丰富的魔术方法</li></ul><blockquote><p>提示：在设计类时，建议先将属性设为私有，需要时再改为公有。</p></blockquote>`,24))])}const E=l(r,[["render",q],["__file","Python-面向对象编程(OOP).html.vue"]]),j=JSON.parse('{"path":"/fpython/quickstart/Python-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B(OOP).html","title":"Python: 面向对象编程(OOP)","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"1. 面向对象基础","slug":"_1-面向对象基础","link":"#_1-面向对象基础","children":[{"level":3,"title":"1.1 对象与类","slug":"_1-1-对象与类","link":"#_1-1-对象与类","children":[]},{"level":3,"title":"1.2 类的定义","slug":"_1-2-类的定义","link":"#_1-2-类的定义","children":[]}]},{"level":2,"title":"2. 类的方法","slug":"_2-类的方法","link":"#_2-类的方法","children":[{"level":3,"title":"2.1 构造方法","slug":"_2-1-构造方法","link":"#_2-1-构造方法","children":[]},{"level":3,"title":"2.2 实例方法","slug":"_2-2-实例方法","link":"#_2-2-实例方法","children":[]}]},{"level":2,"title":"3. 继承","slug":"_3-继承","link":"#_3-继承","children":[{"level":3,"title":"3.1 基本继承","slug":"_3-1-基本继承","link":"#_3-1-基本继承","children":[]},{"level":3,"title":"3.2 方法重写","slug":"_3-2-方法重写","link":"#_3-2-方法重写","children":[]}]},{"level":2,"title":"4. 实战案例","slug":"_4-实战案例","link":"#_4-实战案例","children":[{"level":3,"title":"4.1 游戏示例","slug":"_4-1-游戏示例","link":"#_4-1-游戏示例","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"updatedTime":1735029308000,"contributors":[{"name":"Linkefou","username":"Linkefou","email":"wlh724567296@163.com","commits":1},{"name":"wanglinhao","username":"wanglinhao","email":"wanglinhao@wegooooo.com","commits":4}]},"filePathRelative":"fpython/quickstart/Python-面向对象编程(OOP).md"}');export{E as comp,j as data};
