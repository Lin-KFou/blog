import{_ as t,c as o,a as e,d as a,e as l,f as r,r as c,o as p,b as i}from"./app-BCC5ysrj.js";const d={},u={class:"vuepress-toc"},m={class:"vuepress-toc-item"},v={class:"vuepress-toc-item"},h={class:"vuepress-toc-item"},k={class:"vuepress-toc-item"},_={class:"vuepress-toc-item"},b={class:"vuepress-toc-item"},x={class:"vuepress-toc-item"},g={class:"vuepress-toc-item"},f={class:"vuepress-toc-item"},D={class:"vuepress-toc-item"},y={class:"vuepress-toc-item"},N={class:"vuepress-toc-item"},B={class:"vuepress-toc-item"},E={class:"vuepress-toc-item"};function A(T,s){const n=c("router-link");return p(),o("div",null,[s[14]||(s[14]=e("h1",{id:"_11-nexus3-x的私有仓库",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_11-nexus3-x的私有仓库"},[e("span",null,"11. Nexus3.x的私有仓库")])],-1)),e("nav",u,[e("ul",null,[e("li",m,[a(n,{to:"#简介"},{default:l(()=>s[0]||(s[0]=[i("简介")])),_:1})]),e("li",v,[a(n,{to:"#_1-安装部署"},{default:l(()=>s[1]||(s[1]=[i("1. 安装部署")])),_:1}),e("ul",null,[e("li",h,[a(n,{to:"#_1-1-环境要求"},{default:l(()=>s[2]||(s[2]=[i("1.1 环境要求")])),_:1})]),e("li",k,[a(n,{to:"#_1-2-启动容器"},{default:l(()=>s[3]||(s[3]=[i("1.2 启动容器")])),_:1})])])]),e("li",_,[a(n,{to:"#_2-初始配置"},{default:l(()=>s[4]||(s[4]=[i("2. 初始配置")])),_:1}),e("ul",null,[e("li",b,[a(n,{to:"#_2-1-访问管理界面"},{default:l(()=>s[5]||(s[5]=[i("2.1 访问管理界面")])),_:1})]),e("li",x,[a(n,{to:"#_2-2-创建-docker-仓库"},{default:l(()=>s[6]||(s[6]=[i("2.2 创建 Docker 仓库")])),_:1})])])]),e("li",g,[a(n,{to:"#_3-配置-docker-客户端"},{default:l(()=>s[7]||(s[7]=[i("3. 配置 Docker 客户端")])),_:1}),e("ul",null,[e("li",f,[a(n,{to:"#_3-1-配置-docker-信任"},{default:l(()=>s[8]||(s[8]=[i("3.1 配置 Docker 信任")])),_:1})]),e("li",D,[a(n,{to:"#_3-2-推送镜像示例"},{default:l(()=>s[9]||(s[9]=[i("3.2 推送镜像示例")])),_:1})])])]),e("li",y,[a(n,{to:"#_4-维护管理"},{default:l(()=>s[10]||(s[10]=[i("4. 维护管理")])),_:1}),e("ul",null,[e("li",N,[a(n,{to:"#_4-1-备份"},{default:l(()=>s[11]||(s[11]=[i("4.1 备份")])),_:1})]),e("li",B,[a(n,{to:"#_4-2-清理"},{default:l(()=>s[12]||(s[12]=[i("4.2 清理")])),_:1})])])]),e("li",E,[a(n,{to:"#_5-最佳实践"},{default:l(()=>s[13]||(s[13]=[i("5. 最佳实践")])),_:1})])])]),s[15]||(s[15]=r(`<hr><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>Nexus 是一个强大的仓库管理器，可以用来管理多种类型的仓库，包括：</p><ul><li>Docker 镜像仓库</li><li>Maven 包仓库</li><li>npm 包仓库</li><li>PyPI 包仓库</li><li>Yum/APT 软件源</li></ul><p>相比官方的 Docker Registry，Nexus 具有以下优势：</p><ul><li>支持自动垃圾回收</li><li>提供友好的 Web 界面</li><li>支持多种认证方式</li><li>可以管理多种类型的仓库</li></ul><h2 id="_1-安装部署" tabindex="-1"><a class="header-anchor" href="#_1-安装部署"><span>1. 安装部署</span></a></h2><h3 id="_1-1-环境要求" tabindex="-1"><a class="header-anchor" href="#_1-1-环境要求"><span>1.1 环境要求</span></a></h3><ul><li>Docker 版本 &gt;= 17.06</li><li>至少 4GB 内存</li><li>至少 20GB 磁盘空间</li></ul><h3 id="_1-2-启动容器" tabindex="-1"><a class="header-anchor" href="#_1-2-启动容器"><span>1.2 启动容器</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 创建数据卷</span></span>
<span class="line"><span class="token function">docker</span> volume create nexus-data</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 启动 Nexus 容器</span></span>
<span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> nexus3 <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token parameter variable">-p</span> <span class="token number">8081</span>:8081 <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token parameter variable">--mount</span> <span class="token assign-left variable">src</span><span class="token operator">=</span>nexus-data,target<span class="token operator">=</span>/nexus-data <span class="token punctuation">\\</span></span>
<span class="line">    sonatype/nexus3</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>说明：</strong></p><ul><li>端口 8081 用于 Web 界面访问</li><li>数据持久化存储在 nexus-data 卷中</li></ul></blockquote><h2 id="_2-初始配置" tabindex="-1"><a class="header-anchor" href="#_2-初始配置"><span>2. 初始配置</span></a></h2><h3 id="_2-1-访问管理界面" tabindex="-1"><a class="header-anchor" href="#_2-1-访问管理界面"><span>2.1 访问管理界面</span></a></h3><p>打开浏览器访问：<code>http://&lt;your-ip&gt;:8081</code></p><p><strong>默认凭据：</strong></p><ul><li>用户名：<code>admin</code></li><li>密码：<code>admin123</code></li></ul><h3 id="_2-2-创建-docker-仓库" tabindex="-1"><a class="header-anchor" href="#_2-2-创建-docker-仓库"><span>2.2 创建 Docker 仓库</span></a></h3><ol><li>登录后点击设置图标</li><li>选择 Repositories -&gt; Create repository</li><li>选择 docker (hosted) 类型</li><li>配置仓库信息：</li></ol><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">Name</span><span class="token punctuation">:</span> docker<span class="token punctuation">-</span>hosted</span>
<span class="line"><span class="token key atrule">HTTP</span><span class="token punctuation">:</span> <span class="token number">8082</span>  <span class="token comment"># Docker 仓库端口</span></span>
<span class="line"><span class="token key atrule">Enable Docker V1 API</span><span class="token punctuation">:</span> 取消勾选</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-配置-docker-客户端" tabindex="-1"><a class="header-anchor" href="#_3-配置-docker-客户端"><span>3. 配置 Docker 客户端</span></a></h2><h3 id="_3-1-配置-docker-信任" tabindex="-1"><a class="header-anchor" href="#_3-1-配置-docker-信任"><span>3.1 配置 Docker 信任</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 编辑 daemon.json</span></span>
<span class="line"><span class="token function">vim</span> /etc/docker/daemon.json</span>
<span class="line"></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token string">&quot;insecure-registries&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token string">&quot;your-nexus-ip:8082&quot;</span></span>
<span class="line">  <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 重启 Docker</span></span>
<span class="line">systemctl restart <span class="token function">docker</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-推送镜像示例" tabindex="-1"><a class="header-anchor" href="#_3-2-推送镜像示例"><span>3.2 推送镜像示例</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 登录到 Nexus Docker 仓库</span></span>
<span class="line"><span class="token function">docker</span> login your-nexus-ip:8082</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 标记镜像</span></span>
<span class="line"><span class="token function">docker</span> tag nginx:latest your-nexus-ip:8082/nginx:latest</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 推送镜像</span></span>
<span class="line"><span class="token function">docker</span> push your-nexus-ip:8082/nginx:latest</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-维护管理" tabindex="-1"><a class="header-anchor" href="#_4-维护管理"><span>4. 维护管理</span></a></h2><h3 id="_4-1-备份" tabindex="-1"><a class="header-anchor" href="#_4-1-备份"><span>4.1 备份</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 备份数据目录</span></span>
<span class="line"><span class="token function">tar</span> <span class="token parameter variable">-zcvf</span> nexus-data.tar.gz /var/lib/docker/volumes/nexus-data</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-清理" tabindex="-1"><a class="header-anchor" href="#_4-2-清理"><span>4.2 清理</span></a></h3><ul><li>通过 Web 界面定期清理未使用的组件</li><li>配置自动清理策略</li><li>监控存储空间使用情况</li></ul><h2 id="_5-最佳实践" tabindex="-1"><a class="header-anchor" href="#_5-最佳实践"><span>5. 最佳实践</span></a></h2><ul><li>使用 HTTPS 加密传输</li><li>配置访问控制和权限管理</li><li>定期备份数据</li><li>监控系统资源使用情况</li><li>配置邮件通知</li></ul><blockquote><p><strong>注意：</strong> 生产环境建议使用 HTTPS，并配置适当的访问控制</p></blockquote>`,33))])}const P=t(d,[["render",A],["__file","Docker系列学习-11.Nexu3.x的私有仓库.html.vue"]]),j=JSON.parse('{"path":"/flinux/Kubernetes/Docker%E7%B3%BB%E5%88%97%E5%AD%A6%E4%B9%A0/Docker%E7%B3%BB%E5%88%97%E5%AD%A6%E4%B9%A0-11.Nexu3.x%E7%9A%84%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93.html","title":"11. Nexus3.x的私有仓库","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"1. 安装部署","slug":"_1-安装部署","link":"#_1-安装部署","children":[{"level":3,"title":"1.1 环境要求","slug":"_1-1-环境要求","link":"#_1-1-环境要求","children":[]},{"level":3,"title":"1.2 启动容器","slug":"_1-2-启动容器","link":"#_1-2-启动容器","children":[]}]},{"level":2,"title":"2. 初始配置","slug":"_2-初始配置","link":"#_2-初始配置","children":[{"level":3,"title":"2.1 访问管理界面","slug":"_2-1-访问管理界面","link":"#_2-1-访问管理界面","children":[]},{"level":3,"title":"2.2 创建 Docker 仓库","slug":"_2-2-创建-docker-仓库","link":"#_2-2-创建-docker-仓库","children":[]}]},{"level":2,"title":"3. 配置 Docker 客户端","slug":"_3-配置-docker-客户端","link":"#_3-配置-docker-客户端","children":[{"level":3,"title":"3.1 配置 Docker 信任","slug":"_3-1-配置-docker-信任","link":"#_3-1-配置-docker-信任","children":[]},{"level":3,"title":"3.2 推送镜像示例","slug":"_3-2-推送镜像示例","link":"#_3-2-推送镜像示例","children":[]}]},{"level":2,"title":"4. 维护管理","slug":"_4-维护管理","link":"#_4-维护管理","children":[{"level":3,"title":"4.1 备份","slug":"_4-1-备份","link":"#_4-1-备份","children":[]},{"level":3,"title":"4.2 清理","slug":"_4-2-清理","link":"#_4-2-清理","children":[]}]},{"level":2,"title":"5. 最佳实践","slug":"_5-最佳实践","link":"#_5-最佳实践","children":[]}],"git":{"updatedTime":1709276200000,"contributors":[{"name":"Linkefou","username":"Linkefou","email":"wlh724567296@163.com","commits":1},{"name":"wanglinhao","username":"wanglinhao","email":"wanglinhao@wegooooo.com","commits":2}]},"filePathRelative":"flinux/Kubernetes/Docker系列学习/Docker系列学习-11.Nexu3.x的私有仓库.md"}');export{P as comp,j as data};
