import{_ as p,c as i,a as s,d as e,e as t,f as c,r as o,o as d,b as l}from"./app-BCC5ysrj.js";const r={},u={class:"vuepress-toc"},m={class:"vuepress-toc-item"},k={class:"vuepress-toc-item"},v={class:"vuepress-toc-item"};function h(b,n){const a=o("router-link");return d(),i("div",null,[n[3]||(n[3]=s("h1",{id:"_3-flask请求-响应循环",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_3-flask请求-响应循环"},[s("span",null,"3. Flask请求-响应循环")])],-1)),s("nav",u,[s("ul",null,[s("li",m,[e(a,{to:"#模块"},{default:t(()=>n[0]||(n[0]=[l("模块")])),_:1})]),s("li",k,[e(a,{to:"#jinja2模块引擎"},{default:t(()=>n[1]||(n[1]=[l("Jinja2模块引擎")])),_:1})]),s("li",v,[e(a,{to:"#渲染模块"},{default:t(()=>n[2]||(n[2]=[l("渲染模块")])),_:1})])])]),n[4]||(n[4]=c(`<hr><h2 id="模块" tabindex="-1"><a class="header-anchor" href="#模块"><span>模块</span></a></h2><p>视图函数的作用很明确，即<code>生成请求的响应</code>，但一般而言，请求会改变程序的状态，而这种变化也会在视图函数中产生。<br> 例如，用户在网站中注册了一个新账户。用户在表单中输入电子邮件地址和密码，然后点击提交按钮。服务器接收到包含用户输入数据的请求，然后 Flask把请求分发到处理注册请求的视图函数。这个视图函数需要访问数据库，添加新用户，然后生成响应回送浏览器。这两个过程分别称为<code>业务逻辑</code>和<code>表现逻辑</code>。</p><p>业务逻辑和表现逻辑混在一起，会导致代码难以理解和维护。<br> 当需要为一个大型表格构建HTML代码，表格中的数据由数据库中读取的数据以及必要的HTML字符串连接在一起，把表现逻辑移到<code>模块</code>中能够提升程序的可维护性。</p><p>模块，是一个包含相应文本的文件，其中包含用来占位变量表示的动态部分，具体值只在请求的上下文中才能知道。<br><code>渲染</code>：使用真实值替换变量，再返回最终得到的相应字符串<br> 为了渲染模板，Flask使用一个名为<code>jinja2</code>的模块引擎</p><h2 id="jinja2模块引擎" tabindex="-1"><a class="header-anchor" href="#jinja2模块引擎"><span>Jinja2模块引擎</span></a></h2><p>最简单的jinja2模块就是一个包含响应文本的文件。</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token comment">&lt;!-- templates/index.html:Jinja2模块 --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Hello World!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>变量表示的动态部分</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token comment">&lt;!-- templates/user.html:Jinja模块 --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Hello,{{ name }}！<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="渲染模块" tabindex="-1"><a class="header-anchor" href="#渲染模块"><span>渲染模块</span></a></h2><p>默认情况，Flask在程序文件夹中的templates子文件夹中寻找模块。 一般把定义的模块保存在templates文件夹中。<br> 实例：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># hello.py：渲染模块</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span>render_template</span>
<span class="line"><span class="token comment"># ...</span></span>
<span class="line"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">&#39;index.html&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">&#39;/user/&lt;name&gt;&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">user</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">&#39;user.html&#39;</span><span class="token punctuation">,</span>name<span class="token operator">=</span>name<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解释：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">Flask提供的render_template函数把Jinja2模块引擎集成到了程序中。</span>
<span class="line">render_template函数的第一个参数是模块的文件名（idnex.html）</span>
<span class="line">第二个参数是键值对，表示模块中变量对应的真实值</span>
<span class="line">在上面的代码中。第二个user.html模块收到一个 name 的变量</span>
<span class="line"></span>
<span class="line">上面中，name=name是关键字参数。</span>
<span class="line">左边的 name ：表示参数名，就是模块的占位符</span>
<span class="line">右边的 name ：表示当前作用于的变量，表示同名参数的值</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15))])}const f=p(r,[["render",h],["__file","chapt-3.html.vue"]]),j=JSON.parse('{"path":"/fpython/htmlsystem/Flask/chapt-3.html","title":"3. Flask请求-响应循环","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"模块","slug":"模块","link":"#模块","children":[]},{"level":2,"title":"Jinja2模块引擎","slug":"jinja2模块引擎","link":"#jinja2模块引擎","children":[]},{"level":2,"title":"渲染模块","slug":"渲染模块","link":"#渲染模块","children":[]}],"git":{"updatedTime":1735029308000,"contributors":[{"name":"Linkefou","username":"Linkefou","email":"wlh724567296@163.com","commits":1},{"name":"wanglinhao","username":"wanglinhao","email":"wanglinhao@wegooooo.com","commits":3}]},"filePathRelative":"fpython/htmlsystem/Flask/chapt-3.md"}');export{f as comp,j as data};
