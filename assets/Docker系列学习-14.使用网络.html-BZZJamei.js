import{_ as t,c as p,a as n,d as e,e as l,f as r,r as o,o as c,b as i}from"./app-BCC5ysrj.js";const d={},u={class:"vuepress-toc"},m={class:"vuepress-toc-item"},v={class:"vuepress-toc-item"},b={class:"vuepress-toc-item"},h={class:"vuepress-toc-item"},k={class:"vuepress-toc-item"},g={class:"vuepress-toc-item"},f={class:"vuepress-toc-item"},_={class:"vuepress-toc-item"},x={class:"vuepress-toc-item"},y={class:"vuepress-toc-item"},D={class:"vuepress-toc-item"},w={class:"vuepress-toc-item"},N={class:"vuepress-toc-item"};function B(S,s){const a=o("router-link");return c(),p("div",null,[s[13]||(s[13]=n("h1",{id:"_14-使用网络",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_14-使用网络"},[n("span",null,"14. 使用网络")])],-1)),n("nav",u,[n("ul",null,[n("li",m,[e(a,{to:"#简介"},{default:l(()=>s[0]||(s[0]=[i("简介")])),_:1})]),n("li",v,[e(a,{to:"#外部访问容器"},{default:l(()=>s[1]||(s[1]=[i("外部访问容器")])),_:1}),n("ul",null,[n("li",b,[e(a,{to:"#端口映射"},{default:l(()=>s[2]||(s[2]=[i("端口映射")])),_:1})]),n("li",h,[e(a,{to:"#端口映射格式"},{default:l(()=>s[3]||(s[3]=[i("端口映射格式")])),_:1})]),n("li",k,[e(a,{to:"#查看端口映射"},{default:l(()=>s[4]||(s[4]=[i("查看端口映射")])),_:1})])])]),n("li",g,[e(a,{to:"#容器互联"},{default:l(()=>s[5]||(s[5]=[i("容器互联")])),_:1}),n("ul",null,[n("li",f,[e(a,{to:"#创建网络"},{default:l(()=>s[6]||(s[6]=[i("创建网络")])),_:1})]),n("li",_,[e(a,{to:"#连接容器"},{default:l(()=>s[7]||(s[7]=[i("连接容器")])),_:1})]),n("li",x,[e(a,{to:"#测试连通性"},{default:l(()=>s[8]||(s[8]=[i("测试连通性")])),_:1})])])]),n("li",y,[e(a,{to:"#dns-配置"},{default:l(()=>s[9]||(s[9]=[i("DNS 配置")])),_:1}),n("ul",null,[n("li",D,[e(a,{to:"#全局-dns-配置"},{default:l(()=>s[10]||(s[10]=[i("全局 DNS 配置")])),_:1})]),n("li",w,[e(a,{to:"#容器-dns-配置"},{default:l(()=>s[11]||(s[11]=[i("容器 DNS 配置")])),_:1})])])]),n("li",N,[e(a,{to:"#最佳实践"},{default:l(()=>s[12]||(s[12]=[i("最佳实践")])),_:1})])])]),s[14]||(s[14]=r(`<hr><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>Docker 提供了强大的网络功能，支持多种网络模式：</p><ul><li><strong>bridge</strong>: 默认网络模式，容器通过网桥连接</li><li><strong>host</strong>: 容器使用主机网络</li><li><strong>none</strong>: 容器没有网络连接</li><li><strong>overlay</strong>: 用于 Swarm 模式的跨主机网络</li><li><strong>macvlan</strong>: 允许容器直接连接物理网络</li></ul><h2 id="外部访问容器" tabindex="-1"><a class="header-anchor" href="#外部访问容器"><span>外部访问容器</span></a></h2><h3 id="端口映射" tabindex="-1"><a class="header-anchor" href="#端口映射"><span>端口映射</span></a></h3><p>Docker 提供两种端口映射方式：</p><ul><li><code>-P</code>: 随机映射端口(49000-49900)</li><li><code>-p</code>: 指定映射端口</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 使用随机端口映射</span></span>
<span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-P</span> training/webapp python app.py</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 查看端口映射</span></span>
<span class="line"><span class="token function">docker</span> container <span class="token function">ls</span> <span class="token parameter variable">-l</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 查看应用日志</span></span>
<span class="line"><span class="token function">docker</span> logs <span class="token parameter variable">-f</span> nostalgic_morse</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="端口映射格式" tabindex="-1"><a class="header-anchor" href="#端口映射格式"><span>端口映射格式</span></a></h3><p>使用 <code>-p</code> 参数时支持以下格式：</p><ul><li><code>hostPort:containerPort</code>: 映射所有接口</li><li><code>ip:hostPort:containerPort</code>: 映射指定接口</li><li><code>ip::containerPort</code>: 映射指定接口的随机端口</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 映射本地 5000 端口到容器 5000 端口</span></span>
<span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">5000</span>:5000 training/webapp python app.py</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 映射到 localhost</span></span>
<span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">127.0</span>.0.1:5000:5000 training/webapp python app.py</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 映射到随机端口</span></span>
<span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">127.0</span>.0.1::5000 training/webapp python app.py</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 指定 UDP 协议</span></span>
<span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">127.0</span>.0.1:5000:5000/udp training/webapp python app.py</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查看端口映射" tabindex="-1"><a class="header-anchor" href="#查看端口映射"><span>查看端口映射</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 查看指定端口映射</span></span>
<span class="line"><span class="token function">docker</span> port nostalgic_morse <span class="token number">5000</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 查看容器所有端口映射</span></span>
<span class="line"><span class="token function">docker</span> port nostalgic_morse</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>注意：</strong></p><ul><li>每个端口只能绑定到一个容器</li><li>可以多次使用 <code>-p</code> 参数绑定多个端口</li><li>容器重启后端口映射会保持不变</li></ul></blockquote><h2 id="容器互联" tabindex="-1"><a class="header-anchor" href="#容器互联"><span>容器互联</span></a></h2><h3 id="创建网络" tabindex="-1"><a class="header-anchor" href="#创建网络"><span>创建网络</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 创建桥接网络</span></span>
<span class="line"><span class="token function">docker</span> network create <span class="token parameter variable">-d</span> bridge my-net</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 查看网络列表</span></span>
<span class="line"><span class="token function">docker</span> network <span class="token function">ls</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="连接容器" tabindex="-1"><a class="header-anchor" href="#连接容器"><span>连接容器</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 启动容器并连接到网络</span></span>
<span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token parameter variable">--rm</span> <span class="token parameter variable">--name</span> busybox1 <span class="token parameter variable">--network</span> my-net busybox <span class="token function">sh</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 启动第二个容器</span></span>
<span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token parameter variable">--rm</span> <span class="token parameter variable">--name</span> busybox2 <span class="token parameter variable">--network</span> my-net busybox <span class="token function">sh</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="测试连通性" tabindex="-1"><a class="header-anchor" href="#测试连通性"><span>测试连通性</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 在 busybox1 中测试</span></span>
<span class="line"><span class="token function">ping</span> busybox2</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 在 busybox2 中测试</span></span>
<span class="line"><span class="token function">ping</span> busybox1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dns-配置" tabindex="-1"><a class="header-anchor" href="#dns-配置"><span>DNS 配置</span></a></h2><h3 id="全局-dns-配置" tabindex="-1"><a class="header-anchor" href="#全局-dns-配置"><span>全局 DNS 配置</span></a></h3><p>编辑 <code>/etc/docker/daemon.json</code>：</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;dns&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token string">&quot;114.114.114.114&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;8.8.8.8&quot;</span></span>
<span class="line">  <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="容器-dns-配置" tabindex="-1"><a class="header-anchor" href="#容器-dns-配置"><span>容器 DNS 配置</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 设置容器的主机名</span></span>
<span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token parameter variable">--rm</span> <span class="token parameter variable">--hostname</span><span class="token operator">=</span>my-host centos:7</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 设置 DNS 服务器</span></span>
<span class="line"></span>
<span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token parameter variable">--rm</span> <span class="token parameter variable">--dns</span><span class="token operator">=</span><span class="token number">8.8</span>.8.8 centos:7</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 设置 DNS 搜索域</span></span>
<span class="line"></span>
<span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token parameter variable">--rm</span> --dns-search<span class="token operator">=</span>example.com centos:7</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="最佳实践" tabindex="-1"><a class="header-anchor" href="#最佳实践"><span>最佳实践</span></a></h2><ol><li><p>网络安全</p><ul><li>避免暴露不必要的端口</li><li>使用内部网络进行容器间通信</li><li>配置适当的防火墙规则</li></ul></li><li><p>网络性能</p><ul><li>使用 host 网络模式提高性能</li><li>合理规划网络拓扑</li><li>监控网络流量</li></ul></li><li><p>服务发现</p><ul><li>使用 Docker DNS 服务</li><li>考虑使用服务发现工具</li><li>实现健康检查机制</li></ul></li></ol><blockquote><p><strong>参考资料：</strong></p><ul><li><a href="https://docs.docker.com/network/" target="_blank" rel="noopener noreferrer">Docker 网络概述</a></li><li><a href="https://docs.docker.com/engine/reference/commandline/network/" target="_blank" rel="noopener noreferrer">Docker 网络命令</a></li></ul></blockquote>`,32))])}const j=t(d,[["render",B],["__file","Docker系列学习-14.使用网络.html.vue"]]),q=JSON.parse('{"path":"/flinux/Kubernetes/Docker%E7%B3%BB%E5%88%97%E5%AD%A6%E4%B9%A0/Docker%E7%B3%BB%E5%88%97%E5%AD%A6%E4%B9%A0-14.%E4%BD%BF%E7%94%A8%E7%BD%91%E7%BB%9C.html","title":"14. 使用网络","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"外部访问容器","slug":"外部访问容器","link":"#外部访问容器","children":[{"level":3,"title":"端口映射","slug":"端口映射","link":"#端口映射","children":[]},{"level":3,"title":"端口映射格式","slug":"端口映射格式","link":"#端口映射格式","children":[]},{"level":3,"title":"查看端口映射","slug":"查看端口映射","link":"#查看端口映射","children":[]}]},{"level":2,"title":"容器互联","slug":"容器互联","link":"#容器互联","children":[{"level":3,"title":"创建网络","slug":"创建网络","link":"#创建网络","children":[]},{"level":3,"title":"连接容器","slug":"连接容器","link":"#连接容器","children":[]},{"level":3,"title":"测试连通性","slug":"测试连通性","link":"#测试连通性","children":[]}]},{"level":2,"title":"DNS 配置","slug":"dns-配置","link":"#dns-配置","children":[{"level":3,"title":"全局 DNS 配置","slug":"全局-dns-配置","link":"#全局-dns-配置","children":[]},{"level":3,"title":"容器 DNS 配置","slug":"容器-dns-配置","link":"#容器-dns-配置","children":[]}]},{"level":2,"title":"最佳实践","slug":"最佳实践","link":"#最佳实践","children":[]}],"git":{"updatedTime":1709276200000,"contributors":[{"name":"Linkefou","username":"Linkefou","email":"wlh724567296@163.com","commits":1},{"name":"wanglinhao","username":"wanglinhao","email":"wanglinhao@wegooooo.com","commits":2}]},"filePathRelative":"flinux/Kubernetes/Docker系列学习/Docker系列学习-14.使用网络.md"}');export{j as comp,q as data};
