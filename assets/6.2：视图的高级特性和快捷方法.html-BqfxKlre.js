import{_ as n,c as a,f as e,o as l}from"./app-BCC5ysrj.js";const t={};function p(i,s){return l(),a("div",null,s[0]||(s[0]=[e(`<h1 id="_6-2-视图的高级特性和快捷方法" tabindex="-1"><a class="header-anchor" href="#_6-2-视图的高级特性和快捷方法"><span>6.2 视图的高级特性和快捷方法</span></a></h1><ul><li><a href="#62-%E8%A7%86%E5%9B%BE%E7%9A%84%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7%E5%92%8C%E5%BF%AB%E6%8D%B7%E6%96%B9%E6%B3%95">6.2 视图的高级特性和快捷方法</a><ul><li><a href="#621-url%E7%9A%84%E5%8F%8D%E5%90%91%E8%A7%A3%E6%9E%90">6.2.1 URL的反向解析</a><ul><li><a href="#reverse%E6%96%B9%E6%B3%95">reverse方法</a></li><li><a href="#%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4">命名空间</a></li></ul></li><li><a href="#622-%E8%A7%86%E5%9B%BE%E9%87%8D%E5%AE%9A%E5%90%91">6.2.2 视图重定向</a><ul><li><a href="#1-%E6%B0%B8%E4%B9%85%E9%87%8D%E5%AE%9A%E5%90%91%E5%92%8C%E4%B8%B4%E6%97%B6%E9%87%8D%E5%AE%9A%E5%90%91">1. 永久重定向和临时重定向</a></li><li><a href="#2-redirect%E6%96%B9%E6%B3%95">2. redirect()方法</a><ul><li><a href="#%E5%B8%A6%E6%9C%89get_absolute_url%E5%B1%9E%E6%80%A7%E6%96%B9%E6%B3%95%E7%9A%84%E5%AF%B9%E8%B1%A1">带有get_absolute_url属性(方法)的对象</a></li><li><a href="#%E4%BC%A0%E9%80%92url%E6%A8%A1%E5%BC%8F%E7%9A%84%E5%90%8D%E7%A7%B0">传递URL模式的名称</a></li><li><a href="#%E4%BC%A0%E9%80%92%E7%BB%9D%E5%AF%B9%E6%88%96%E7%9B%B8%E5%AF%B9url">传递绝对或相对URL</a></li></ul></li></ul></li><li><a href="#623-%E5%B8%B8%E7%94%A8%E7%9A%84%E5%BF%AB%E6%8D%B7%E6%96%B9%E6%B3%95">6.2.3 常用的快捷方法</a><ul><li><a href="#render">render</a></li><li><a href="#render_to_response">render_to_response</a></li><li><a href="#get_object_or_404">get_object_or_404</a></li><li><a href="#get_list_or_404">get_list_or_404</a></li></ul></li></ul></li></ul><hr><h2 id="_6-2-1-url的反向解析" tabindex="-1"><a class="header-anchor" href="#_6-2-1-url的反向解析"><span>6.2.1 URL的反向解析</span></a></h2><p>在处理业务需求的过程中可能会需要视图的URL模式，如返回重定向或在模板中用于链接到其他的视图。但是，由于URL可能随着业务调整发生变化，因此将URL硬编码到代码中并不友好。Django为了解决这个问题，提供了URL反向解析的方法，通过给URL模式命名即可反向解析得到完整的URL</p><h3 id="reverse方法" tabindex="-1"><a class="header-anchor" href="#reverse方法"><span>reverse方法</span></a></h3><ul><li>path方法：传递两个参数：URL模式和模式，path还支持接受一个<code>name</code>，用于指定当前URL模式的名字</li><li>URL的反向解析就可以利用这个指定的<code>name</code>去完成</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># post/urls.py</span></span>
<span class="line">urlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">    path<span class="token punctuation">(</span><span class="token string">&#39;dymmmic/&lt;int:year&gt;/&lt;mth:month&gt;/&lt;int:day&gt;/&#39;</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>dynamic_hello<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">&#39;dynamic_hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>利用reverse实现反向解析的定义 <ul><li>viewname：它可以是<code>URL模式的名字</code>，即<code>name</code>所指定的名称；也可以是可调用的视图对象，例如dynamic_hello视图</li><li>urlconf：这个属性用于决定当前的反向解析使用哪个<code>URLconf</code>模块，默认是根<code>URLconf</code></li><li>args：它用于传递参数，可以是元组或者列表，顺序填充URL中的位置参数</li><li>kwargs：它与args一样，也用于传递参数；但它是字典类型的，使用关键字指定参数和数值。<strong>需要注意，args与kwargs不可以同时出现</strong></li><li>current_app：它指示当前执行的视图所属的应用程序</li></ul></li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">reverse<span class="token punctuation">(</span>viewname<span class="token punctuation">,</span> urlconf<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> kwargs<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> current_app<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># post/views.py</span></span>
<span class="line"><span class="token keyword">from</span> django<span class="token punctuation">.</span>urls <span class="token keyword">import</span> reverse</span>
<span class="line"><span class="token keyword">def</span> <span class="token function">dynamic_hello_reverse</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">return</span> HttpResponseRedirect<span class="token punctuation">(</span>reverse<span class="token punctuation">(</span><span class="token string">&#39;dynamic_hello&#39;</span><span class="token punctuation">,</span>args<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">2018</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="命名空间" tabindex="-1"><a class="header-anchor" href="#命名空间"><span>命名空间</span></a></h3><ul><li>URL命名空间使得即使在不同的应用中定义了相同的URL名称，也能够反向解析到正确的URL</li><li>URL命名空间分为两部分： <ul><li>应用命名空间（app_name）：是正在部署的应用名称，应用的每一个实例都有相同的命令空间，可以通过app_name和name（URL名称）区分不同应用的URL，之间使用<code>:</code>连接</li><li>实例命名空间（namespace）：用来标识一个应用的特定实例，主要功能：区分同一个应用部署的多个不同实例</li></ul></li></ul><p>以例子举例，能容易理解</p><ul><li>项目的urls.py文件中给post应用添加namespace</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># urls.py</span></span>
<span class="line">path<span class="token punctuation">(</span><span class="token string">&#39;post/&#39;</span><span class="token punctuation">,</span> incluse<span class="token punctuation">(</span><span class="token string">&#39;post.urls&#39;</span><span class="token punctuation">,</span> namespace<span class="token operator">=</span><span class="token string">&#39;bbs_post&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在post应用的urls.py中给出app_name的声明</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># post/urls.py</span></span>
<span class="line">app_name<span class="token operator">=</span> <span class="token string">&#39;post&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>最后，修改dynamic_hello_reverse视图的定义</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># post/views.py</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">dynamic_hello_reverse</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token keyword">return</span> HttpResponseRedirect<span class="token punctuation">(</span>reverse<span class="token punctuation">(</span><span class="token string">&#39;post:dynamic_hello&#39;</span><span class="token punctuation">,</span>args<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">2022</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">)</span><span class="token punctuation">,</span>current_app<span class="token operator">=</span>request<span class="token punctuation">.</span>resolver_match<span class="token punctuation">.</span>namespace<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token comment"># HttpResponseRedirect 视图重定向</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://oss.moniter.top/blog/202210/20220928151612.png" alt="test_reverse"></p><h2 id="_6-2-2-视图重定向" tabindex="-1"><a class="header-anchor" href="#_6-2-2-视图重定向"><span>6.2.2 视图重定向</span></a></h2><ul><li>使用HttpResponseRedirect进行视图重定向</li><li>快捷方法：<code>redirect()</code>（django/shortcuts.py） <ul><li>除了传递URL，可以接受对象和视图完成重定向</li></ul></li></ul><h3 id="_1-永久重定向和临时重定向" tabindex="-1"><a class="header-anchor" href="#_1-永久重定向和临时重定向"><span>1. 永久重定向和临时重定向</span></a></h3><ul><li>302：临时重定向（HttpResponseRedirect响应的状态码是临时重定向），常用于：同一站点内的跳转，（如未登录用户访问页面重定向到登录页）</li><li>301：永久重定向，指被请求的资源已经永久移动到新的位置，将来任何对此资源的引用都应该使用本相应返回的若干URL之一，常用于：<strong>域名跳转</strong></li></ul><h3 id="_2-redirect-方法" tabindex="-1"><a class="header-anchor" href="#_2-redirect-方法"><span>2. redirect()方法</span></a></h3><ul><li>定义 <ul><li><code>redirect(to, *args, permanent=False, **kwargs)</code></li><li><code>*args</code>,<code>**kwargs</code>最终会传递到reverse方法中，是用来标注URL的参数</li><li><code>permanent=False</code>：实现302跳转，True：实现301跳转</li></ul></li><li>必填参数：<code>to</code>，接受三种类型的参数</li></ul><h4 id="带有get-absolute-url属性-方法-的对象" tabindex="-1"><a class="header-anchor" href="#带有get-absolute-url属性-方法-的对象"><span>带有get_absolute_url属性(方法)的对象</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">hello_redirect</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token keyword">class</span> <span class="token class-name">A</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token decorator annotation punctuation">@classmethod</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">get_absolute_url</span><span class="token punctuation">(</span>cls<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token keyword">return</span> <span class="token string">&#39;/post/topic_list&#39;</span></span>
<span class="line">  <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>A<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">此时访问：hello_redirect视图会跳转到topci_list视图(话题列表页)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><p>常见的用法：Model中定义get_absolute_url()方法，传递Model实例对象到redirect中，跳转到Model实例的详情信息页</p></li><li><p>例子：给Topic对象添加get_absolute_url()方法</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Topic</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token keyword">def</span> <span class="token function">get_absolute_url</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token string">&#39;/post/topic/%s&#39;</span> <span class="token operator">%</span> self<span class="token punctuation">.</span><span class="token builtin">id</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="传递url模式的名称" tabindex="-1"><a class="header-anchor" href="#传递url模式的名称"><span>传递URL模式的名称</span></a></h4><ul><li>即path中配置的name值（如果配置了命名空间，也需要指定）</li><li>内部实现是通过reverse方法反向解析得到URL</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">hello_redirect</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token keyword">return</span> redirect<span class="token punctuation">(</span><span class="token string">&#39;post:dynamic_hello&#39;</span><span class="token punctuation">,</span><span class="token number">2022</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="传递绝对或相对url" tabindex="-1"><a class="header-anchor" href="#传递绝对或相对url"><span>传递绝对或相对URL</span></a></h4><ul><li>直接指定跳转的位置</li><li>例子：直接指定重定向到话题列表页</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">hello_redirect</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token keyword">return</span> redirect<span class="token punctuation">(</span><span class="token string">&#39;/post/topic_list/&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>相对URL使用<code>./</code>或<code>../</code>，与文件系统路径类似</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">def</span> <span class="token function">hello_redirect</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token keyword">return</span> redirect<span class="token punctuation">(</span><span class="token string">&#39;./xxx/&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 当前的视图URL是 /post/hello_redirect/ 访问此连接会跳转到/post/hello_redirect/xxx/</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">hello_redirect2</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token keyword">return</span> redirect<span class="token punctuation">(</span><span class="token string">&#39;../topic_list/&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment"># 当前的视图URL是 /post/hello_redirect2/ 访问此连接会跳转到/post/topic_list/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-2-3-常用的快捷方法" tabindex="-1"><a class="header-anchor" href="#_6-2-3-常用的快捷方法"><span>6.2.3 常用的快捷方法</span></a></h2><h3 id="render" tabindex="-1"><a class="header-anchor" href="#render"><span>render</span></a></h3><ul><li><p>将给定的模块和上下文字典组合，渲染返回一个HttpResponse对象</p></li><li><p>定义</p><ul><li><code>render(request, template_name, context=None, content_type=None, status=None, using=None)</code></li></ul></li><li><p>必须参数：</p><ul><li>request：HttpReponse对象，视图函数的第一个参数</li><li>template_name：<strong>字符串或字符串列表</strong><ul><li>字符串：表示模板的完整路径</li><li>列表：按照顺序找到第一个存在的模板</li></ul></li></ul></li><li><p>可选参数：</p><ul><li>context：默认是一个<strong>空字典</strong>，通过传递它渲染模板</li><li>content_type：生成文档的MIME类型。默认为<code>DEFAULT_CONTENT_TYPE</code>设定的值</li><li>status：相应状态码。默认200</li><li>using：指定加载模板的模板引擎</li></ul></li><li><p>例子</p></li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">from</span> django<span class="token punctuation">.</span>shortcuts <span class="token keyword">import</span> render</span>
<span class="line"><span class="token keyword">def</span> <span class="token function">topic_list_view</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">  话题列表</span>
<span class="line">  :param request:</span>
<span class="line">  :return:</span>
<span class="line">  &quot;&quot;&quot;</span></span>
<span class="line">  topic_qs <span class="token operator">=</span> Topic<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  result <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&#39;count&#39;</span><span class="token punctuation">:</span> topic_qs<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;info&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>build_topic_base_info<span class="token punctuation">(</span>topic<span class="token punctuation">)</span> <span class="token keyword">for</span> topic <span class="token keyword">in</span> topic_qs<span class="token punctuation">]</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">return</span> render<span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token string">&#39;post/topic_list.html&#39;</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="render-to-response" tabindex="-1"><a class="header-anchor" href="#render-to-response"><span>render_to_response</span></a></h3><ul><li>功能与render一样，根据一个给定的上下文字典渲染模板并返回HttpResponse</li><li>定义 <ul><li><code>render_to_response(template_name, context=None, content_type=None, status=None, using=None)</code></li></ul></li><li>没有传递request，在模板中的使用会受到一定的限制 <ul><li>如不能直接通过request对象获取它的相关属性</li></ul></li></ul><blockquote><p>此方法可能被弃用，应该优先考虑render方法</p></blockquote><h3 id="get-object-or-404" tabindex="-1"><a class="header-anchor" href="#get-object-or-404"><span>get_object_or_404</span></a></h3><ul><li>通过Model对象的get方法获取实例对象，当实例不存在的时候，自动捕捉DoesNotExist异常，并返回404响应</li><li>定义 <ul><li><code>get_object_or_404(klass, *args, **kwargs)</code></li></ul></li><li><code>*args, **kwargs</code>：是查询对象时用到的查询参数，应该是get和filter可以接受的格式</li><li><code>klass</code>：可以使Model对象，Manager或QuerySet实例</li></ul><blockquote><p>get_object_or_404不会抛出DoesNotExist异常，但是如果传递的条件匹配了多个实例对象，则仍然会抛出MultipleObjectsReturned异常</p></blockquote><ul><li>例子</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">from</span> django<span class="token punctuation">.</span>shortcuts <span class="token keyword">import</span> get_object_or_404</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 传递 Topic</span></span>
<span class="line">get_object_or_404<span class="token punctuation">(</span>Topic<span class="token punctuation">,</span> pk<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment"># 这个方法在正常执行时返回的是Model实例对象，并不是HttpResponse</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 传递 Manager实例</span></span>
<span class="line">get_object_or_404<span class="token punctuation">(</span>Topci<span class="token punctuation">.</span>objects<span class="token punctuation">,</span> pk<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 传递 QuerySet实例</span></span>
<span class="line">topic_qs <span class="token operator">=</span> Topic<span class="token punctuation">.</span><span class="token builtin">object</span><span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>id__gte<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">get_object_or_404<span class="token punctuation">(</span>topic_qs<span class="token punctuation">,</span> pk<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="get-list-or-404" tabindex="-1"><a class="header-anchor" href="#get-list-or-404"><span>get_list_or_404</span></a></h3><ul><li>用来获取Model实例对象的列表，当获取的结果为空，返回404响应</li><li>定义 <ul><li><code>get_list_or_404(klass, *args, **kwargs)</code></li></ul></li><li>匹配的时候，使用的是filter方法而不是get方法</li><li>例子</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">from</span> post<span class="token punctuation">.</span>models <span class="token keyword">import</span> Topic</span>
<span class="line"><span class="token keyword">from</span> django<span class="token punctuation">.</span>shortcuts <span class="token keyword">import</span> get_list_or_404</span>
<span class="line">get_list_or_404<span class="token punctuation">(</span>Topic<span class="token punctuation">)</span> </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>get_object_or_404 和 get_list_or_404 常用于<strong>不考虑“兼容”的场景中</strong>，即匹配不到实例对象就返回找不到资源（404）。这两个方法会比自己去查询校验并返回404响应要简单很多，所以，如果需要这样的场景，就首先考虑使用它们</p></blockquote>`,55)]))}const c=n(t,[["render",p],["__file","6.2：视图的高级特性和快捷方法.html.vue"]]),r=JSON.parse('{"path":"/fpython/htmlsystem/Django/chapter-06%EF%BC%9A%E8%A7%86%E5%9B%BE/6.2%EF%BC%9A%E8%A7%86%E5%9B%BE%E7%9A%84%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7%E5%92%8C%E5%BF%AB%E6%8D%B7%E6%96%B9%E6%B3%95.html","title":"6.2 视图的高级特性和快捷方法","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"6.2.1 URL的反向解析","slug":"_6-2-1-url的反向解析","link":"#_6-2-1-url的反向解析","children":[{"level":3,"title":"reverse方法","slug":"reverse方法","link":"#reverse方法","children":[]},{"level":3,"title":"命名空间","slug":"命名空间","link":"#命名空间","children":[]}]},{"level":2,"title":"6.2.2 视图重定向","slug":"_6-2-2-视图重定向","link":"#_6-2-2-视图重定向","children":[{"level":3,"title":"1. 永久重定向和临时重定向","slug":"_1-永久重定向和临时重定向","link":"#_1-永久重定向和临时重定向","children":[]},{"level":3,"title":"2. redirect()方法","slug":"_2-redirect-方法","link":"#_2-redirect-方法","children":[]}]},{"level":2,"title":"6.2.3 常用的快捷方法","slug":"_6-2-3-常用的快捷方法","link":"#_6-2-3-常用的快捷方法","children":[{"level":3,"title":"render","slug":"render","link":"#render","children":[]},{"level":3,"title":"render_to_response","slug":"render-to-response","link":"#render-to-response","children":[]},{"level":3,"title":"get_object_or_404","slug":"get-object-or-404","link":"#get-object-or-404","children":[]},{"level":3,"title":"get_list_or_404","slug":"get-list-or-404","link":"#get-list-or-404","children":[]}]}],"git":{"updatedTime":1735029308000,"contributors":[{"name":"Linkefou","username":"Linkefou","email":"wlh724567296@163.com","commits":1},{"name":"wanglinhao","username":"wanglinhao","email":"wanglinhao@wegooooo.com","commits":3}]},"filePathRelative":"fpython/htmlsystem/Django/chapter-06：视图/6.2：视图的高级特性和快捷方法.md"}');export{c as comp,r as data};
