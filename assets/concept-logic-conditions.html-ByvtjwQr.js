import{_ as p,c as o,a as n,d as e,e as t,f as i,r as c,o as r,b as l}from"./app-BCC5ysrj.js";const d={},u={class:"vuepress-toc"},k={class:"vuepress-toc-item"},v={class:"vuepress-toc-item"},m={class:"vuepress-toc-item"},h={class:"vuepress-toc-item"},b={class:"vuepress-toc-item"},g={class:"vuepress-toc-item"},f={class:"vuepress-toc-item"},y={class:"vuepress-toc-item"},w={class:"vuepress-toc-item"},q={class:"vuepress-toc-item"};function x(_,s){const a=c("router-link");return r(),o("div",null,[s[10]||(s[10]=n("h1",{id:"逻辑判断与条件语句",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#逻辑判断与条件语句"},[n("span",null,"逻辑判断与条件语句")])],-1)),n("nav",u,[n("ul",null,[n("li",k,[e(a,{to:"#逻辑运算符"},{default:t(()=>s[0]||(s[0]=[l("逻辑运算符")])),_:1}),n("ul",null,[n("li",v,[e(a,{to:"#and-运算符"},{default:t(()=>s[1]||(s[1]=[l("and 运算符")])),_:1})]),n("li",m,[e(a,{to:"#or-运算符"},{default:t(()=>s[2]||(s[2]=[l("or 运算符")])),_:1})]),n("li",h,[e(a,{to:"#not-运算符"},{default:t(()=>s[3]||(s[3]=[l("not 运算符")])),_:1})])])]),n("li",b,[e(a,{to:"#条件语句"},{default:t(()=>s[4]||(s[4]=[l("条件语句")])),_:1}),n("ul",null,[n("li",g,[e(a,{to:"#if-语句"},{default:t(()=>s[5]||(s[5]=[l("if 语句")])),_:1})]),n("li",f,[e(a,{to:"#elif-语句"},{default:t(()=>s[6]||(s[6]=[l("elif 语句")])),_:1})]),n("li",y,[e(a,{to:"#else-语句"},{default:t(()=>s[7]||(s[7]=[l("else 语句")])),_:1})])])]),n("li",w,[e(a,{to:"#嵌套条件"},{default:t(()=>s[8]||(s[8]=[l("嵌套条件")])),_:1})]),n("li",q,[e(a,{to:"#应用场景"},{default:t(()=>s[9]||(s[9]=[l("应用场景")])),_:1})])])]),s[11]||(s[11]=i(`<p>在编程中，逻辑判断和条件语句是控制程序流程的关键工具。Python 提供了简单而强大的逻辑判断机制，使得编写条件逻辑变得直观和高效。本文将详细介绍 Python 中的逻辑判断、条件语句及其应用场景。</p><h2 id="逻辑运算符" tabindex="-1"><a class="header-anchor" href="#逻辑运算符"><span>逻辑运算符</span></a></h2><p>Python 提供了三种基本的逻辑运算符：<code>and</code>、<code>or</code> 和 <code>not</code>，用于构建复杂的条件表达式。</p><h3 id="and-运算符" tabindex="-1"><a class="header-anchor" href="#and-运算符"><span><code>and</code> 运算符</span></a></h3><p><code>and</code> 运算符用于连接两个条件表达式，只有当两个条件都为真时，结果才为真。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">a <span class="token operator">=</span> <span class="token number">5</span></span>
<span class="line">b <span class="token operator">=</span> <span class="token number">10</span></span>
<span class="line"><span class="token keyword">if</span> a <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token keyword">and</span> b <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;a 和 b 都是正数&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="or-运算符" tabindex="-1"><a class="header-anchor" href="#or-运算符"><span><code>or</code> 运算符</span></a></h3><p><code>or</code> 运算符用于连接两个条件表达式，只要有一个条件为真，结果就为真。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">a <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">5</span></span>
<span class="line">b <span class="token operator">=</span> <span class="token number">10</span></span>
<span class="line"><span class="token keyword">if</span> a <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token keyword">or</span> b <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;a 或 b 是正数&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="not-运算符" tabindex="-1"><a class="header-anchor" href="#not-运算符"><span><code>not</code> 运算符</span></a></h3><p><code>not</code> 运算符用于取反，将真值变为假，将假值变为真。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">a <span class="token operator">=</span> <span class="token number">5</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token keyword">not</span> a <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;a 不是负数&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="条件语句" tabindex="-1"><a class="header-anchor" href="#条件语句"><span>条件语句</span></a></h2><p>条件语句用于根据条件的真假来决定程序的执行路径。Python 提供了 <code>if</code>、<code>elif</code> 和 <code>else</code> 语句来实现条件判断。</p><h3 id="if-语句" tabindex="-1"><a class="header-anchor" href="#if-语句"><span><code>if</code> 语句</span></a></h3><p><code>if</code> 语句用于判断条件是否为真，如果为真，则执行相应的代码块。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">age <span class="token operator">=</span> <span class="token number">18</span></span>
<span class="line"><span class="token keyword">if</span> age <span class="token operator">&gt;=</span> <span class="token number">18</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;你是成年人&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="elif-语句" tabindex="-1"><a class="header-anchor" href="#elif-语句"><span><code>elif</code> 语句</span></a></h3><p><code>elif</code> 语句用于在 <code>if</code> 条件不满足时，检查其他条件。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">age <span class="token operator">=</span> <span class="token number">16</span></span>
<span class="line"><span class="token keyword">if</span> age <span class="token operator">&gt;=</span> <span class="token number">18</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;你是成年人&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">elif</span> age <span class="token operator">&gt;=</span> <span class="token number">13</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;你是青少年&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="else-语句" tabindex="-1"><a class="header-anchor" href="#else-语句"><span><code>else</code> 语句</span></a></h3><p><code>else</code> 语句用于在所有条件都不满足时，执行默认的代码块。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">age <span class="token operator">=</span> <span class="token number">10</span></span>
<span class="line"><span class="token keyword">if</span> age <span class="token operator">&gt;=</span> <span class="token number">18</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;你是成年人&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">elif</span> age <span class="token operator">&gt;=</span> <span class="token number">13</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;你是青少年&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;你是儿童&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="嵌套条件" tabindex="-1"><a class="header-anchor" href="#嵌套条件"><span>嵌套条件</span></a></h2><p>条件语句可以嵌套使用，以处理更复杂的逻辑。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">age <span class="token operator">=</span> <span class="token number">20</span></span>
<span class="line">gender <span class="token operator">=</span> <span class="token string">&quot;female&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> age <span class="token operator">&gt;=</span> <span class="token number">18</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">if</span> gender <span class="token operator">==</span> <span class="token string">&quot;female&quot;</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;你是成年女性&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;你是成年男性&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;你是未成年人&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="应用场景" tabindex="-1"><a class="header-anchor" href="#应用场景"><span>应用场景</span></a></h2><ul><li><strong>逻辑判断</strong>：适用于需要根据多个条件进行判断的场景，如用户输入验证、权限检查。</li><li><strong>条件语句</strong>：适用于需要根据条件执行不同代码块的场景，如菜单选择、状态管理。</li></ul>`,28))])}const N=p(d,[["render",x],["__file","concept-logic-conditions.html.vue"]]),P=JSON.parse('{"path":"/fpython/library/concept/concept-logic-conditions.html","title":"逻辑判断与条件语句","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"逻辑运算符","slug":"逻辑运算符","link":"#逻辑运算符","children":[{"level":3,"title":"and 运算符","slug":"and-运算符","link":"#and-运算符","children":[]},{"level":3,"title":"or 运算符","slug":"or-运算符","link":"#or-运算符","children":[]},{"level":3,"title":"not 运算符","slug":"not-运算符","link":"#not-运算符","children":[]}]},{"level":2,"title":"条件语句","slug":"条件语句","link":"#条件语句","children":[{"level":3,"title":"if 语句","slug":"if-语句","link":"#if-语句","children":[]},{"level":3,"title":"elif 语句","slug":"elif-语句","link":"#elif-语句","children":[]},{"level":3,"title":"else 语句","slug":"else-语句","link":"#else-语句","children":[]}]},{"level":2,"title":"嵌套条件","slug":"嵌套条件","link":"#嵌套条件","children":[]},{"level":2,"title":"应用场景","slug":"应用场景","link":"#应用场景","children":[]}],"git":{"updatedTime":1735029308000,"contributors":[{"name":"wanglinhao","username":"wanglinhao","email":"wanglinhao@wegooooo.com","commits":2}]},"filePathRelative":"fpython/library/concept/concept-logic-conditions.md"}');export{N as comp,P as data};
