import{_ as p,c as o,a as s,d as e,e as t,f as i,r as c,o as r,b as l}from"./app-BCC5ysrj.js";const u={},d={class:"vuepress-toc"},k={class:"vuepress-toc-item"},m={class:"vuepress-toc-item"},h={class:"vuepress-toc-item"},v={class:"vuepress-toc-item"},f={class:"vuepress-toc-item"};function g(b,n){const a=c("router-link");return r(),o("div",null,[n[5]||(n[5]=s("h1",{id:"python-从文件逐行读取数据",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#python-从文件逐行读取数据"},[s("span",null,"Python: 从文件逐行读取数据")])],-1)),s("nav",d,[s("ul",null,[s("li",k,[e(a,{to:"#文件读取方法"},{default:t(()=>n[0]||(n[0]=[l("文件读取方法")])),_:1}),s("ul",null,[s("li",m,[e(a,{to:"#方法-1-readline"},{default:t(()=>n[1]||(n[1]=[l("方法 1: readline()")])),_:1})]),s("li",h,[e(a,{to:"#方法-2-for-循环迭代"},{default:t(()=>n[2]||(n[2]=[l("方法 2: for 循环迭代")])),_:1})]),s("li",v,[e(a,{to:"#方法-3-readlines"},{default:t(()=>n[3]||(n[3]=[l("方法 3: readlines()")])),_:1})])])]),s("li",f,[e(a,{to:"#最佳实践"},{default:t(()=>n[4]||(n[4]=[l("最佳实践")])),_:1})])])]),n[6]||(n[6]=i(`<hr><h2 id="文件读取方法" tabindex="-1"><a class="header-anchor" href="#文件读取方法"><span>文件读取方法</span></a></h2><h3 id="方法-1-readline" tabindex="-1"><a class="header-anchor" href="#方法-1-readline"><span>方法 1: readline()</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 使用 with 语句自动关闭文件</span></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;文件路径&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span></span>
<span class="line">        line <span class="token operator">=</span> f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token keyword">not</span> line<span class="token punctuation">:</span>  <span class="token comment"># 到达文件末尾</span></span>
<span class="line">            <span class="token keyword">break</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span>line<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># strip() 去除换行符</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="方法-2-for-循环迭代" tabindex="-1"><a class="header-anchor" href="#方法-2-for-循环迭代"><span>方法 2: for 循环迭代</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 直接迭代文件对象</span></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;文件路径&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">for</span> line <span class="token keyword">in</span> f<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span>line<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="方法-3-readlines" tabindex="-1"><a class="header-anchor" href="#方法-3-readlines"><span>方法 3: readlines()</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 一次性读取所有行</span></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;文件路径&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">    lines <span class="token operator">=</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">for</span> line <span class="token keyword">in</span> lines<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span>line<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="最佳实践" tabindex="-1"><a class="header-anchor" href="#最佳实践"><span>最佳实践</span></a></h2><ol><li><p><strong>文件打开方式</strong></p><ul><li>使用 <code>with</code> 语句自动关闭文件</li><li>指定正确的编码方式</li><li>使用适当的打开模式(r/w/a)</li></ul></li><li><p><strong>性能考虑</strong></p><ul><li>大文件使用逐行读取</li><li>小文件可以一次性读取</li><li>注意内存使用</li></ul></li></ol><blockquote><p><strong>注意：</strong></p><ul><li>记得处理文件编码</li><li>注意换行符处理</li><li>大文件避免使用 readlines()</li></ul></blockquote>`,11))])}const w=p(u,[["render",g],["__file","Python-从文件逐行读取数据.html.vue"]]),_=JSON.parse('{"path":"/fpython/example/Python-%E4%BB%8E%E6%96%87%E4%BB%B6%E9%80%90%E8%A1%8C%E8%AF%BB%E5%8F%96%E6%95%B0%E6%8D%AE.html","title":"Python: 从文件逐行读取数据","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"文件读取方法","slug":"文件读取方法","link":"#文件读取方法","children":[{"level":3,"title":"方法 1: readline()","slug":"方法-1-readline","link":"#方法-1-readline","children":[]},{"level":3,"title":"方法 2: for 循环迭代","slug":"方法-2-for-循环迭代","link":"#方法-2-for-循环迭代","children":[]},{"level":3,"title":"方法 3: readlines()","slug":"方法-3-readlines","link":"#方法-3-readlines","children":[]}]},{"level":2,"title":"最佳实践","slug":"最佳实践","link":"#最佳实践","children":[]}],"git":{"updatedTime":1735029308000,"contributors":[{"name":"Linkefou","username":"Linkefou","email":"wlh724567296@163.com","commits":1},{"name":"wanglinhao","username":"wanglinhao","email":"wanglinhao@wegooooo.com","commits":4}]},"filePathRelative":"fpython/example/Python-从文件逐行读取数据.md"}');export{w as comp,_ as data};
