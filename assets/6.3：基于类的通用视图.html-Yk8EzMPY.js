import{_ as t,c as p,f as a,a as s,b as e,t as l,o as i}from"./app-BCC5ysrj.js";const c={};function o(u,n){return i(),p("div",null,[n[3]||(n[3]=a(`<h1 id="_6-3-基于类的通用视图" tabindex="-1"><a class="header-anchor" href="#_6-3-基于类的通用视图"><span>6.3 基于类的通用视图</span></a></h1><ul><li><a href="#63-%E5%9F%BA%E4%BA%8E%E7%B1%BB%E7%9A%84%E9%80%9A%E7%94%A8%E8%A7%86%E5%9B%BE">6.3 基于类的通用视图</a><ul><li><a href="#631-%E7%94%A8%E4%BA%8E%E6%B8%B2%E6%9F%93%E6%A8%A1%E6%9D%BF%E7%9A%84templateview">6.3.1 用于渲染模板的TemplateView</a><ul><li><a href="#django%E6%9F%A5%E6%89%BEtemplate%E7%9A%84%E7%AD%96%E7%95%A5">Django查找Template的策略</a><ul><li><a href="#%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BB%BA%E8%AE%AE%E4%BD%BF%E7%94%A8templateview">为什么建议使用TemplateView</a></li><li><a href="#%E5%85%B7%E4%BD%93%E7%A4%BA%E4%BE%8B%E4%BB%A3%E7%A0%81">具体示例代码</a></li></ul></li></ul></li><li><a href="#632-%E7%94%A8%E4%BA%8E%E9%87%8D%E5%AE%9A%E5%90%91%E7%9A%84redirectview">6.3.2 用于重定向的RedirectView</a></li><li><a href="#633-%E7%94%A8%E4%BA%8E%E5%B1%95%E7%A4%BAmodel%E5%88%97%E8%A1%A8%E7%9A%84listview">6.3.3 用于展示Model列表的ListView</a><ul><li><a href="#baselistview">BaseListView</a></li></ul></li><li><a href="#634-%E5%B1%95%E7%A4%BAmodel%E8%AF%A6%E6%83%85%E7%9A%84detailview">6.3.4 展示Model详情的DetailView</a></li></ul></li></ul><hr><h2 id="_6-3-1-用于渲染模板的templateview" tabindex="-1"><a class="header-anchor" href="#_6-3-1-用于渲染模板的templateview"><span>6.3.1 用于渲染模板的TemplateView</span></a></h2><ul><li>当视图中没有复杂的业务逻辑，如系统的引导页面，欢迎页面等，使用TemplateView是明智的选择</li><li>TemplateView的定义 <ul><li><code>class TemplateView(TemplateResponseMixin, ContextMixin, View)</code></li></ul></li><li>ContextMixin：这个类中定义了一个方法：get_context_data。它返回一个字典对象，用于渲染模板上下文。通常，在使用TemplateView时都会重写这个方法，给模板提供上下文数据</li><li>TemplateResponseMixin：这个类中定义了两个重要的属性：template_name和render_to_response方法。其中： <ul><li>template_name用于指定模板路径，它是必须要提供的</li><li>render_to_response方法根据模板路径和上下文数据（context）返回TemplateResponse</li></ul></li></ul><h3 id="django查找template的策略" tabindex="-1"><a class="header-anchor" href="#django查找template的策略"><span>Django查找Template的策略</span></a></h3><ul><li>项目的settings.py 文件可以找到<code>TEMPLATES</code></li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># settings</span></span>
<span class="line">TEMPLATES <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&#39;BACKEND&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;django.template.backends.django.DjangoTemplates&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&#39;DIRS&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&#39;APP_DIRS&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&#39;OPTIONS&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token string">&#39;context_processors&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span></span>
<span class="line">                <span class="token string">&#39;django.template.context_processors.debug&#39;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token string">&#39;django.template.context_processors.request&#39;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token string">&#39;django.contrib.auth.context_processors.auth&#39;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token string">&#39;django.contrib.messages.context_processors.messages&#39;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>APP_DIRS默认为True（搜索应用下的template目录）；False：需要设置DIRS指定模板的位置</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># settings.py</span></span>
<span class="line"><span class="token string">&#39;DIRS&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_DIR<span class="token punctuation">,</span> <span class="token string">&#39;templates&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,10)),s("ul",null,[n[2]||(n[2]=s("li",null,"当设置了DIRS和APP_DIRS=True，也会使用DIRS指定路径下模板文件",-1)),s("li",null,[n[1]||(n[1]=e("例子： ")),s("ul",null,[s("li",null,"“"+l()+"”是Django模板系统中引用变量的形式，在使用当前的模板时，context需要包含hello。另外，当前模板文件的完整路径是my_bbs/post/templates/post/index.html",1),n[0]||(n[0]=s("li",null,"利用TemplateView实例对index.html的渲染",-1))])])]),n[4]||(n[4]=a(`<div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># views.html</span></span>
<span class="line"><span class="token keyword">from</span> django<span class="token punctuation">.</span>views<span class="token punctuation">.</span>generic <span class="token keyword">import</span> TemplateView</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">IndexView</span><span class="token punctuation">(</span>TemplateView<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    template_name <span class="token operator">=</span> <span class="token string">&#39;post/index.html&#39;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">get_context_data</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        context <span class="token operator">=</span> <span class="token builtin">super</span><span class="token punctuation">(</span>IndexView<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>get_context_data<span class="token punctuation">(</span><span class="token operator">**</span>kwargs<span class="token punctuation">)</span></span>
<span class="line">        context<span class="token punctuation">[</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;Hello Django BBS post APP&#39;</span></span>
<span class="line">        <span class="token keyword">return</span> context</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重写了get_context_data方法，并在上下文字典中加入了hello， 所以，index.html模板渲染的结果就是：Hello Django BBS。</p><p>最后，还需要给IndexView配置URL模式，在post/urls.py文件中添加路由指向</p><h4 id="为什么建议使用templateview" tabindex="-1"><a class="header-anchor" href="#为什么建议使用templateview"><span>为什么建议使用TemplateView</span></a></h4><p>为什么Django还要提供TemplateView这个通用视图呢？<br> 类的特点是抽象，将共性抽离出来，再利用继承去实现特定的逻辑，可以在很大程度上实现代码复用。而这一点对于函数来说，是很难做到的。虽然可以使用装饰器给函数添加额外的功能，但是这也增加了代码实现的难度和复杂性。<br> 对于通用视图来说，使用它们的优势是可以更加专注地实现业务逻辑，避免了两类样板式的代码。</p><p>第一类，对应HTTP请求类型的同名（小写）请求方法。例如，IndexView中并没有提供get方法，但是可以接受GET请求。</p><p>第二类，返回HttpResponse对象。同样，也没有在IndexView中返回任何响应，这也是在TemplateView中完成的。</p><p>TemplateView是Django提供的一个最简单的通用视图，用于展示给定的模板，但是，不应该在这里实现创建或更新对象的操作</p><h4 id="具体示例代码" tabindex="-1"><a class="header-anchor" href="#具体示例代码"><span>具体示例代码</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># settings.py</span></span>
<span class="line"><span class="token keyword">import</span> os</span>
<span class="line">BASE_DIR <span class="token operator">=</span> Path<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">.</span>resolve<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>parent<span class="token punctuation">.</span>parent</span>
<span class="line">TEMPLATES <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&#39;BACKEND&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;django.template.backends.django.DjangoTemplates&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&#39;DIRS&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_DIR<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;templates&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&#39;APP_DIRS&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&#39;OPTIONS&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token string">&#39;context_processors&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span></span>
<span class="line">                <span class="token string">&#39;django.template.context_processors.debug&#39;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token string">&#39;django.template.context_processors.request&#39;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token string">&#39;django.contrib.auth.context_processors.auth&#39;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token string">&#39;django.contrib.messages.context_processors.messages&#39;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># post/urls.py</span></span>
<span class="line"><span class="token keyword">from</span> django<span class="token punctuation">.</span>urls <span class="token keyword">import</span> path</span>
<span class="line"><span class="token keyword">from</span> post <span class="token keyword">import</span> views</span>
<span class="line">urlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">  path<span class="token punctuation">(</span><span class="token string">&#39;index/&#39;</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>IndexView<span class="token punctuation">.</span>as_view<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token comment"># View的as_view方法给出视图类的可调用入口</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># post/views.py</span></span>
<span class="line"><span class="token comment"># 基于类的视图</span></span>
<span class="line"><span class="token keyword">from</span> django<span class="token punctuation">.</span>views<span class="token punctuation">.</span>generic <span class="token keyword">import</span> TemplateView</span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">IndexView</span><span class="token punctuation">(</span>TemplateView<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># template_name = &#39;post/index.html&#39;  # 除了指定template_name参数，还可以通过函数来获取模板的路径</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">get_template_names</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&#39;post/index.html&#39;</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">get_context_data</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        context <span class="token operator">=</span> <span class="token builtin">super</span><span class="token punctuation">(</span>IndexView<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>get_context_data<span class="token punctuation">(</span><span class="token operator">**</span>kwargs<span class="token punctuation">)</span></span>
<span class="line">        context<span class="token punctuation">[</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;Hello Django BBS templates for view&#39;</span></span>
<span class="line">        <span class="token keyword">return</span> context</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 不使用TemplateView，而使用视图函数的形式，也可实现相同的功能</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">index_view</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">return</span> render<span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token string">&#39;post/index.html&#39;</span><span class="token punctuation">,</span> context<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;Hello Django BBS Template for class&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-3-2-用于重定向的redirectview" tabindex="-1"><a class="header-anchor" href="#_6-3-2-用于重定向的redirectview"><span>6.3.2 用于重定向的RedirectView</span></a></h2><p>重定向通用类视图：RedirectView（django/views/generic/base.py）文件中</p><p>RedirectView定义了四个类属性和两个方法</p><ul><li><p>permanent：标识是否使用永久重定向，默认为False（302），True（301）</p></li><li><p>url：重定向的地址</p></li><li><p>pattern_name：重定向目标URL模式的名称（path中的name参数）</p><ul><li>url和pattern_name至少需要提供一个</li></ul></li><li><p>query_string：是否将查询字符串拼接到新地址中，默认False（丢弃原地址中的查询字符串）</p></li><li><p>通常使用RedirectView实现重定向都会重写get_redirect_url方法，在其内部完成视图的业务逻辑，并返回重定向的地址 <img src="https://oss.moniter.top/blog/202210/20221008161444.png" alt="get_redirect_url"></p></li><li><p>TemplateView和RedirectView在构建视图中相当有用，能将视图的功能表达的更为简单直接，隐藏了样式的重复代码</p></li></ul><h2 id="_6-3-3-用于展示model列表的listview" tabindex="-1"><a class="header-anchor" href="#_6-3-3-用于展示model列表的listview"><span>6.3.3 用于展示Model列表的ListView</span></a></h2><ul><li>展示Model列表的视图在任何一个应用中都会存在，而且会出现多次</li><li>ListView的两个特性 <ul><li>可以不提供模板名称，使用默认的规则 <ul><li>例如Topic默认的模板名称为：post/topic_list.html</li></ul></li><li>提供了template_name，则会使用自定义的模板</li></ul></li></ul><h3 id="baselistview" tabindex="-1"><a class="header-anchor" href="#baselistview"><span>BaseListView</span></a></h3><ul><li><p>BaseListView只是为GET请求类型定义了get方法，其中get_queryset、get_allow_empty和get_context_data都来自它的父类MultipleObjectMixin <img src="https://oss.moniter.top/blog/202210/20221008164118.png" alt="get_queryset"></p></li><li><p>get_queryset()：获取视图展示的Model列表，返回值必须是可迭代的对象，却可以是QuerySet</p><ul><li>如果提供的queryset是一个Model列表，那么，它并不包含model属性，因此，需要自定义模板名称</li></ul></li><li><p>get_allow_empty()：返回allow_empty属性，它是一个布尔值，默认是True，代表允许展示空的Model列表。如果设置为False，且Model列表为空，则会返回404</p></li><li><p>get_context_data()：返回用于渲染模板的上下文数据</p><ul><li><img src="https://oss.moniter.top/blog/202210/20221008164502.png" alt="get_context_data"></li><li>object_list参数即get_queryset方法的返回值，如果它有model属性，那么这个方法会返回model名称与list拼接得到的字符串（在没有设置context_object_name的情况下）。例如，对于Topic来说，这里的返回值就是topic_list</li></ul></li></ul><h2 id="_6-3-4-展示model详情的detailview" tabindex="-1"><a class="header-anchor" href="#_6-3-4-展示model详情的detailview"><span>6.3.4 展示Model详情的DetailView</span></a></h2><ul><li><p>定义了规则生成默认的模板名称：app_label/model_name_detail.html</p></li><li><p>继承自：BaseDetailView</p></li><li><p>重新实现Topic详情视图</p></li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># view.py</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">TopicDetailView</span><span class="token punctuation">(</span>DetailView<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    model <span class="token operator">=</span> Topic</span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">get_context_data</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        context <span class="token operator">=</span> <span class="token builtin">super</span><span class="token punctuation">(</span>TopicDetailView<span class="token punctuation">,</span>self<span class="token punctuation">)</span><span class="token punctuation">.</span>get_context_data<span class="token punctuation">(</span><span class="token operator">**</span>kwargs<span class="token punctuation">)</span></span>
<span class="line">        pk <span class="token operator">=</span> self<span class="token punctuation">.</span>kwargs<span class="token punctuation">.</span>get<span class="token punctuation">(</span>self<span class="token punctuation">.</span>pk_url_kwarg<span class="token punctuation">)</span></span>
<span class="line">        context<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token string">&#39;comment_list&#39;</span><span class="token punctuation">:</span> Comment<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>topic<span class="token operator">=</span>pk<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> context</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># urls.py</span></span>
<span class="line">urlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">    path<span class="token punctuation">(</span><span class="token string">&#39;topic_views/&lt;int:pk&gt;/&#39;</span><span class="token punctuation">,</span>views<span class="token punctuation">.</span>TopicDetailView<span class="token punctuation">.</span>as_view<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token comment">&lt;!-- topic_detail.html --&gt;</span></span>
<span class="line"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">{% block content %}</span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>Topic Detail<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>(id): {{ topic.id }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>(title): {{ topic.title }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>(content): {{ topic.content }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>(user): {{ topic.user.username }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>(created_time): {{ topic.created_time }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>(last_modified): {{ topic.last_modified }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>(评论):</span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>评论id<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>赞同<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">&gt;</span></span>返回<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            {% for comment in comment_list %}</span>
<span class="line">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>{{ comment.id }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>{{ comment.content }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>{{ comment.up }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>{{ comment.down }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            {% endfor %}</span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">{% endblock %}</span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,25))])}const r=t(c,[["render",o],["__file","6.3：基于类的通用视图.html.vue"]]),k=JSON.parse('{"path":"/fpython/htmlsystem/Django/chapter-06%EF%BC%9A%E8%A7%86%E5%9B%BE/6.3%EF%BC%9A%E5%9F%BA%E4%BA%8E%E7%B1%BB%E7%9A%84%E9%80%9A%E7%94%A8%E8%A7%86%E5%9B%BE.html","title":"6.3 基于类的通用视图","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"6.3.1 用于渲染模板的TemplateView","slug":"_6-3-1-用于渲染模板的templateview","link":"#_6-3-1-用于渲染模板的templateview","children":[{"level":3,"title":"Django查找Template的策略","slug":"django查找template的策略","link":"#django查找template的策略","children":[]}]},{"level":2,"title":"6.3.2 用于重定向的RedirectView","slug":"_6-3-2-用于重定向的redirectview","link":"#_6-3-2-用于重定向的redirectview","children":[]},{"level":2,"title":"6.3.3 用于展示Model列表的ListView","slug":"_6-3-3-用于展示model列表的listview","link":"#_6-3-3-用于展示model列表的listview","children":[{"level":3,"title":"BaseListView","slug":"baselistview","link":"#baselistview","children":[]}]},{"level":2,"title":"6.3.4 展示Model详情的DetailView","slug":"_6-3-4-展示model详情的detailview","link":"#_6-3-4-展示model详情的detailview","children":[]}],"git":{"updatedTime":1735029308000,"contributors":[{"name":"Linkefou","username":"Linkefou","email":"wlh724567296@163.com","commits":1},{"name":"wanglinhao","username":"wanglinhao","email":"wanglinhao@wegooooo.com","commits":3}]},"filePathRelative":"fpython/htmlsystem/Django/chapter-06：视图/6.3：基于类的通用视图.md"}');export{r as comp,k as data};
