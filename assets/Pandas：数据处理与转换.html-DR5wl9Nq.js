import{_ as l,c as o,a as s,d as p,e as t,f as c,r as i,o as u,b as e}from"./app-BCC5ysrj.js";const r={},d={class:"vuepress-toc"},k={class:"vuepress-toc-item"},m={class:"vuepress-toc-item"},v={class:"vuepress-toc-item"},b={class:"vuepress-toc-item"},g={class:"vuepress-toc-item"},_={class:"vuepress-toc-item"},h={class:"vuepress-toc-item"},f={class:"vuepress-toc-item"},y={class:"vuepress-toc-item"},x={class:"vuepress-toc-item"},w={class:"vuepress-toc-item"},E={class:"vuepress-toc-item"},P={class:"vuepress-toc-item"},Q={class:"vuepress-toc-item"};function j(N,n){const a=i("router-link");return u(),o("div",null,[n[14]||(n[14]=s("h1",{id:"pandas-数据处理与转换",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#pandas-数据处理与转换"},[s("span",null,"Pandas：数据处理与转换")])],-1)),s("nav",d,[s("ul",null,[s("li",k,[p(a,{to:"#_1-数据清洗"},{default:t(()=>n[0]||(n[0]=[e("1. 数据清洗")])),_:1}),s("ul",null,[s("li",m,[p(a,{to:"#_1-1-处理重复数据"},{default:t(()=>n[1]||(n[1]=[e("1.1 处理重复数据")])),_:1})]),s("li",v,[p(a,{to:"#_1-2-处理异常值"},{default:t(()=>n[2]||(n[2]=[e("1.2 处理异常值")])),_:1})])])]),s("li",b,[p(a,{to:"#_2-数据转换"},{default:t(()=>n[3]||(n[3]=[e("2. 数据转换")])),_:1}),s("ul",null,[s("li",g,[p(a,{to:"#_2-1-类型转换"},{default:t(()=>n[4]||(n[4]=[e("2.1 类型转换")])),_:1})]),s("li",_,[p(a,{to:"#_2-2-数据规范化"},{default:t(()=>n[5]||(n[5]=[e("2.2 数据规范化")])),_:1})])])]),s("li",h,[p(a,{to:"#_3-数据重塑"},{default:t(()=>n[6]||(n[6]=[e("3. 数据重塑")])),_:1}),s("ul",null,[s("li",f,[p(a,{to:"#_3-1-透视表操作"},{default:t(()=>n[7]||(n[7]=[e("3.1 透视表操作")])),_:1})]),s("li",y,[p(a,{to:"#_3-2-数据融合"},{default:t(()=>n[8]||(n[8]=[e("3.2 数据融合")])),_:1})])])]),s("li",x,[p(a,{to:"#_4-高级转换技巧"},{default:t(()=>n[9]||(n[9]=[e("4. 高级转换技巧")])),_:1}),s("ul",null,[s("li",w,[p(a,{to:"#_4-1-自定义转换函数"},{default:t(()=>n[10]||(n[10]=[e("4.1 自定义转换函数")])),_:1})]),s("li",E,[p(a,{to:"#_4-2-窗口计算"},{default:t(()=>n[11]||(n[11]=[e("4.2 窗口计算")])),_:1})])])]),s("li",P,[p(a,{to:"#_5-性能优化建议"},{default:t(()=>n[12]||(n[12]=[e("5. 性能优化建议")])),_:1})]),s("li",Q,[p(a,{to:"#总结"},{default:t(()=>n[13]||(n[13]=[e("总结")])),_:1})])])]),n[15]||(n[15]=c(`<hr><h2 id="_1-数据清洗" tabindex="-1"><a class="header-anchor" href="#_1-数据清洗"><span>1. 数据清洗</span></a></h2><h3 id="_1-1-处理重复数据" tabindex="-1"><a class="header-anchor" href="#_1-1-处理重复数据"><span>1.1 处理重复数据</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 检查重复行</span></span>
<span class="line">duplicates <span class="token operator">=</span> df<span class="token punctuation">.</span>duplicated<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 删除重复行</span></span>
<span class="line">df_clean <span class="token operator">=</span> df<span class="token punctuation">.</span>drop_duplicates<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 基于特定列删除重复行</span></span>
<span class="line">df_clean <span class="token operator">=</span> df<span class="token punctuation">.</span>drop_duplicates<span class="token punctuation">(</span>subset<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;姓名&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;年龄&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 保留最后一次出现的重复行</span></span>
<span class="line">df_clean <span class="token operator">=</span> df<span class="token punctuation">.</span>drop_duplicates<span class="token punctuation">(</span>keep<span class="token operator">=</span><span class="token string">&#39;last&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-处理异常值" tabindex="-1"><a class="header-anchor" href="#_1-2-处理异常值"><span>1.2 处理异常值</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 使用统计方法识别异常值</span></span>
<span class="line">Q1 <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;年龄&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>quantile<span class="token punctuation">(</span><span class="token number">0.25</span><span class="token punctuation">)</span></span>
<span class="line">Q3 <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;年龄&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>quantile<span class="token punctuation">(</span><span class="token number">0.75</span><span class="token punctuation">)</span></span>
<span class="line">IQR <span class="token operator">=</span> Q3 <span class="token operator">-</span> Q1</span>
<span class="line">lower_bound <span class="token operator">=</span> Q1 <span class="token operator">-</span> <span class="token number">1.5</span> <span class="token operator">*</span> IQR</span>
<span class="line">upper_bound <span class="token operator">=</span> Q3 <span class="token operator">+</span> <span class="token number">1.5</span> <span class="token operator">*</span> IQR</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 过滤异常值</span></span>
<span class="line">df_clean <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;年龄&#39;</span><span class="token punctuation">]</span> <span class="token operator">&gt;=</span> lower_bound<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;年龄&#39;</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span> upper_bound<span class="token punctuation">)</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用 clip 方法处理异常值</span></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;年龄&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;年龄&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clip<span class="token punctuation">(</span>lower<span class="token operator">=</span>lower_bound<span class="token punctuation">,</span> upper<span class="token operator">=</span>upper_bound<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-数据转换" tabindex="-1"><a class="header-anchor" href="#_2-数据转换"><span>2. 数据转换</span></a></h2><h3 id="_2-1-类型转换" tabindex="-1"><a class="header-anchor" href="#_2-1-类型转换"><span>2.1 类型转换</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 数值类型转换</span></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;年龄&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>to_numeric<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;年龄&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> errors<span class="token operator">=</span><span class="token string">&#39;coerce&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 无效值转为 NaN</span></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;工资&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;工资&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token string">&#39;float32&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 指定精度</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 日期类型转换</span></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;日期&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&#39;日期&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 字符串转日期</span></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;年份&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;日期&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dt<span class="token punctuation">.</span>year  <span class="token comment"># 提取年份</span></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;月份&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;日期&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>dt<span class="token punctuation">.</span>month  <span class="token comment"># 提取月份</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 类别类型转换</span></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;城市&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;城市&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token string">&#39;category&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># 转换为类别类型</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-数据规范化" tabindex="-1"><a class="header-anchor" href="#_2-2-数据规范化"><span>2.2 数据规范化</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">import</span> MinMaxScaler<span class="token punctuation">,</span> StandardScaler</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 最小-最大规范化 (0-1缩放)</span></span>
<span class="line">scaler <span class="token operator">=</span> MinMaxScaler<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;年龄_scaled&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> scaler<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;年龄&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 标准化 (Z-score标准化)</span></span>
<span class="line">scaler <span class="token operator">=</span> StandardScaler<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;工资_scaled&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> scaler<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&#39;工资&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-数据重塑" tabindex="-1"><a class="header-anchor" href="#_3-数据重塑"><span>3. 数据重塑</span></a></h2><h3 id="_3-1-透视表操作" tabindex="-1"><a class="header-anchor" href="#_3-1-透视表操作"><span>3.1 透视表操作</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 创建透视表</span></span>
<span class="line">pivot_table <span class="token operator">=</span> pd<span class="token punctuation">.</span>pivot_table<span class="token punctuation">(</span>df<span class="token punctuation">,</span></span>
<span class="line">                            values<span class="token operator">=</span><span class="token string">&#39;工资&#39;</span><span class="token punctuation">,</span></span>
<span class="line">                            index<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;部门&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">                            columns<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;职位&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">                            aggfunc<span class="token operator">=</span><span class="token string">&#39;mean&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 长格式转宽格式</span></span>
<span class="line">wide_df <span class="token operator">=</span> df<span class="token punctuation">.</span>pivot<span class="token punctuation">(</span>index<span class="token operator">=</span><span class="token string">&#39;日期&#39;</span><span class="token punctuation">,</span></span>
<span class="line">                   columns<span class="token operator">=</span><span class="token string">&#39;部门&#39;</span><span class="token punctuation">,</span></span>
<span class="line">                   values<span class="token operator">=</span><span class="token string">&#39;销售额&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-数据融合" tabindex="-1"><a class="header-anchor" href="#_3-2-数据融合"><span>3.2 数据融合</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 合并数据框</span></span>
<span class="line">merged_df <span class="token operator">=</span> pd<span class="token punctuation">.</span>merge<span class="token punctuation">(</span>df1<span class="token punctuation">,</span> df2<span class="token punctuation">,</span></span>
<span class="line">                     on<span class="token operator">=</span><span class="token string">&#39;员工ID&#39;</span><span class="token punctuation">,</span>  <span class="token comment"># 指定连接键</span></span>
<span class="line">                     how<span class="token operator">=</span><span class="token string">&#39;left&#39;</span><span class="token punctuation">)</span>    <span class="token comment"># 指定连接方式</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 连接数据框</span></span>
<span class="line">concatenated_df <span class="token operator">=</span> pd<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">[</span>df1<span class="token punctuation">,</span> df2<span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">                           axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>     <span class="token comment"># 0表示垂直连接</span></span>
<span class="line">                           ignore_index<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-高级转换技巧" tabindex="-1"><a class="header-anchor" href="#_4-高级转换技巧"><span>4. 高级转换技巧</span></a></h2><h3 id="_4-1-自定义转换函数" tabindex="-1"><a class="header-anchor" href="#_4-1-自定义转换函数"><span>4.1 自定义转换函数</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 使用 apply 应用自定义函数</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">age_category</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">if</span> age <span class="token operator">&lt;</span> <span class="token number">25</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&#39;青年&#39;</span></span>
<span class="line">    <span class="token keyword">elif</span> age <span class="token operator">&lt;</span> <span class="token number">45</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&#39;中年&#39;</span></span>
<span class="line">    <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string">&#39;老年&#39;</span></span>
<span class="line"></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;年龄段&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;年龄&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>age_category<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用 transform 进行分组转换</span></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;工资_标准化&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;部门&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;工资&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>transform<span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> <span class="token punctuation">(</span>x <span class="token operator">-</span> x<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> x<span class="token punctuation">.</span>std<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-窗口计算" tabindex="-1"><a class="header-anchor" href="#_4-2-窗口计算"><span>4.2 窗口计算</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 移动平均</span></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;销售额_MA7&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">&#39;销售额&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rolling<span class="token punctuation">(</span>window<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 累计统计</span></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;累计销售额&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;部门&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;销售额&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>cumsum<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 滑动窗口计算</span></span>
<span class="line">df<span class="token punctuation">[</span><span class="token string">&#39;销售额_增长率&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">&#39;部门&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;销售额&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>pct_change<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-性能优化建议" tabindex="-1"><a class="header-anchor" href="#_5-性能优化建议"><span>5. 性能优化建议</span></a></h2><ol><li><p><strong>减少内存使用</strong>：</p><ul><li>使用适当的数据类型（如 category 类型）</li><li>及时删除不需要的临时变量</li></ul></li><li><p><strong>提高计算效率</strong>：</p><ul><li>尽量使用向量化操作而不是循环</li><li>合理使用 inplace=True 参数避免创建副本</li></ul></li><li><p><strong>处理大数据集</strong>：</p><ul><li>使用 chunksize 参数分块读取数据</li><li>考虑使用 dask 或其他分布式计算框架</li></ul></li></ol><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><ul><li>数据处理和转换是数据分析中最重要的步骤之一</li><li>Pandas 提供了丰富的工具和方法进行数据转换</li><li>选择合适的转换方法可以显著提高数据处理效率</li><li>注意数据类型和内存使用对性能的影响</li></ul><blockquote><p>提示：在进行数据转换时，建议先在小数据集上测试代码，确保转换逻辑正确后再应用到完整数据集。同时，重要的转换操作后要及时检查数据的完整性和准确性。</p></blockquote>`,26))])}const B=l(r,[["render",j],["__file","Pandas：数据处理与转换.html.vue"]]),A=JSON.parse('{"path":"/fpython/Pandas/Pandas%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E4%B8%8E%E8%BD%AC%E6%8D%A2.html","title":"Pandas：数据处理与转换","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"1. 数据清洗","slug":"_1-数据清洗","link":"#_1-数据清洗","children":[{"level":3,"title":"1.1 处理重复数据","slug":"_1-1-处理重复数据","link":"#_1-1-处理重复数据","children":[]},{"level":3,"title":"1.2 处理异常值","slug":"_1-2-处理异常值","link":"#_1-2-处理异常值","children":[]}]},{"level":2,"title":"2. 数据转换","slug":"_2-数据转换","link":"#_2-数据转换","children":[{"level":3,"title":"2.1 类型转换","slug":"_2-1-类型转换","link":"#_2-1-类型转换","children":[]},{"level":3,"title":"2.2 数据规范化","slug":"_2-2-数据规范化","link":"#_2-2-数据规范化","children":[]}]},{"level":2,"title":"3. 数据重塑","slug":"_3-数据重塑","link":"#_3-数据重塑","children":[{"level":3,"title":"3.1 透视表操作","slug":"_3-1-透视表操作","link":"#_3-1-透视表操作","children":[]},{"level":3,"title":"3.2 数据融合","slug":"_3-2-数据融合","link":"#_3-2-数据融合","children":[]}]},{"level":2,"title":"4. 高级转换技巧","slug":"_4-高级转换技巧","link":"#_4-高级转换技巧","children":[{"level":3,"title":"4.1 自定义转换函数","slug":"_4-1-自定义转换函数","link":"#_4-1-自定义转换函数","children":[]},{"level":3,"title":"4.2 窗口计算","slug":"_4-2-窗口计算","link":"#_4-2-窗口计算","children":[]}]},{"level":2,"title":"5. 性能优化建议","slug":"_5-性能优化建议","link":"#_5-性能优化建议","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"updatedTime":1735031827000,"contributors":[{"name":"wanglinhao","username":"wanglinhao","email":"wanglinhao@wegooooo.com","commits":1}]},"filePathRelative":"fpython/Pandas/Pandas：数据处理与转换.md"}');export{B as comp,A as data};
