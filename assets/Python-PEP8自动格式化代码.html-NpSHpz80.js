import{_ as t,c as p,a as e,d as n,e as l,f as o,r,o as c,b as i}from"./app-BCC5ysrj.js";const d={},u={class:"vuepress-toc"},m={class:"vuepress-toc-item"},v={class:"vuepress-toc-item"},h={class:"vuepress-toc-item"},b={class:"vuepress-toc-item"},g={class:"vuepress-toc-item"},k={class:"vuepress-toc-item"},f={class:"vuepress-toc-item"};function _(y,s){const a=r("router-link");return c(),p("div",null,[s[7]||(s[7]=e("h1",{id:"python-pep8自动格式化代码",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#python-pep8自动格式化代码"},[e("span",null,"Python: PEP8自动格式化代码")])],-1)),e("nav",u,[e("ul",null,[e("li",m,[n(a,{to:"#简介"},{default:l(()=>s[0]||(s[0]=[i("简介")])),_:1})]),e("li",v,[n(a,{to:"#使用-autopep8"},{default:l(()=>s[1]||(s[1]=[i("使用 autopep8")])),_:1}),e("ul",null,[e("li",h,[n(a,{to:"#安装autopep8"},{default:l(()=>s[2]||(s[2]=[i("安装autopep8")])),_:1})]),e("li",b,[n(a,{to:"#基本用法"},{default:l(()=>s[3]||(s[3]=[i("基本用法")])),_:1})]),e("li",g,[n(a,{to:"#配置文件"},{default:l(()=>s[4]||(s[4]=[i("配置文件")])),_:1})])])]),e("li",k,[n(a,{to:"#编码格式转换"},{default:l(()=>s[5]||(s[5]=[i("编码格式转换")])),_:1})]),e("li",f,[n(a,{to:"#最佳实践"},{default:l(()=>s[6]||(s[6]=[i("最佳实践")])),_:1})])])]),s[8]||(s[8]=o(`<hr><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>PEP8 是 Python 的代码风格指南。在跨平台开发时,代码格式(如缩进、换行符等)可能导致问题。本文介绍如何使用工具自动格式化代码。</p><h2 id="使用-autopep8" tabindex="-1"><a class="header-anchor" href="#使用-autopep8"><span>使用 autopep8</span></a></h2><h3 id="安装autopep8" tabindex="-1"><a class="header-anchor" href="#安装autopep8"><span>安装autopep8</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 普通安装</span></span>
<span class="line">pip <span class="token function">install</span> <span class="token parameter variable">--upgrade</span> autopep8</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用国内源安装</span></span>
<span class="line">pip <span class="token function">install</span> <span class="token parameter variable">--upgrade</span> autopep8 --trusted-host mirrors.aliyun.com</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="基本用法" tabindex="-1"><a class="header-anchor" href="#基本用法"><span>基本用法</span></a></h3><p>autopep8 提供了多种格式化选项:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 临时查看格式化效果，不覆盖原有的代码</span></span>
<span class="line">autopep8 <span class="token parameter variable">--aggressive</span> <span class="token parameter variable">--aggressive</span> code.py</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 覆盖原有的代码格式化</span></span>
<span class="line">autopep8 --in-place <span class="token parameter variable">--aggressive</span> <span class="token parameter variable">--aggressive</span> code.py</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 格式化目录下所有 Python 文件</span></span>
<span class="line">autopep8 --in-place <span class="token parameter variable">--aggressive</span> <span class="token parameter variable">--recursive</span> <span class="token builtin class-name">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件"><span>配置文件</span></a></h3><p>可以创建 <code>setup.cfg</code> 或 <code>tox.ini</code> 配置文件，这些文件通常存放在项目的根目录下。例如，如果你的项目结构如下所示：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">my_project/</span>
<span class="line">    setup.cfg</span>
<span class="line">    my_module/</span>
<span class="line">        __init__.py</span>
<span class="line">        my_file.py</span>
<span class="line">    tests/</span>
<span class="line">        test_my_file.py</span>
<span class="line">    tox.ini</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>setup.cfg</code> 或 <code>tox.ini</code> 文件中，可以添加以下配置：</p><div class="language-ini line-numbers-mode" data-highlighter="prismjs" data-ext="ini" data-title="ini"><pre><code><span class="line"><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">pycodestyle</span><span class="token punctuation">]</span></span></span>
<span class="line"><span class="token key attr-name">max_line_length</span> <span class="token punctuation">=</span> <span class="token value attr-value">120</span></span>
<span class="line"><span class="token key attr-name">ignore</span> <span class="token punctuation">=</span> <span class="token value attr-value">E226,E302,E41</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="编码格式转换" tabindex="-1"><a class="header-anchor" href="#编码格式转换"><span>编码格式转换</span></a></h2><p>使用 Vim 转换文件格式:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 在 Vim 中执行</span></span>
<span class="line">:set <span class="token assign-left variable">ff</span><span class="token operator">=</span>unix  <span class="token comment"># 转换为 Unix 格式</span></span>
<span class="line">:set <span class="token assign-left variable">ff</span><span class="token operator">=</span>dos   <span class="token comment"># 转换为 Windows 格式</span></span>
<span class="line">:wq          <span class="token comment"># 保存并退出</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="最佳实践" tabindex="-1"><a class="header-anchor" href="#最佳实践"><span>最佳实践</span></a></h2><ol><li><p><strong>格式化建议</strong></p><ul><li>使用版本控制</li><li>在提交前格式化</li><li>团队统一配置</li></ul></li><li><p><strong>编码建议</strong></p><ul><li>统一使用 UTF-8</li><li>注意换行符</li><li>保持一致的缩进</li></ul></li></ol><blockquote><p><strong>注意：</strong></p><ul><li>备份重要文件</li><li>检查格式化结果</li><li>遵循项目规范</li></ul></blockquote>`,20))])}const P=t(d,[["render",_],["__file","Python-PEP8自动格式化代码.html.vue"]]),E=JSON.parse('{"path":"/fpython/example/Python-PEP8%E8%87%AA%E5%8A%A8%E6%A0%BC%E5%BC%8F%E5%8C%96%E4%BB%A3%E7%A0%81.html","title":"Python: PEP8自动格式化代码","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"使用 autopep8","slug":"使用-autopep8","link":"#使用-autopep8","children":[{"level":3,"title":"安装autopep8","slug":"安装autopep8","link":"#安装autopep8","children":[]},{"level":3,"title":"基本用法","slug":"基本用法","link":"#基本用法","children":[]},{"level":3,"title":"配置文件","slug":"配置文件","link":"#配置文件","children":[]}]},{"level":2,"title":"编码格式转换","slug":"编码格式转换","link":"#编码格式转换","children":[]},{"level":2,"title":"最佳实践","slug":"最佳实践","link":"#最佳实践","children":[]}],"git":{"updatedTime":1735028750000,"contributors":[{"name":"Linkefou","username":"Linkefou","email":"wlh724567296@163.com","commits":1},{"name":"wanglinhao","username":"wanglinhao","email":"wanglinhao@wegooooo.com","commits":3}]},"filePathRelative":"fpython/example/Python-PEP8自动格式化代码.md"}');export{P as comp,E as data};
