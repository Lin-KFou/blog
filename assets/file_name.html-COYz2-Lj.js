import{_ as o,c,f as d,o as i}from"./app-BCC5ysrj.js";const l={};function t(n,e){return i(),c("div",null,e[0]||(e[0]=[d('<h1 id="文件命名规则" tabindex="-1"><a class="header-anchor" href="#文件命名规则"><span>文件命名规则</span></a></h1><blockquote><p>在 <code>library</code> 目录下的文件命名方式遵循了一种结构化的命名规则，具体总结如下：</p></blockquote><ol><li><p><strong>命名结构</strong>：文件名由三个部分组成，分别是功能描述、类别、具体内容。这些部分之间使用连字符 <code>-</code> 连接。</p></li><li><p><strong>功能描述</strong>：文件名的第一个部分通常是功能描述，指明文件的内容类型或主题。例如：</p><ul><li><code>function</code> 表示该文件涉及 Python 的函数。</li><li><code>library</code> 表示该文件涉及 Python 的库。</li><li><code>statement</code> 表示该文件涉及 Python 的语句。</li><li><code>concept</code> 表示该文件涉及 Python 的概念。</li></ul></li><li><p><strong>类别</strong>：文件名的第二个部分是类别，通常是更具体的分类。例如：</p><ul><li><code>any</code>、<code>input</code>、<code>lambda_map</code>、<code>reversed</code>、<code>zip</code> 等表示具体的函数。</li><li><code>argparse</code>、<code>dnspython</code>、<code>ipy</code>、<code>os</code>、<code>psutil</code>、<code>regex</code>、<code>smtplib</code> 等表示具体的库。</li><li><code>import</code>、<code>io</code>、<code>pyoop</code>、<code>try_exception</code> 等表示具体的语句或概念。</li></ul></li><li><p><strong>具体内容</strong>：文件名的第三个部分是具体内容，通常是该文件的主题或核心内容。例如：</p><ul><li><code>any</code>、<code>input</code>、<code>lambda_map</code>、<code>reversed</code>、<code>zip</code> 等表示具体的函数。</li><li><code>argparse</code>、<code>dnspython</code>、<code>ipy</code>、<code>os</code>、<code>psutil</code>、<code>regex</code>、<code>smtplib</code> 等表示具体的库。</li><li><code>import</code>、<code>io</code>、<code>pyoop</code>、<code>try_exception</code> 等表示具体的语句或概念。</li></ul></li></ol><p>这种命名方式有助于快速识别文件的内容和用途，便于管理和查找。</p>',4)]))}const r=o(l,[["render",t],["__file","file_name.html.vue"]]),p=JSON.parse('{"path":"/fpython/library/file_name.html","title":"文件命名规则","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"updatedTime":1735028750000,"contributors":[{"name":"wanglinhao","username":"wanglinhao","email":"wanglinhao@wegooooo.com","commits":1}]},"filePathRelative":"fpython/library/file_name.md"}');export{r as comp,p as data};
