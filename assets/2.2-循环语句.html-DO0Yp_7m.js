import{_ as l,c as i,a as n,d as t,e,f as o,r as c,o as u,b as p}from"./app-BCC5ysrj.js";const r={},d={class:"vuepress-toc"},k={class:"vuepress-toc-item"},v={class:"vuepress-toc-item"},h={class:"vuepress-toc-item"},m={class:"vuepress-toc-item"},b={class:"vuepress-toc-item"},f={class:"vuepress-toc-item"},g={class:"vuepress-toc-item"},w={class:"vuepress-toc-item"},y={class:"vuepress-toc-item"},x={class:"vuepress-toc-item"},_={class:"vuepress-toc-item"},j={class:"vuepress-toc-item"},q={class:"vuepress-toc-item"},E={class:"vuepress-toc-item"};function A(B,s){const a=c("router-link");return u(),i("div",null,[s[14]||(s[14]=n("h1",{id:"循环语句",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#循环语句"},[n("span",null,"循环语句")])],-1)),n("nav",d,[n("ul",null,[n("li",k,[t(a,{to:"#概述"},{default:e(()=>s[0]||(s[0]=[p("概述")])),_:1})]),n("li",v,[t(a,{to:"#循环的基本概念"},{default:e(()=>s[1]||(s[1]=[p("循环的基本概念")])),_:1})]),n("li",h,[t(a,{to:"#for-循环"},{default:e(()=>s[2]||(s[2]=[p("for 循环")])),_:1}),n("ul",null,[n("li",m,[t(a,{to:"#基本语法"},{default:e(()=>s[3]||(s[3]=[p("基本语法")])),_:1})]),n("li",b,[t(a,{to:"#示例-绘制圆形"},{default:e(()=>s[4]||(s[4]=[p("示例：绘制圆形")])),_:1})]),n("li",f,[t(a,{to:"#遍历数组示例"},{default:e(()=>s[5]||(s[5]=[p("遍历数组示例")])),_:1})]),n("li",g,[t(a,{to:"#控制语句"},{default:e(()=>s[6]||(s[6]=[p("控制语句")])),_:1})])])]),n("li",w,[t(a,{to:"#while-循环语句"},{default:e(()=>s[7]||(s[7]=[p("while 循环语句")])),_:1}),n("ul",null,[n("li",y,[t(a,{to:"#基本语法-1"},{default:e(()=>s[8]||(s[8]=[p("基本语法")])),_:1})]),n("li",x,[t(a,{to:"#示例"},{default:e(()=>s[9]||(s[9]=[p("示例")])),_:1})])])]),n("li",_,[t(a,{to:"#do-while-循环"},{default:e(()=>s[10]||(s[10]=[p("do...while 循环")])),_:1}),n("ul",null,[n("li",j,[t(a,{to:"#基本语法-2"},{default:e(()=>s[11]||(s[11]=[p("基本语法")])),_:1})]),n("li",q,[t(a,{to:"#示例-1"},{default:e(()=>s[12]||(s[12]=[p("示例")])),_:1})])])]),n("li",E,[t(a,{to:"#循环的选择"},{default:e(()=>s[13]||(s[13]=[p("循环的选择")])),_:1})])])]),s[15]||(s[15]=o(`<hr><h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>循环语句用于重复执行某段代码。JavaScript 提供了多种循环结构：</p><ul><li>for 循环</li><li>while 循环</li><li>do...while 循环</li><li>for...of 循环</li></ul><h2 id="循环的基本概念" tabindex="-1"><a class="header-anchor" href="#循环的基本概念"><span>循环的基本概念</span></a></h2><table><thead><tr><th>组成部分</th><th>说明</th></tr></thead><tbody><tr><td>初始化</td><td>设置循环的初始值</td></tr><tr><td>条件判断</td><td>决定是否继续循环</td></tr><tr><td>更新表达式</td><td>在每次循环后更新变量</td></tr></tbody></table><h2 id="for-循环" tabindex="-1"><a class="header-anchor" href="#for-循环"><span>for 循环</span></a></h2><h3 id="基本语法" tabindex="-1"><a class="header-anchor" href="#基本语法"><span>基本语法</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">for</span> <span class="token punctuation">(</span>初始化<span class="token punctuation">;</span> 条件判断<span class="token punctuation">;</span> 更新表达式<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 循环体代码</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="示例-绘制圆形" tabindex="-1"><a class="header-anchor" href="#示例-绘制圆形"><span>示例：绘制圆形</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 在画布上绘制 100 个随机位置的圆</span></span>
<span class="line"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">100</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    ctx<span class="token punctuation">.</span>fileStyle <span class="token operator">=</span> <span class="token string">&#39;rgba(255,0,0,0.5)&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    ctx<span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token constant">WIDTH</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token constant">HEIGHT</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    ctx<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 说明：</span></span>
<span class="line"><span class="token comment">// - random() 返回 0 到参数值之间的随机数</span></span>
<span class="line"><span class="token comment">// - WIDTH/HEIGHT 是画布的宽度和高度</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="遍历数组示例" tabindex="-1"><a class="header-anchor" href="#遍历数组示例"><span>遍历数组示例</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> cats <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;Bill&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Jeff&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Pete&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Biggles&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Jasmin&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> info <span class="token operator">=</span> <span class="token string">&quot;My cats are called &quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> para <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cats<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    info <span class="token operator">+=</span> cats<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&quot;, &quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">para<span class="token punctuation">.</span>textContent <span class="token operator">=</span> info<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="控制语句" tabindex="-1"><a class="header-anchor" href="#控制语句"><span>控制语句</span></a></h3><table><thead><tr><th>语句</th><th>作用</th><th>示例</th></tr></thead><tbody><tr><td>break</td><td>终止循环</td><td><code>if(条件) break;</code></td></tr><tr><td>continue</td><td>跳过本次循环</td><td><code>if(条件) continue;</code></td></tr></tbody></table><h2 id="while-循环语句" tabindex="-1"><a class="header-anchor" href="#while-循环语句"><span>while 循环语句</span></a></h2><h3 id="基本语法-1" tabindex="-1"><a class="header-anchor" href="#基本语法-1"><span>基本语法</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 初始化</span></span>
<span class="line"><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">while</span> <span class="token punctuation">(</span>exit<span class="token operator">-</span>condition<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 循环体代码</span></span>
<span class="line">    i<span class="token operator">++</span><span class="token punctuation">;</span>  <span class="token comment">// 更新表达式</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> cats<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> cats<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        info <span class="token operator">+=</span> <span class="token string">&quot;and &quot;</span> <span class="token operator">+</span> cats<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        info <span class="token operator">+=</span> cats<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&quot;, &quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    i<span class="token operator">++</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="do-while-循环" tabindex="-1"><a class="header-anchor" href="#do-while-循环"><span>do...while 循环</span></a></h2><h3 id="基本语法-2" tabindex="-1"><a class="header-anchor" href="#基本语法-2"><span>基本语法</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 初始化</span></span>
<span class="line"><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">do</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 循环体代码</span></span>
<span class="line">    i<span class="token operator">++</span><span class="token punctuation">;</span>  <span class="token comment">// 更新表达式</span></span>
<span class="line"><span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>exit<span class="token operator">-</span>condition<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="示例-1" tabindex="-1"><a class="header-anchor" href="#示例-1"><span>示例</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">do</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> cats<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        info <span class="token operator">+=</span> <span class="token string">&quot;and &quot;</span> <span class="token operator">+</span> cats<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        info <span class="token operator">+=</span> cats<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&quot;, &quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    i<span class="token operator">++</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> cats<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="循环的选择" tabindex="-1"><a class="header-anchor" href="#循环的选择"><span>循环的选择</span></a></h2><table><thead><tr><th>循环类型</th><th>适用场景</th></tr></thead><tbody><tr><td>for</td><td>已知循环次数</td></tr><tr><td>while</td><td>不确定循环次数</td></tr><tr><td>do...while</td><td>至少执行一次的循环</td></tr><tr><td>for...of</td><td>遍历可迭代对象</td></tr></tbody></table><blockquote><p><strong>注意：</strong></p><ul><li>避免死循环</li><li>注意循环条件和更新表达式</li><li>选择合适的循环类型</li></ul></blockquote>`,28))])}const H=l(r,[["render",A],["__file","2.2-循环语句.html.vue"]]),J=JSON.parse('{"path":"/fhtml/JavaScript/02%EF%BC%9A%E5%9F%BA%E7%A1%80/2.2-%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5.html","title":"循环语句","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"循环的基本概念","slug":"循环的基本概念","link":"#循环的基本概念","children":[]},{"level":2,"title":"for 循环","slug":"for-循环","link":"#for-循环","children":[{"level":3,"title":"基本语法","slug":"基本语法","link":"#基本语法","children":[]},{"level":3,"title":"示例：绘制圆形","slug":"示例-绘制圆形","link":"#示例-绘制圆形","children":[]},{"level":3,"title":"遍历数组示例","slug":"遍历数组示例","link":"#遍历数组示例","children":[]},{"level":3,"title":"控制语句","slug":"控制语句","link":"#控制语句","children":[]}]},{"level":2,"title":"while 循环语句","slug":"while-循环语句","link":"#while-循环语句","children":[{"level":3,"title":"基本语法","slug":"基本语法-1","link":"#基本语法-1","children":[]},{"level":3,"title":"示例","slug":"示例","link":"#示例","children":[]}]},{"level":2,"title":"do...while 循环","slug":"do-while-循环","link":"#do-while-循环","children":[{"level":3,"title":"基本语法","slug":"基本语法-2","link":"#基本语法-2","children":[]},{"level":3,"title":"示例","slug":"示例-1","link":"#示例-1","children":[]}]},{"level":2,"title":"循环的选择","slug":"循环的选择","link":"#循环的选择","children":[]}],"git":{"updatedTime":1714456608000,"contributors":[{"name":"wanglinhao","username":"wanglinhao","email":"wanglinhao@wegooooo.com","commits":1}]},"filePathRelative":"fhtml/JavaScript/02：基础/2.2-循环语句.md"}');export{H as comp,J as data};
