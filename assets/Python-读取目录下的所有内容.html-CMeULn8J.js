import{_ as l,c as i,a as s,d as t,e as p,f as o,r as c,o as u,b as e}from"./app-BCC5ysrj.js";const r={},k={class:"vuepress-toc"},d={class:"vuepress-toc-item"},m={class:"vuepress-toc-item"},v={class:"vuepress-toc-item"},h={class:"vuepress-toc-item"},b={class:"vuepress-toc-item"};function g(f,n){const a=c("router-link");return u(),i("div",null,[n[5]||(n[5]=s("h1",{id:"python-读取目录下的所有内容",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#python-读取目录下的所有内容"},[s("span",null,"Python: 读取目录下的所有内容")])],-1)),s("nav",k,[s("ul",null,[s("li",d,[t(a,{to:"#目录读取"},{default:p(()=>n[0]||(n[0]=[e("目录读取")])),_:1}),s("ul",null,[s("li",m,[t(a,{to:"#基本实现"},{default:p(()=>n[1]||(n[1]=[e("基本实现")])),_:1})]),s("li",v,[t(a,{to:"#使用-pathlib"},{default:p(()=>n[2]||(n[2]=[e("使用 pathlib")])),_:1})]),s("li",h,[t(a,{to:"#使用-os-walk"},{default:p(()=>n[3]||(n[3]=[e("使用 os.walk")])),_:1})])])]),s("li",b,[t(a,{to:"#最佳实践"},{default:p(()=>n[4]||(n[4]=[e("最佳实践")])),_:1})])])]),n[6]||(n[6]=o(`<hr><h2 id="目录读取" tabindex="-1"><a class="header-anchor" href="#目录读取"><span>目录读取</span></a></h2><h3 id="基本实现" tabindex="-1"><a class="header-anchor" href="#基本实现"><span>基本实现</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> os</span>
<span class="line"><span class="token keyword">from</span> pathlib <span class="token keyword">import</span> Path</span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">list_files</span><span class="token punctuation">(</span>directory<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;列出目录下所有文件&quot;&quot;&quot;</span></span>
<span class="line">    path <span class="token operator">=</span> Path<span class="token punctuation">(</span>directory<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">for</span> item <span class="token keyword">in</span> path<span class="token punctuation">.</span>iterdir<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">if</span> item<span class="token punctuation">.</span>is_file<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;文件: </span><span class="token interpolation"><span class="token punctuation">{</span>item<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">elif</span> item<span class="token punctuation">.</span>is_dir<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;目录: </span><span class="token interpolation"><span class="token punctuation">{</span>item<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            list_files<span class="token punctuation">(</span>item<span class="token punctuation">)</span>  <span class="token comment"># 递归遍历子目录</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">read_file</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;读取文件内容&quot;&quot;&quot;</span></span>
<span class="line">    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">        content <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;文件内容:\\n</span><span class="token interpolation"><span class="token punctuation">{</span>content<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">write_file</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;写入文件内容&quot;&quot;&quot;</span></span>
<span class="line">    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>content<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;内容已写入: </span><span class="token interpolation"><span class="token punctuation">{</span>filename<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 示例用法</span></span>
<span class="line">    directory <span class="token operator">=</span> <span class="token string">&quot;example_dir&quot;</span></span>
<span class="line">    list_files<span class="token punctuation">(</span>directory<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用-pathlib" tabindex="-1"><a class="header-anchor" href="#使用-pathlib"><span>使用 pathlib</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">from</span> pathlib <span class="token keyword">import</span> Path</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 列出所有文件</span></span>
<span class="line">path <span class="token operator">=</span> Path<span class="token punctuation">(</span><span class="token string">&#39;example_dir&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">for</span> <span class="token builtin">file</span> <span class="token keyword">in</span> path<span class="token punctuation">.</span>glob<span class="token punctuation">(</span><span class="token string">&#39;**/*&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># ** 表示递归搜索</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 按扩展名过滤</span></span>
<span class="line"><span class="token keyword">for</span> <span class="token builtin">file</span> <span class="token keyword">in</span> path<span class="token punctuation">.</span>glob<span class="token punctuation">(</span><span class="token string">&#39;**/*.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;文本文件: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">file</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用-os-walk" tabindex="-1"><a class="header-anchor" href="#使用-os-walk"><span>使用 os.walk</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> os</span>
<span class="line"></span>
<span class="line"><span class="token keyword">for</span> root<span class="token punctuation">,</span> dirs<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span><span class="token string">&#39;example_dir&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;当前目录: </span><span class="token interpolation"><span class="token punctuation">{</span>root<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;子目录: </span><span class="token interpolation"><span class="token punctuation">{</span>dirs<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;文件: </span><span class="token interpolation"><span class="token punctuation">{</span>files<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="最佳实践" tabindex="-1"><a class="header-anchor" href="#最佳实践"><span>最佳实践</span></a></h2><ol><li><p><strong>路径处理</strong></p><ul><li>使用 pathlib 处理路径</li><li>处理路径分隔符</li><li>考虑跨平台兼容性</li></ul></li><li><p><strong>异常处理</strong></p><ul><li>检查文件/目录是否存在</li><li>处理权限问题</li><li>处理文件编码</li></ul></li></ol><blockquote><p><strong>注意：</strong></p><ul><li>注意文件编码</li><li>处理大目录时的性能</li><li>考虑权限问题</li></ul></blockquote>`,11))])}const w=l(r,[["render",g],["__file","Python-读取目录下的所有内容.html.vue"]]),_=JSON.parse('{"path":"/fpython/example/Python-%E8%AF%BB%E5%8F%96%E7%9B%AE%E5%BD%95%E4%B8%8B%E7%9A%84%E6%89%80%E6%9C%89%E5%86%85%E5%AE%B9.html","title":"Python: 读取目录下的所有内容","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"目录读取","slug":"目录读取","link":"#目录读取","children":[{"level":3,"title":"基本实现","slug":"基本实现","link":"#基本实现","children":[]},{"level":3,"title":"使用 pathlib","slug":"使用-pathlib","link":"#使用-pathlib","children":[]},{"level":3,"title":"使用 os.walk","slug":"使用-os-walk","link":"#使用-os-walk","children":[]}]},{"level":2,"title":"最佳实践","slug":"最佳实践","link":"#最佳实践","children":[]}],"git":{"updatedTime":1735029308000,"contributors":[{"name":"Linkefou","username":"Linkefou","email":"wlh724567296@163.com","commits":1},{"name":"wanglinhao","username":"wanglinhao","email":"wanglinhao@wegooooo.com","commits":5}]},"filePathRelative":"fpython/example/Python-读取目录下的所有内容.md"}');export{w as comp,_ as data};
