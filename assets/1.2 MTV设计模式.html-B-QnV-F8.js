import{_ as e,c as a,f as o,o as t}from"./app-BCC5ysrj.js";const n={};function i(r,l){return t(),a("div",null,l[0]||(l[0]=[o('<h1 id="_1-2-mtv设计模式" tabindex="-1"><a class="header-anchor" href="#_1-2-mtv设计模式"><span>1.2 MTV设计模式</span></a></h1><ul><li><a href="#12-mtv%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F">1.2 MTV设计模式</a><ul><li><a href="#121-mvc%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F">1.2.1 MVC设计模式</a></li><li><a href="#122-django%E7%9A%84mtv%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%9E%8B">1.2.2 Django的MTV设计模型</a></li></ul></li></ul><hr><h2 id="_1-2-1-mvc设计模式" tabindex="-1"><a class="header-anchor" href="#_1-2-1-mvc设计模式"><span>1.2.1 MVC设计模式</span></a></h2><p>Web服务器开发领域里有著名的MVC设计模式：</p><ul><li>数据存储逻辑</li><li>业务逻辑</li><li>表现逻辑</li><li>就是所谓的Model-View-Controller(MVC)</li></ul><p>Model：数据存取层，对数据实体的定义和对数据的增删改查操作</p><p>View：视图层，系统中选择显示什么和怎么显示的部分</p><p>Controller：控制层，负责根据View中输入的指令检索Model中的数据，在根据一定的逻辑产生最终的结果输出</p><p><strong>交互过程</strong><img src="https://s2.loli.net/2022/03/09/wfAFJ17GiDzUdBQ.jpg" alt="MVC交互过程"></p><blockquote><p>模块化的开发降低了代码之间的耦合，增加了模块的可重用性</p></blockquote><h2 id="_1-2-2-django的mtv设计模型" tabindex="-1"><a class="header-anchor" href="#_1-2-2-django的mtv设计模型"><span>1.2.2 Django的MTV设计模型</span></a></h2><p>借鉴MVC思想，将交互过程分为了3层，目的是降低各个模块之间的耦合</p><p>Django将交互过程拆分为</p><ul><li>Model（模型）</li><li>Template（模板）</li><li>View（视图）</li><li>MTV设计模式</li></ul><ol><li>M(Model)：数据存取层，处理所有与数据有关的事务，提供在数据库中管理（添加，修改，删除）和查询记录的机制</li><li>T(Template)：表现层，处理页面的展示，即所有与表现相关的决定都有这一层去处理</li><li>V(View)：业务逻辑层，处理业务逻辑，在适当的时候将Model与Template组合在一起，通常被认为是联通M与T的桥梁</li></ol><blockquote><p>概念上，Django也是一个MVC框架，但在Django中，C(Controller)是有框架自行处理的，有框架的<strong>URLConf</strong>来实现 机制是使用：正则表达式匹配URL，再去调用合适的Python函数。 所以，Django更关心的是M、T和V</p></blockquote><p><strong>交互过程</strong><img src="https://s2.loli.net/2022/03/09/LlAdNWVYgwsqyUe.jpg" alt="MTV交互过程"></p>',18)]))}const p=e(n,[["render",i],["__file","1.2 MTV设计模式.html.vue"]]),h=JSON.parse('{"path":"/fpython/htmlsystem/Django/chapter-01%EF%BC%9ADjango%E6%A1%86%E6%9E%B6%E8%AE%A4%E8%AF%86/1.2%20MTV%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.html","title":"1.2 MTV设计模式","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"1.2.1 MVC设计模式","slug":"_1-2-1-mvc设计模式","link":"#_1-2-1-mvc设计模式","children":[]},{"level":2,"title":"1.2.2 Django的MTV设计模型","slug":"_1-2-2-django的mtv设计模型","link":"#_1-2-2-django的mtv设计模型","children":[]}],"git":{"updatedTime":1701250601000,"contributors":[{"name":"wanglinhao","username":"wanglinhao","email":"wanglinhao@wegooooo.com","commits":1}]},"filePathRelative":"fpython/htmlsystem/Django/chapter-01：Django框架认识/1.2 MTV设计模式.md"}');export{p as comp,h as data};
