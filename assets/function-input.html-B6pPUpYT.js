import{_ as l,c as i,a as s,b as a,d as t,e as p,f as o,r as c,o as u}from"./app-BCC5ysrj.js";const r={},d={class:"vuepress-toc"},k={class:"vuepress-toc-item"},h={class:"vuepress-toc-item"},m={class:"vuepress-toc-item"},v={class:"vuepress-toc-item"},b={class:"vuepress-toc-item"},g={class:"vuepress-toc-item"},y={class:"vuepress-toc-item"},f={class:"vuepress-toc-item"},x={class:"vuepress-toc-item"};function _(q,n){const e=c("router-link");return u(),i("div",null,[n[9]||(n[9]=s("h1",{id:"input-函数",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#input-函数"},[s("span",null,[s("code",null,"input"),a(" 函数")])])],-1)),s("nav",d,[s("ul",null,[s("li",k,[t(e,{to:"#基本用法"},{default:p(()=>n[0]||(n[0]=[a("基本用法")])),_:1}),s("ul",null,[s("li",h,[t(e,{to:"#语法"},{default:p(()=>n[1]||(n[1]=[a("语法")])),_:1})]),s("li",m,[t(e,{to:"#示例"},{default:p(()=>n[2]||(n[2]=[a("示例")])),_:1})])])]),s("li",v,[t(e,{to:"#特点"},{default:p(()=>n[3]||(n[3]=[a("特点")])),_:1})]),s("li",b,[t(e,{to:"#类型转换"},{default:p(()=>n[4]||(n[4]=[a("类型转换")])),_:1}),s("ul",null,[s("li",g,[t(e,{to:"#示例-1"},{default:p(()=>n[5]||(n[5]=[a("示例")])),_:1})])])]),s("li",y,[t(e,{to:"#常见应用"},{default:p(()=>n[6]||(n[6]=[a("常见应用")])),_:1}),s("ul",null,[s("li",f,[t(e,{to:"#获取多个输入"},{default:p(()=>n[7]||(n[7]=[a("获取多个输入")])),_:1})]),s("li",x,[t(e,{to:"#输入验证"},{default:p(()=>n[8]||(n[8]=[a("输入验证")])),_:1})])])])])]),n[10]||(n[10]=o(`<p>Python 中的 <code>input</code> 函数用于从用户获取输入。它是一个内置函数，允许程序在运行时与用户进行交互。本文将详细介绍 <code>input</code> 函数的用法、特点以及一些常见的应用场景。</p><h2 id="基本用法" tabindex="-1"><a class="header-anchor" href="#基本用法"><span>基本用法</span></a></h2><p><code>input</code> 函数会暂停程序的执行，等待用户输入文本并按下回车键。输入的文本会作为字符串返回。</p><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">user_input <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span>prompt<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>prompt</code>：可选参数，用于显示给用户的提示信息。</li></ul><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入您的姓名: &quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;您好, </span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">!&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个示例中，程序会提示用户输入姓名，并在用户输入后显示问候信息。</p><h2 id="特点" tabindex="-1"><a class="header-anchor" href="#特点"><span>特点</span></a></h2><ul><li><code>input</code> 函数总是返回一个字符串。如果需要其他数据类型，需要进行类型转换。</li><li>在 Python 2 中，<code>input</code> 函数的行为与 <code>eval(raw_input())</code> 类似，而 <code>raw_input</code> 函数的行为与 Python 3 中的 <code>input</code> 函数相同。</li></ul><h2 id="类型转换" tabindex="-1"><a class="header-anchor" href="#类型转换"><span>类型转换</span></a></h2><p>由于 <code>input</code> 函数返回的是字符串，如果需要整数或浮点数等其他类型，需要进行显式转换。</p><h3 id="示例-1" tabindex="-1"><a class="header-anchor" href="#示例-1"><span>示例</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">age <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入您的年龄: &quot;</span><span class="token punctuation">)</span></span>
<span class="line">age <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span>  <span class="token comment"># 将字符串转换为整数</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;您明年将会是 </span><span class="token interpolation"><span class="token punctuation">{</span>age <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">}</span></span><span class="token string"> 岁。&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个示例中，用户输入的年龄被转换为整数，以便进行数学运算。</p><h2 id="常见应用" tabindex="-1"><a class="header-anchor" href="#常见应用"><span>常见应用</span></a></h2><h3 id="获取多个输入" tabindex="-1"><a class="header-anchor" href="#获取多个输入"><span>获取多个输入</span></a></h3><p>可以使用 <code>split</code> 方法从单行输入中获取多个值。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">x<span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入两个数字，以空格分隔: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">x <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span></span>
<span class="line">y <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;两个数字的和是: </span><span class="token interpolation"><span class="token punctuation">{</span>x <span class="token operator">+</span> y<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="输入验证" tabindex="-1"><a class="header-anchor" href="#输入验证"><span>输入验证</span></a></h3><p>可以使用循环和条件语句来验证用户输入。</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">        number <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入一个整数: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">break</span></span>
<span class="line">    <span class="token keyword">except</span> ValueError<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;输入无效，请输入一个整数。&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个示例中，程序会持续提示用户输入，直到用户输入一个有效的整数。</p>`,24))])}const N=l(r,[["render",_],["__file","function-input.html.vue"]]),j=JSON.parse('{"path":"/fpython/library/function/function-input.html","title":"input 函数","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"基本用法","slug":"基本用法","link":"#基本用法","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"示例","slug":"示例","link":"#示例","children":[]}]},{"level":2,"title":"特点","slug":"特点","link":"#特点","children":[]},{"level":2,"title":"类型转换","slug":"类型转换","link":"#类型转换","children":[{"level":3,"title":"示例","slug":"示例-1","link":"#示例-1","children":[]}]},{"level":2,"title":"常见应用","slug":"常见应用","link":"#常见应用","children":[{"level":3,"title":"获取多个输入","slug":"获取多个输入","link":"#获取多个输入","children":[]},{"level":3,"title":"输入验证","slug":"输入验证","link":"#输入验证","children":[]}]}],"git":{"updatedTime":1735029308000,"contributors":[{"name":"wanglinhao","username":"wanglinhao","email":"wanglinhao@wegooooo.com","commits":2}]},"filePathRelative":"fpython/library/function/function-input.md"}');export{N as comp,j as data};
