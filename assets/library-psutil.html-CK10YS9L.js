import{_ as l,c as i,a as n,b as a,d as e,e as t,f as c,r as o,o as u}from"./app-BCC5ysrj.js";const r={},d={class:"vuepress-toc"},k={class:"vuepress-toc-item"},m={class:"vuepress-toc-item"},v={class:"vuepress-toc-item"},b={class:"vuepress-toc-item"},y={class:"vuepress-toc-item"},h={class:"vuepress-toc-item"},_={class:"vuepress-toc-item"},g={class:"vuepress-toc-item"},w={class:"vuepress-toc-item"};function f(x,s){const p=o("router-link");return u(),i("div",null,[s[9]||(s[9]=n("h1",{id:"psutil-系统性能信息库",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#psutil-系统性能信息库"},[n("span",null,[n("code",null,"psutil"),a("：系统性能信息库")])])],-1)),n("nav",d,[n("ul",null,[n("li",k,[e(p,{to:"#获取系统性能信息"},{default:t(()=>s[0]||(s[0]=[a("获取系统性能信息")])),_:1}),n("ul",null,[n("li",m,[e(p,{to:"#cpu信息"},{default:t(()=>s[1]||(s[1]=[a("CPU信息")])),_:1})]),n("li",v,[e(p,{to:"#内存信息"},{default:t(()=>s[2]||(s[2]=[a("内存信息")])),_:1})]),n("li",b,[e(p,{to:"#获取磁盘信息"},{default:t(()=>s[3]||(s[3]=[a("获取磁盘信息")])),_:1})]),n("li",y,[e(p,{to:"#网络信息"},{default:t(()=>s[4]||(s[4]=[a("网络信息")])),_:1})]),n("li",h,[e(p,{to:"#其他系统信息"},{default:t(()=>s[5]||(s[5]=[a("其他系统信息")])),_:1})])])]),n("li",_,[e(p,{to:"#系统进程管理方法"},{default:t(()=>s[6]||(s[6]=[a("系统进程管理方法")])),_:1}),n("ul",null,[n("li",g,[e(p,{to:"#进程信息"},{default:t(()=>s[7]||(s[7]=[a("进程信息")])),_:1})]),n("li",w,[e(p,{to:"#popen类的使用"},{default:t(()=>s[8]||(s[8]=[a("popen类的使用")])),_:1})])])])])]),s[10]||(s[10]=c(`<ul><li><p>psutil 是跨平台库，能够轻松实现获取系统运行的进程和系统利用率</p></li><li><p>主要有 CPU 内存 磁盘 网络等</p></li><li><p>应用于 系统监控 分析和限制系统资源及进程的管理</p></li><li><p>实现等同于命令行工具提供的功能： <code>ps top lsof netstat ifconfig who df kill free nice ionice iostat iotop uptime pidof tty taskset pmap</code></p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 使用psutil库 安装</span></span>
<span class="line"><span class="token comment"># 在linux中的安装使用下面的方法</span></span>
<span class="line"><span class="token triple-quoted-string string">&#39;&#39;&#39;</span>
<span class="line">wget https：//pypi.python.org/packages/source/p/psutil/psutil-2.0.0.tar.gz --no-check-certificate</span>
<span class="line">tar -zxvf psutil-2.0.0.tar,gz</span>
<span class="line">cd psutil-2.0.0</span>
<span class="line">python setup.py install</span>
<span class="line">&#39;&#39;&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-letx line-numbers-mode" data-highlighter="prismjs" data-ext="letx" data-title="letx"><pre><code><span class="line">&#39;\\nwget https：//pypi.python.org/packages/source/p/psutil/psutil-2.0.0.tar.gz --no-check-certificate\\ntar -zxvf psutil-2.0.0.tar,gz\\ncd psutil-2.0.0\\npython setup.py install\\n&#39;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h2 id="获取系统性能信息" tabindex="-1"><a class="header-anchor" href="#获取系统性能信息"><span>获取系统性能信息</span></a></h2><h3 id="cpu信息" tabindex="-1"><a class="header-anchor" href="#cpu信息"><span>CPU信息</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># psutil  获取内存信息</span></span>
<span class="line"><span class="token keyword">import</span> psutil</span>
<span class="line">mem <span class="token operator">=</span> psutil<span class="token punctuation">.</span>virtual_memory<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>mem<span class="token punctuation">.</span>total<span class="token punctuation">,</span>mem<span class="token punctuation">.</span>used<span class="token punctuation">)</span>      <span class="token comment">#总内存 已经使用的内存</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;*&#39;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># psutil 获取系统性能信息</span></span>
<span class="line"><span class="token comment"># CPU信息</span></span>
<span class="line"><span class="token keyword">import</span> psutil</span>
<span class="line">cpu_mersion<span class="token operator">=</span>psutil<span class="token punctuation">.</span>cpu_times<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment"># 获取CPU完整信息，需要显示所有的逻辑CPU信息</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>cpu_mersion<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">scputimes<span class="token operator">=</span>psutil<span class="token punctuation">.</span>cpu_times<span class="token punctuation">(</span>percpu<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>scputimes<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">user_cpu<span class="token operator">=</span>psutil<span class="token punctuation">.</span>cpu_times<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>user      <span class="token comment">#获取用户的user的CPU时间比</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>user_cpu<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">cpu_count<span class="token operator">=</span>psutil<span class="token punctuation">.</span>cpu_count<span class="token punctuation">(</span>logical<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>    <span class="token comment"># 获取CPU的物理个数</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>cpu_count<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-letx line-numbers-mode" data-highlighter="prismjs" data-ext="letx" data-title="letx"><pre><code><span class="line">8140427264 5311926272</span>
<span class="line">********************</span>
<span class="line">scputimes(user=22041.671874999996, system=22197.531250000233, idle=1286902.6093749998, interrupt=335.4375, dpc=393.265625)</span>
<span class="line">********************</span>
<span class="line">[scputimes(user=5051.75, system=6444.75, idle=321289.171875, interrupt=242.890625, dpc=353.515625), scputimes(user=4940.90625, system=5250.796875, idle=322593.6875, interrupt=37.96875, dpc=15.359375), scputimes(user=6126.75, system=5436.703124999942, idle=321221.921875, interrupt=28.40625, dpc=11.125), scputimes(user=5922.265624999999, system=5065.28125, idle=321797.82812499994, interrupt=26.171875, dpc=13.265625)]</span>
<span class="line">********************</span>
<span class="line">22041.671874999996</span>
<span class="line">********************</span>
<span class="line">4</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="内存信息" tabindex="-1"><a class="header-anchor" href="#内存信息"><span>内存信息</span></a></h3><ul><li><p>内存利用率信息涉及下面内容</p><ul><li>total：内存总数</li><li>used：已使用的内存数</li><li>free：空闲内存数</li><li>buffers：缓冲使用数</li><li>cache：缓存使用数</li><li>swap：交换分区使用数</li></ul></li><li><p>方法</p><ul><li>psutil.virtual_memory()</li><li>psutil.swap.memory()</li></ul></li><li><p>例子</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> psutil</span>
<span class="line">mem<span class="token operator">=</span>psutil<span class="token punctuation">.</span>virtual_memory<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">#获取内存的完整信息</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>mem<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>mem<span class="token punctuation">.</span>total<span class="token punctuation">)</span>          <span class="token comment"># 获取内存总数 单位kb</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>mem<span class="token punctuation">.</span>free<span class="token punctuation">)</span>           <span class="token comment"># 获取空闲内存数 单位kb</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>psutil<span class="token punctuation">.</span>swap_memory<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 获取swap分区信息</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-letx line-numbers-mode" data-highlighter="prismjs" data-ext="letx" data-title="letx"><pre><code><span class="line">svmem(total=8140427264, available=2802839552, percent=65.6, used=5337587712, free=2802839552)</span>
<span class="line">********************</span>
<span class="line">8140427264</span>
<span class="line">********************</span>
<span class="line">2802839552</span>
<span class="line">********************</span>
<span class="line">sswap(total=12237508608, used=9953914880, free=2283593728, percent=81.3, sin=0, sout=0)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="获取磁盘信息" tabindex="-1"><a class="header-anchor" href="#获取磁盘信息"><span>获取磁盘信息</span></a></h3><ul><li><p>主要关注的是磁盘的利用率和IO信息。</p></li><li><p>磁盘利用率主通过 <strong>psutil.disk_usage()</strong> 方法获取</p></li><li><p>磁盘IO信息主要有：</p><ul><li>read_count：读IO数</li><li>write_count：写IO数</li><li>read_bytes：IO读字节数</li><li>write_bytes：IO写字节数</li><li>read_time：磁盘读时间</li><li>write_time：磁盘写时间</li></ul></li><li><p>磁盘IO信息可以通过 <strong>psutil.disk_io_counters()</strong> 获取</p></li><li><p>例子</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> psutil</span>
<span class="line">disk_mersion <span class="token operator">=</span> psutil<span class="token punctuation">.</span>disk_partitions<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>disk_mersion<span class="token punctuation">)</span>                    <span class="token comment"># 获取磁盘完整信息</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">disk_usage <span class="token operator">=</span> psutil<span class="token punctuation">.</span>disk_usage<span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span>         <span class="token comment"># 获取磁盘分区使用情况</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>disk_usage<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">IO_count <span class="token operator">=</span> psutil<span class="token punctuation">.</span>disk_io_counters<span class="token punctuation">(</span><span class="token punctuation">)</span>         <span class="token comment">#获取磁盘总的IO个数</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>IO_count<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">IO_one_count <span class="token operator">=</span> psutil<span class="token punctuation">.</span>disk_io_counters<span class="token punctuation">(</span>perdisk<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token comment"># 获取单个分区的IO个数</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>IO_one_count<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-letx line-numbers-mode" data-highlighter="prismjs" data-ext="letx" data-title="letx"><pre><code><span class="line">[sdiskpart(device=&#39;C:\\\\&#39;, mountpoint=&#39;C:\\\\&#39;, fstype=&#39;NTFS&#39;, opts=&#39;rw,fixed&#39;), sdiskpart(device=&#39;D:\\\\&#39;, mountpoint=&#39;D:\\\\&#39;, fstype=&#39;NTFS&#39;, opts=&#39;rw,fixed&#39;), sdiskpart(device=&#39;E:\\\\&#39;, mountpoint=&#39;E:\\\\&#39;, fstype=&#39;NTFS&#39;, opts=&#39;rw,fixed&#39;), sdiskpart(device=&#39;F:\\\\&#39;, mountpoint=&#39;F:\\\\&#39;, fstype=&#39;NTFS&#39;, opts=&#39;rw,fixed&#39;)]</span>
<span class="line">********************</span>
<span class="line">sdiskusage(total=64424505344, used=38720602112, free=25703903232, percent=60.1)</span>
<span class="line">********************</span>
<span class="line">sdiskio(read_count=1440399, write_count=6067122, read_bytes=97091175936, write_bytes=114230301696, read_time=895, write_time=881)</span>
<span class="line">********************</span>
<span class="line">{&#39;PhysicalDrive0&#39;: sdiskio(read_count=1411018, write_count=6055467, read_bytes=68480579072, write_bytes=106586880000, read_time=765, write_time=827), &#39;PhysicalDrive1&#39;: sdiskio(read_count=29381, write_count=11655, read_bytes=28610596864, write_bytes=7643421696, read_time=130, write_time=54)}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="网络信息" tabindex="-1"><a class="header-anchor" href="#网络信息"><span>网络信息</span></a></h3><ul><li>几个关键点 <ul><li>bytes_sent： 发送字节数</li><li>bytes_recv： 接收字节数</li><li>packets_sent： 发送数据包数</li><li>packets_recv： 接收数据包数</li></ul></li><li>这些信息可用 <strong>psutil.net_io_counters()</strong> 获取</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">net_io <span class="token operator">=</span> psutil<span class="token punctuation">.</span>net_io_counters<span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token comment"># 获取网络总的IO信息。默认pernic=Flase</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>net_io<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;*&#39;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">net_one_io <span class="token operator">=</span> psutil<span class="token punctuation">.</span>net_io_counters<span class="token punctuation">(</span>pernic<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>         <span class="token comment"># 获取单个网络接口的IO信息</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>net_one_io<span class="token punctuation">)</span>   </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-letx line-numbers-mode" data-highlighter="prismjs" data-ext="letx" data-title="letx"><pre><code><span class="line">snetio(bytes_sent=7332570178, bytes_recv=1442451670, packets_sent=5322907, packets_recv=3243355, errin=0, errout=0, dropin=0, dropout=0)</span>
<span class="line">********************</span>
<span class="line">    {&#39;Npcap Loopback Adapter&#39;: snetio(bytes_sent=0, bytes_recv=0, packets_sent=0, packets_recv=0, errin=0, errout=0, dropin=0, dropout=0), &#39;以太网 3&#39;: snetio(bytes_sent=0, bytes_recv=0, packets_sent=0, packets_recv=0, errin=0, errout=0, dropin=0, dropout=0), &#39;以太网&#39;: snetio(bytes_sent=7332567343, bytes_recv=1442451670, packets_sent=5320072, packets_recv=3243355, errin=0, errout=0, dropin=0, dropout=0), &#39;以太网 2&#39;: snetio(bytes_sent=0, bytes_recv=0, packets_sent=0, packets_recv=0, errin=0, errout=0, dropin=0, dropout=0), &#39;VMware Network Adapter VMnet1&#39;: snetio(bytes_sent=1383, bytes_recv=0, packets_sent=1383, packets_recv=0, errin=0, errout=0, dropin=0, dropout=0), &#39;VMware Network Adapter VMnet8&#39;: snetio(bytes_sent=1452, bytes_recv=0, packets_sent=1452, packets_recv=0, errin=0, errout=0, dropin=0, dropout=0), &#39;Loopback Pseudo-Interface 1&#39;: snetio(bytes_sent=0, bytes_recv=0, packets_sent=0, packets_recv=0, errin=0, errout=0, dropin=0, dropout=0)}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="其他系统信息" tabindex="-1"><a class="header-anchor" href="#其他系统信息"><span>其他系统信息</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 获取当前登录系统的用户信息</span></span>
<span class="line"><span class="token keyword">import</span> psutil</span>
<span class="line">user <span class="token operator">=</span> psutil<span class="token punctuation">.</span>users<span class="token punctuation">(</span><span class="token punctuation">)</span>               <span class="token comment"># 获取当前登录系统的用户信息</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;*&#39;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 获取当前系统的开机时间，默认使用的是linux时间戳或者windows时间戳的格式</span></span>
<span class="line">times <span class="token operator">=</span> psutil<span class="token punctuation">.</span>boot_time<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>times<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 获取当前系统开机时间，换成自然格式</span></span>
<span class="line"><span class="token keyword">import</span> psutil<span class="token punctuation">,</span> datetime</span>
<span class="line">times <span class="token operator">=</span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>fromtimestamp<span class="token punctuation">(</span>psutil<span class="token punctuation">.</span>boot_time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&quot;%Y-%m-%d %H:%M:%S&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>times<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-letx line-numbers-mode" data-highlighter="prismjs" data-ext="letx" data-title="letx"><pre><code><span class="line">[suser(name=&#39;wlh_pc_&#39;, terminal=None, host=&#39;0.0.0.0&#39;, started=1556814275.0, pid=None)]</span>
<span class="line">********************</span>
<span class="line">1556500621.0</span>
<span class="line">********************</span>
<span class="line">2019-04-29 09:17:01</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="系统进程管理方法" tabindex="-1"><a class="header-anchor" href="#系统进程管理方法"><span>系统进程管理方法</span></a></h2><ul><li>当前系统的进程信息，主要有： <ul><li>进程的启动时间</li><li>查看和设置CPU亲和度</li><li>内存使用率</li><li>IO信息</li><li>socket链接</li><li>线程数</li></ul></li></ul><h3 id="进程信息" tabindex="-1"><a class="header-anchor" href="#进程信息"><span>进程信息</span></a></h3><ul><li>使用 <strong>psutil.pids()</strong> 方法获取所有进程PID</li><li>使用 <strong>psutil.Process()</strong> 方法获取单个进程的名称、路径、状态、系统资源利用率等信息</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> psutil</span>
<span class="line">pids <span class="token operator">=</span> psutil<span class="token punctuation">.</span>pids<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># 列出所有进程PID</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>pids<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;*&#39;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">p <span class="token operator">=</span> psutil<span class="token punctuation">.</span>Process<span class="token punctuation">(</span><span class="token number">104</span><span class="token punctuation">)</span>    <span class="token comment"># 实例化一个Process对象，参数为进程号</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>name<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>             <span class="token comment"># 打印进程名</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;*&#39;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>exe<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>              <span class="token comment"># 进程bin路径</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;*&#39;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>cwd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>              <span class="token comment"># 进程工作目录绝对路径</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;*&#39;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>status<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>           <span class="token comment"># 进程状态</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;*&#39;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>create_time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token comment"># 进程创建时间，时间戳格式</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;*&#39;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>uids<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>             <span class="token comment"># 进程UID信息</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;*&#39;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>gids<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>             <span class="token comment"># 进程GID信息</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;*&#39;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>cpu_times<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment"># 进程CPU时间信息。包括 user system两个CPU时间</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;*&#39;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>cpu_affinity<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token comment"># get进程CPU亲和度，如果设置进程CPU亲和度，将CPU号作为参数即可</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;*&#39;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>memory_percent<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment"># 进程内存利用率</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;*&#39;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>memory_info<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token comment"># 进程rss vms信息</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;*&#39;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>io_counters<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token comment"># 进程IO信息，包含读写IO数和字节数</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;*&#39;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>connections<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token comment"># 返回进程的socket的namedutples列表，包括 fs family laddr等信息</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;*&#39;</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>num_threads<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment"># 进程的线程数</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="popen类的使用" tabindex="-1"><a class="header-anchor" href="#popen类的使用"><span>popen类的使用</span></a></h3><ul><li>popen类的作用是获取用户启动的应用程序进程信息，来跟踪程序进程的运行状态</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 实例</span></span>
<span class="line"><span class="token keyword">import</span> psutil</span>
<span class="line"><span class="token keyword">from</span> subprocess <span class="token keyword">import</span> PIPE</span>
<span class="line">p <span class="token operator">=</span> psutil<span class="token punctuation">.</span>Popen（<span class="token punctuation">[</span><span class="token string">&quot;/usr/bin/python&quot;</span>， <span class="token string">&quot;-c&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;print（&#39;hello&#39;）&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>stdout<span class="token operator">=</span>PIPE）</span>
<span class="line">p<span class="token punctuation">.</span>name<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">p<span class="token punctuation">.</span>username<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">p<span class="token punctuation">.</span>communicate<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">p<span class="token punctuation">.</span>cpu_times<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,24))])}const q=l(r,[["render",f],["__file","library-psutil.html.vue"]]),I=JSON.parse('{"path":"/fpython/library/library/library-psutil.html","title":"psutil：系统性能信息库","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"获取系统性能信息","slug":"获取系统性能信息","link":"#获取系统性能信息","children":[{"level":3,"title":"CPU信息","slug":"cpu信息","link":"#cpu信息","children":[]},{"level":3,"title":"内存信息","slug":"内存信息","link":"#内存信息","children":[]},{"level":3,"title":"获取磁盘信息","slug":"获取磁盘信息","link":"#获取磁盘信息","children":[]},{"level":3,"title":"网络信息","slug":"网络信息","link":"#网络信息","children":[]},{"level":3,"title":"其他系统信息","slug":"其他系统信息","link":"#其他系统信息","children":[]}]},{"level":2,"title":"系统进程管理方法","slug":"系统进程管理方法","link":"#系统进程管理方法","children":[{"level":3,"title":"进程信息","slug":"进程信息","link":"#进程信息","children":[]},{"level":3,"title":"popen类的使用","slug":"popen类的使用","link":"#popen类的使用","children":[]}]}],"git":{"updatedTime":1735029308000,"contributors":[{"name":"wanglinhao","username":"wanglinhao","email":"wanglinhao@wegooooo.com","commits":5}]},"filePathRelative":"fpython/library/library/library-psutil.md"}');export{q as comp,I as data};
