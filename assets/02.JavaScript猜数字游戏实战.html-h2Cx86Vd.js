import{_ as u,c as r,a as n,d as a,e,f as o,b as t,r as l,o as d}from"./app-BCC5ysrj.js";const k={},v={class:"vuepress-toc"},m={class:"vuepress-toc-item"},b={class:"vuepress-toc-item"},h={class:"vuepress-toc-item"},g={class:"vuepress-toc-item"},f={class:"vuepress-toc-item"},q={class:"vuepress-toc-item"},y={class:"vuepress-toc-item"};function w(x,s){const p=l("router-link"),i=l("Mermaid"),c=l("RouteLink");return d(),r("div",null,[s[9]||(s[9]=n("h1",{id:"javascript-猜数字游戏实战",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#javascript-猜数字游戏实战"},[n("span",null,"JavaScript 猜数字游戏实战")])],-1)),n("nav",v,[n("ul",null,[n("li",m,[a(p,{to:"#概述"},{default:e(()=>s[0]||(s[0]=[t("概述")])),_:1}),n("ul",null,[n("li",b,[a(p,{to:"#学习目标"},{default:e(()=>s[1]||(s[1]=[t("学习目标")])),_:1})]),n("li",h,[a(p,{to:"#前置知识"},{default:e(()=>s[2]||(s[2]=[t("前置知识")])),_:1})])])]),n("li",g,[a(p,{to:"#案例-构建猜数字游戏"},{default:e(()=>s[3]||(s[3]=[t("案例：构建猜数字游戏")])),_:1}),n("ul",null,[n("li",f,[a(p,{to:"#游戏需求"},{default:e(()=>s[4]||(s[4]=[t("游戏需求")])),_:1})]),n("li",q,[a(p,{to:"#程序设计思路"},{default:e(()=>s[5]||(s[5]=[t("程序设计思路")])),_:1})]),n("li",y,[a(p,{to:"#在-html-文件的底部添加-javascript-代码"},{default:e(()=>s[6]||(s[6]=[t("在 html 文件的底部添加 JavaScript 代码")])),_:1})])])])])]),s[10]||(s[10]=o('<hr><h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>通过开发一个猜数字游戏，我们将学习 JavaScript 的基本概念和编程思维。</p><h3 id="学习目标" tabindex="-1"><a class="header-anchor" href="#学习目标"><span>学习目标</span></a></h3><ul><li>掌握 JavaScript 基础语法</li><li>学习程序设计思维</li><li>理解代码组织方式</li></ul><h3 id="前置知识" tabindex="-1"><a class="header-anchor" href="#前置知识"><span>前置知识</span></a></h3><ul><li>HTML 基础</li><li>CSS 基础</li><li>JavaScript 基本概念</li></ul><h2 id="案例-构建猜数字游戏" tabindex="-1"><a class="header-anchor" href="#案例-构建猜数字游戏"><span>案例：构建猜数字游戏</span></a></h2><h3 id="游戏需求" tabindex="-1"><a class="header-anchor" href="#游戏需求"><span>游戏需求</span></a></h3><p>开发一个猜数字游戏，具有以下功能：</p><ol><li>随机生成 1-100 的数字</li><li>玩家有 10 次猜测机会</li><li>每次猜测后给出提示： <ul><li>猜对了：显示祝贺信息</li><li>猜错了：提示数字偏大或偏小</li></ul></li><li>显示历史猜测记录</li><li>游戏结束后可以重新开始</li></ol><h3 id="程序设计思路" tabindex="-1"><a class="header-anchor" href="#程序设计思路"><span>程序设计思路</span></a></h3>',12)),a(i,{id:"mermaid-104",code:"eJxNjzsKwkAQhntPsRfwCopJfNZ2i4UIYiEIIlgYwUaMiCbggyiKiC8sNBYiEiVexp1NbuG6U5itlvn++WamXK01S5VivUHyWoSIl6Ds1WHHATweYJgFEo3GiEL5ZA2GFSxMWLowvRZkVJFQpXx0Ype7741Zd49ElURrMWMHszPYDrMOcN7yzaUtufbjOlZ0kqRge3zn8v3Kv7lowEQwmfuOo5NUCx3+24ZlX+zweS3QlEKTLUJpyp9z1nPBtIQMN1dDIdGvkwzFw/hzDKs1zkrKaJYGvSHMrnh+HFEGkfxn/6OUUEFqc2I2Cr+M15a9"}),s[11]||(s[11]=n("h3",{id:"在-html-文件的底部添加-javascript-代码",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#在-html-文件的底部添加-javascript-代码"},[n("span",null,"在 html 文件的底部添加 JavaScript 代码")])],-1)),n("blockquote",null,[n("p",null,[s[8]||(s[8]=t("完整代码：")),a(c,{to:"/fhtml/JavaScript/01%EF%BC%9A%E4%BB%8B%E7%BB%8D/html/number-guessing-game-start.html"},{default:e(()=>s[7]||(s[7]=[t("数字游戏html")])),_:1})])]),s[12]||(s[12]=o(`<h4 id="添加变量保存数据" tabindex="-1"><a class="header-anchor" href="#添加变量保存数据"><span>添加变量保存数据</span></a></h4><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line"><span class="token keyword">let</span> randomNumber <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> guesses <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;.guesses&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">const</span> lastResult <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;.lastResult&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">const</span> lowOrHi <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;.lowOrhi&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> guessSubmit <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;.guessSubmit&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">const</span> guessField <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;.guessField&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">let</span> guessCount <span class="token operator">=</span> <span class="token number">1</span></span>
<span class="line"><span class="token keyword">let</span> resetButton</span>
<span class="line"></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="函数" tabindex="-1"><a class="header-anchor" href="#函数"><span>函数</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">checkGuess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;检查猜测结果&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="运算符" tabindex="-1"><a class="header-anchor" href="#运算符"><span>运算符</span></a></h4><p>JavaScript 支持多种运算符：</p><table><thead><tr><th>运算符</th><th>名称</th><th>实例</th></tr></thead><tbody><tr><td><code>+</code></td><td>加</td><td>1 + 1</td></tr><tr><td><code>-</code></td><td>减</td><td>1 - 1</td></tr><tr><td><code>*</code></td><td>乘</td><td>1 * 1</td></tr><tr><td><code>===</code></td><td>全等</td><td>1 === 1</td></tr><tr><td><code>!==</code></td><td>不等于</td><td>1 !== 1</td></tr><tr><td><code>&gt;</code></td><td>大于</td><td>1 &gt; 1</td></tr><tr><td><code>&lt;</code></td><td>小于</td><td>1 &lt; 1</td></tr></tbody></table><h4 id="条件语句" tabindex="-1"><a class="header-anchor" href="#条件语句"><span>条件语句</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">checkGuess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> userGuess <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>guessField<span class="token punctuation">.</span>value<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span>guessCount <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">      guesses<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token string">&quot;Previous guesses: &quot;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    guesses<span class="token punctuation">.</span>textContent <span class="token operator">+=</span> userGuess <span class="token operator">+</span> <span class="token string">&quot; &quot;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>userGuess <span class="token operator">===</span> randomNumber<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      lastResult<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token string">&quot;Congratulations! You got it right!&quot;</span></span>
<span class="line">      lastResult<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">&quot;green&quot;</span></span>
<span class="line">      lowOrHi<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token string">&quot;&quot;</span></span>
<span class="line">      <span class="token function">setGameOver</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>guessCount <span class="token operator">===</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      lastResult<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token string">&quot;!!!GAME OVER!!!&quot;</span><span class="token punctuation">;</span></span>
<span class="line">      lowOrHi<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token function">setGameOver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">      lastResult<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token string">&quot;Wrong!&quot;</span><span class="token punctuation">;</span></span>
<span class="line">      lastResult<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>userGuess <span class="token operator">&lt;</span> randomNumber<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        lowOrHi<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token string">&quot;Last guess was too low!&quot;</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>userGuess <span class="token operator">&gt;</span> randomNumber<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        lowOrHi<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token string">&quot;Last guess was too high!&quot;</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    guessCount<span class="token operator">++</span><span class="token punctuation">;</span></span>
<span class="line">    guessField<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    guessField<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="事件-event" tabindex="-1"><a class="header-anchor" href="#事件-event"><span>事件(Event)</span></a></h4><p>事件是实现交互的核心机制：</p><ul><li><strong>事件</strong>：浏览器中发生的动作（点击、加载等）</li><li><strong>事件监听器</strong>：监听事件发生的代码</li><li><strong>事件处理器</strong>：响应事件的具体代码</li></ul><p>添加事件监听器：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">guessSubmit<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> checkGuess<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p><strong>注意：</strong></p><ul><li>事件处理函数不要加括号</li><li>addEventListener 需要两个参数：事件类型和处理函数</li></ul></blockquote><h4 id="补全游戏功能" tabindex="-1"><a class="header-anchor" href="#补全游戏功能"><span>补全游戏功能</span></a></h4><p>游戏结束处理：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">setGameOver</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    guessField<span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">    guessSubmit<span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">    resetButton <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;button&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    resetButton<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token string">&quot;Start new game&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>resetButton<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    resetButton<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> resetGame<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重置游戏功能：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">resetGame</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    guessCount <span class="token operator">=</span> <span class="token number">1</span></span>
<span class="line">    <span class="token keyword">const</span> resetParas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&quot;.resultParas p&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> restPara <span class="token keyword">of</span> resetParas<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      resetPara<span class="token punctuation">.</span>textContent<span class="token operator">=</span><span class="token string">&quot;&quot;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    resetButton<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>resetButton<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    guessField<span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">    guessSubmit<span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">    guessField<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&quot;&quot;</span></span>
<span class="line">    guessField<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    lastResult<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor<span class="token operator">=</span><span class="token string">&#39;white&#39;</span></span>
<span class="line">    randomNumber <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span> <span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="循环-loop" tabindex="-1"><a class="header-anchor" href="#循环-loop"><span>循环 Loop</span></a></h4><p>for...of 循环用于遍历可迭代对象：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;apple&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;banana&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;orange&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> fruit <span class="token keyword">of</span> fruits<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fruit<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在游戏中的应用：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> resetParas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&quot;.resultParas p&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> restPara <span class="token keyword">of</span> resetParas<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  resetPara<span class="token punctuation">.</span>textContent<span class="token operator">=</span><span class="token string">&quot;&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>说明：</strong></p><ul><li>querySelectorAll 返回所有匹配的元素</li><li>for...of 循环遍历每个元素</li><li>清空每个元素的文本内容</li></ul></blockquote>`,26))])}const S=u(k,[["render",w],["__file","02.JavaScript猜数字游戏实战.html.vue"]]),C=JSON.parse('{"path":"/fhtml/JavaScript/01%EF%BC%9A%E4%BB%8B%E7%BB%8D/02.JavaScript%E7%8C%9C%E6%95%B0%E5%AD%97%E6%B8%B8%E6%88%8F%E5%AE%9E%E6%88%98.html","title":"JavaScript 猜数字游戏实战","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[{"level":3,"title":"学习目标","slug":"学习目标","link":"#学习目标","children":[]},{"level":3,"title":"前置知识","slug":"前置知识","link":"#前置知识","children":[]}]},{"level":2,"title":"案例：构建猜数字游戏","slug":"案例-构建猜数字游戏","link":"#案例-构建猜数字游戏","children":[{"level":3,"title":"游戏需求","slug":"游戏需求","link":"#游戏需求","children":[]},{"level":3,"title":"程序设计思路","slug":"程序设计思路","link":"#程序设计思路","children":[]},{"level":3,"title":"在 html 文件的底部添加 JavaScript 代码","slug":"在-html-文件的底部添加-javascript-代码","link":"#在-html-文件的底部添加-javascript-代码","children":[]}]}],"git":{},"filePathRelative":"fhtml/JavaScript/01：介绍/02.JavaScript猜数字游戏实战.md"}');export{S as comp,C as data};
