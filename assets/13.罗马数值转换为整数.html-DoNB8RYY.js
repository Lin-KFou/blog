import{_ as i,c,a as n,d as e,e as t,f as u,b as a,r as l,o as r}from"./app-BCC5ysrj.js";const d={},k={class:"vuepress-toc"},m={class:"vuepress-toc-item"},v={class:"vuepress-toc-item"},b={class:"vuepress-toc-item"},h={class:"vuepress-toc-item"},g={class:"vuepress-toc-item"},f={class:"vuepress-toc-item"},y={class:"vuepress-toc-item"},_={class:"vuepress-toc-item"},x={class:"vuepress-toc-item"},w={class:"vuepress-toc-item"},I={class:"vuepress-toc-item"};function C(B,s){const p=l("router-link"),o=l("RouteLink");return r(),c("div",null,[s[13]||(s[13]=n("h1",{id:"_13-罗马数值转换为整数",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_13-罗马数值转换为整数"},[n("span",null,"13：罗马数值转换为整数")])],-1)),n("nav",k,[n("ul",null,[n("li",m,[e(p,{to:"#题目描述"},{default:t(()=>s[0]||(s[0]=[a("题目描述")])),_:1}),n("ul",null,[n("li",v,[e(p,{to:"#字符对应关系"},{default:t(()=>s[1]||(s[1]=[a("字符对应关系")])),_:1})]),n("li",b,[e(p,{to:"#特殊规则"},{default:t(()=>s[2]||(s[2]=[a("特殊规则")])),_:1})]),n("li",h,[e(p,{to:"#示例"},{default:t(()=>s[3]||(s[3]=[a("示例")])),_:1})]),n("li",g,[e(p,{to:"#提示"},{default:t(()=>s[4]||(s[4]=[a("提示")])),_:1})])])]),n("li",f,[e(p,{to:"#解题思路"},{default:t(()=>s[5]||(s[5]=[a("解题思路")])),_:1})]),n("li",y,[e(p,{to:"#代码"},{default:t(()=>s[6]||(s[6]=[a("代码")])),_:1}),n("ul",null,[n("li",_,[e(p,{to:"#方法-1"},{default:t(()=>s[7]||(s[7]=[a("方法 1")])),_:1})]),n("li",x,[e(p,{to:"#方法-2"},{default:t(()=>s[8]||(s[8]=[a("方法 2")])),_:1})]),n("li",w,[e(p,{to:"#方法-3"},{default:t(()=>s[9]||(s[9]=[a("方法 3")])),_:1})])])]),n("li",I,[e(p,{to:"#方法比较"},{default:t(()=>s[10]||(s[10]=[a("方法比较")])),_:1})])])]),s[14]||(s[14]=u(`<hr><h2 id="题目描述" tabindex="-1"><a class="header-anchor" href="#题目描述"><span>题目描述</span></a></h2><p><strong>题目：</strong></p><p>罗马数字包含以下七种字符: <code>I</code>、<code>V</code>、<code>X</code>、<code>L</code>、<code>C</code>、<code>D</code> 和 <code>M</code>。给定一个罗马数字，将其转换成整数。</p><h3 id="字符对应关系" tabindex="-1"><a class="header-anchor" href="#字符对应关系"><span>字符对应关系</span></a></h3><table><thead><tr><th>字符</th><th>数值</th></tr></thead><tbody><tr><td>I</td><td>1</td></tr><tr><td>V</td><td>5</td></tr><tr><td>X</td><td>10</td></tr><tr><td>L</td><td>50</td></tr><tr><td>C</td><td>100</td></tr><tr><td>D</td><td>500</td></tr><tr><td>M</td><td>1000</td></tr></tbody></table><h3 id="特殊规则" tabindex="-1"><a class="header-anchor" href="#特殊规则"><span>特殊规则</span></a></h3><p>通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如：</p><ul><li><code>IV</code> 表示 4（5 - 1）</li><li><code>IX</code> 表示 9（10 - 1）</li><li><code>XL</code> 表示 40（50 - 10）</li><li><code>XC</code> 表示 90（100 - 10）</li><li><code>CD</code> 表示 400（500 - 100）</li><li><code>CM</code> 表示 900（1000 - 100）</li></ul><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h3><p>示例 1：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">输入: s = &quot;III&quot;</span>
<span class="line">输出: 3</span>
<span class="line">解释: III = 3</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例 2：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">输入: s = &quot;LVIII&quot;</span>
<span class="line">输出: 58</span>
<span class="line">解释: L = 50, V= 5, III = 3</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="提示" tabindex="-1"><a class="header-anchor" href="#提示"><span>提示</span></a></h3><ul><li>1 &lt;= s.length &lt;= 15</li><li>s 仅含字符 (&#39;I&#39;, &#39;V&#39;, &#39;X&#39;, &#39;L&#39;, &#39;C&#39;, &#39;D&#39;, &#39;M&#39;)</li><li>题目数据保证 s 是一个有效的罗马数字，且表示整数在范围 [1, 3999] 内</li></ul><h2 id="解题思路" tabindex="-1"><a class="header-anchor" href="#解题思路"><span>解题思路</span></a></h2><ol><li>建立罗马数字到整数的映射关系</li><li>从左到右遍历字符串</li><li>根据规则判断是加还是减： <ul><li>如果当前字符代表的值小于其右边字符代表的值，则减去当前值</li><li>否则加上当前值</li></ul></li></ol><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码"><span>代码</span></a></h2><h3 id="方法-1" tabindex="-1"><a class="header-anchor" href="#方法-1"><span>方法 1</span></a></h3><p>从左向右遍历，通过比较相邻字符来决定加减：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">romanToInt</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> s<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">int</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token comment"># 建立罗马数字到整数的映射</span></span>
<span class="line">        roman <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;I&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;V&#39;</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;X&#39;</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">&#39;L&#39;</span><span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span></span>
<span class="line">                 <span class="token string">&#39;C&#39;</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&#39;D&#39;</span><span class="token punctuation">:</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token string">&#39;M&#39;</span><span class="token punctuation">:</span> <span class="token number">1000</span><span class="token punctuation">}</span></span>
<span class="line">        result <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment"># 存储最终结果</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment"># 遍历到倒数第二个字符</span></span>
<span class="line">        <span class="token keyword">for</span> index <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">if</span> roman<span class="token punctuation">[</span>s<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> roman<span class="token punctuation">[</span>s<span class="token punctuation">[</span>index<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">:</span></span>
<span class="line">                result <span class="token operator">-=</span> roman<span class="token punctuation">[</span>s<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">]</span>  <span class="token comment"># 当前字符小于右边字符，减去当前值</span></span>
<span class="line">            <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">                result <span class="token operator">+=</span> roman<span class="token punctuation">[</span>s<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">]</span>  <span class="token comment"># 当前字符大于等于右边字符，加上当前值</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">return</span> result <span class="token operator">+</span> roman<span class="token punctuation">[</span>s<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span>  <span class="token comment"># 加上最后一个字符的值</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="复杂度分析" tabindex="-1"><a class="header-anchor" href="#复杂度分析"><span>复杂度分析</span></a></h4><ul><li>时间复杂度：O(n)，其中 n 是字符串的长度</li><li>空间复杂度：O(1)，只需要常数空间存储映射关系</li></ul><h3 id="方法-2" tabindex="-1"><a class="header-anchor" href="#方法-2"><span>方法 2</span></a></h3><p>从右向左遍历，通过与前一个值比较来决定加减：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">romanToInt</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> s<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">int</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token comment"># 定义罗马数字的映射</span></span>
<span class="line">        roman <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;I&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;V&#39;</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;X&#39;</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">&#39;L&#39;</span><span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&#39;D&#39;</span><span class="token punctuation">:</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token string">&#39;M&#39;</span><span class="token punctuation">:</span> <span class="token number">1000</span><span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        total <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">        prev_value <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">for</span> ch <span class="token keyword">in</span> <span class="token builtin">reversed</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">            value <span class="token operator">=</span> roman<span class="token punctuation">[</span>ch<span class="token punctuation">]</span></span>
<span class="line">            <span class="token keyword">if</span> value <span class="token operator">&lt;</span> prev_value<span class="token punctuation">:</span></span>
<span class="line">                total <span class="token operator">-=</span> value  <span class="token comment"># 如果当前值小于前一个值，则减去当前值</span></span>
<span class="line">            <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">                total <span class="token operator">+=</span> value  <span class="token comment"># 否则，加上当前值</span></span>
<span class="line">            prev_value <span class="token operator">=</span> value</span>
<span class="line"></span>
<span class="line">        <span class="token keyword">return</span> total</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="复杂度分析-1" tabindex="-1"><a class="header-anchor" href="#复杂度分析-1"><span>复杂度分析</span></a></h4><ul><li>时间复杂度：O(n)</li><li>空间复杂度：O(1)</li></ul><h3 id="方法-3" tabindex="-1"><a class="header-anchor" href="#方法-3"><span>方法 3</span></a></h3><p>直接遍历，通过检查下一个字符来决定加减：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">romanToInt</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> s<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">int</span><span class="token punctuation">:</span></span>
<span class="line">        roman <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;I&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;V&#39;</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;X&#39;</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">&#39;L&#39;</span><span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token string">&#39;C&#39;</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">&#39;D&#39;</span><span class="token punctuation">:</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token string">&#39;M&#39;</span><span class="token punctuation">:</span> <span class="token number">1000</span><span class="token punctuation">}</span></span>
<span class="line">        total <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">        i <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">        <span class="token keyword">while</span> i <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token comment"># 获取当前字符代表的值</span></span>
<span class="line">            value <span class="token operator">=</span> roman<span class="token punctuation">[</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span></span>
<span class="line">            <span class="token comment"># 如果不是最后一个字符，并且当前字符代表的值小于下一个字符代表的值</span></span>
<span class="line">            <span class="token keyword">if</span> i <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token keyword">and</span> value <span class="token operator">&lt;</span> roman<span class="token punctuation">[</span>s<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">:</span></span>
<span class="line">                total <span class="token operator">-=</span> value</span>
<span class="line">            <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">                total <span class="token operator">+=</span> value</span>
<span class="line">            i <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line">        <span class="token keyword">return</span> total</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="复杂度分析-2" tabindex="-1"><a class="header-anchor" href="#复杂度分析-2"><span>复杂度分析</span></a></h4><ul><li>时间复杂度：O(n)</li><li>空间复杂度：O(1)</li></ul><h2 id="方法比较" tabindex="-1"><a class="header-anchor" href="#方法比较"><span>方法比较</span></a></h2><ol><li><strong>方法一</strong>：适合从左到右的线性处理</li><li><strong>方法二</strong>：通过反向遍历简化了判断逻辑</li><li><strong>方法三</strong>：直观但需要额外的边界检查</li></ol><blockquote><p><strong>注意：</strong></p><ul><li>确保输入是有效的罗马数字</li><li>注意特殊组合的处理</li><li>考虑边界情况</li></ul></blockquote><hr>`,38)),n("blockquote",null,[n("p",null,[s[12]||(s[12]=a("函数 reversed：")),e(o,{to:"/fpython/library/reversed%E5%87%BD%E6%95%B0.html"},{default:t(()=>s[11]||(s[11]=[a("reversed()指南")])),_:1})])])])}const E=i(d,[["render",C],["__file","13.罗马数值转换为整数.html.vue"]]),D=JSON.parse('{"path":"/fpython/example/algorithm/13.%E7%BD%97%E9%A9%AC%E6%95%B0%E5%80%BC%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%95%B4%E6%95%B0.html","title":"13：罗马数值转换为整数","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"题目描述","slug":"题目描述","link":"#题目描述","children":[{"level":3,"title":"字符对应关系","slug":"字符对应关系","link":"#字符对应关系","children":[]},{"level":3,"title":"特殊规则","slug":"特殊规则","link":"#特殊规则","children":[]},{"level":3,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":3,"title":"提示","slug":"提示","link":"#提示","children":[]}]},{"level":2,"title":"解题思路","slug":"解题思路","link":"#解题思路","children":[]},{"level":2,"title":"代码","slug":"代码","link":"#代码","children":[{"level":3,"title":"方法 1","slug":"方法-1","link":"#方法-1","children":[]},{"level":3,"title":"方法 2","slug":"方法-2","link":"#方法-2","children":[]},{"level":3,"title":"方法 3","slug":"方法-3","link":"#方法-3","children":[]}]},{"level":2,"title":"方法比较","slug":"方法比较","link":"#方法比较","children":[]}],"git":{"updatedTime":1735029308000,"contributors":[{"name":"wanglinhao","username":"wanglinhao","email":"wanglinhao@wegooooo.com","commits":3}]},"filePathRelative":"fpython/example/algorithm/13.罗马数值转换为整数.md"}');export{E as comp,D as data};
