import{_ as i,c as p,a as s,d as e,e as t,f as d,r as o,o as c,b as l}from"./app-BCC5ysrj.js";const r={},u={class:"vuepress-toc"},h={class:"vuepress-toc-item"},m={class:"vuepress-toc-item"},k={class:"vuepress-toc-item"};function x(v,n){const a=o("router-link");return c(),p("div",null,[n[3]||(n[3]=s("h1",{id:"pandas-数据写入-excel-表格",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#pandas-数据写入-excel-表格"},[s("span",null,"Pandas: 数据写入 excel 表格")])],-1)),s("nav",u,[s("ul",null,[s("li",h,[e(a,{to:"#示例解释"},{default:t(()=>n[0]||(n[0]=[l("示例解释")])),_:1}),s("ul",null,[s("li",m,[e(a,{to:"#写入-excel-文件时使用-index-true"},{default:t(()=>n[1]||(n[1]=[l("写入 Excel 文件时使用 index=True")])),_:1})])])]),s("li",k,[e(a,{to:"#使用场景"},{default:t(()=>n[2]||(n[2]=[l("使用场景")])),_:1})])])]),n[4]||(n[4]=d(`<hr><p>在 <code>df.to_excel(&#39;billing_details.xlsx&#39;, index=False)</code> 中，<code>index=False</code> 参数的作用是告诉 Pandas 在将 DataFrame 写入 Excel 文件时，不要写入行索引（即 DataFrame 的索引列）。这通常用于当索引对输出文件不重要或者不需要时。</p><hr><h2 id="示例解释" tabindex="-1"><a class="header-anchor" href="#示例解释"><span>示例解释</span></a></h2><p>假设你有一个 DataFrame：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd</span>
<span class="line"></span>
<span class="line">data <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&#39;Name&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;Alice&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Bob&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Charlie&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;Age&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&#39;City&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;New York&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Los Angeles&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Chicago&#39;</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果是：</p><div class="language-markdown line-numbers-mode" data-highlighter="prismjs" data-ext="md" data-title="md"><pre><code><span class="line">      Name  Age         City</span>
<span class="line">0    Alice   25     New York</span>
<span class="line">1      Bob   30  Los Angeles</span>
<span class="line">2  Charlie   35      Chicago</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 DataFrame 中，默认的行索引是 0, 1, 2。</p><h3 id="写入-excel-文件时使用-index-true" tabindex="-1"><a class="header-anchor" href="#写入-excel-文件时使用-index-true"><span>写入 Excel 文件时使用 <code>index=True</code></span></a></h3><ul><li><code>index=True</code>（默认值）</li></ul><p>如果你使用 <code>index=True</code>（或者不指定 <code>index</code> 参数，因为默认值是 <code>True</code>），行索引也会被写入 Excel 文件：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">df<span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span><span class="token string">&#39;billing_details_with_index.xlsx&#39;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>生成的 Excel 文件会包含行索引：</p><table><thead><tr><th></th><th>Name</th><th>Age</th><th>City</th></tr></thead><tbody><tr><td>0</td><td>Alice</td><td>25</td><td>New York</td></tr><tr><td>1</td><td>Bob</td><td>30</td><td>Los Angeles</td></tr><tr><td>2</td><td>Charlie</td><td>35</td><td>Chicago</td></tr></tbody></table><h4 id="写入-excel-文件时使用-index-false" tabindex="-1"><a class="header-anchor" href="#写入-excel-文件时使用-index-false"><span>写入 Excel 文件时使用 <code>index=False</code></span></a></h4><p>如果你使用 <code>index=False</code>，行索引将不会被写入 Excel 文件：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line">df<span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span><span class="token string">&#39;billing_details_without_index.xlsx&#39;</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>生成的 Excel 文件将不包含行索引：</p><table><thead><tr><th>Name</th><th>Age</th><th>City</th></tr></thead><tbody><tr><td>Alice</td><td>25</td><td>New York</td></tr><tr><td>Bob</td><td>30</td><td>Los Angeles</td></tr><tr><td>Charlie</td><td>35</td><td>Chicago</td></tr></tbody></table><h2 id="使用场景" tabindex="-1"><a class="header-anchor" href="#使用场景"><span>使用场景</span></a></h2><ul><li><strong>保留索引</strong>：如果行索引在分析或数据处理过程中有意义，例如表示行的唯一标识符，则可以保留索引。</li><li><strong>去除索引</strong>：如果行索引不重要或不需要，或者如果索引只是默认的整数值，可以去除索引以使文件更简洁。</li></ul><p>因此，<code>index=False</code> 参数在生成的 Excel 文件中省略行索引，使得输出文件更干净和更易于阅读，特别是当行索引不是数据表中所需的一部分时</p>`,23))])}const g=i(r,[["render",x],["__file","Pandas：数据写入 excel 表格.html.vue"]]),_=JSON.parse('{"path":"/fpython/Pandas/Pandas%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%86%99%E5%85%A5%20excel%20%E8%A1%A8%E6%A0%BC.html","title":"Pandas: 数据写入 excel 表格","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"示例解释","slug":"示例解释","link":"#示例解释","children":[{"level":3,"title":"写入 Excel 文件时使用 index=True","slug":"写入-excel-文件时使用-index-true","link":"#写入-excel-文件时使用-index-true","children":[]}]},{"level":2,"title":"使用场景","slug":"使用场景","link":"#使用场景","children":[]}],"git":{"updatedTime":1735029308000,"contributors":[{"name":"wanglinhao","username":"wanglinhao","email":"wanglinhao@wegooooo.com","commits":3}]},"filePathRelative":"fpython/Pandas/Pandas：数据写入 excel 表格.md"}');export{g as comp,_ as data};
