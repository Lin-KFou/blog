import{_ as p,c as t,a,d as e,e as l,f as r,r as c,o,b as i}from"./app-BCC5ysrj.js";const d={},u={class:"vuepress-toc"},v={class:"vuepress-toc-item"},m={class:"vuepress-toc-item"},b={class:"vuepress-toc-item"},k={class:"vuepress-toc-item"},h={class:"vuepress-toc-item"},g={class:"vuepress-toc-item"},f={class:"vuepress-toc-item"},y={class:"vuepress-toc-item"},_={class:"vuepress-toc-item"},q={class:"vuepress-toc-item"};function x(w,s){const n=c("router-link");return o(),t("div",null,[s[10]||(s[10]=a("h1",{id:"_09-访问仓库",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_09-访问仓库"},[a("span",null,"09. 访问仓库")])],-1)),a("nav",u,[a("ul",null,[a("li",v,[e(n,{to:"#简介"},{default:l(()=>s[0]||(s[0]=[i("简介")])),_:1})]),a("li",m,[e(n,{to:"#docker-hub"},{default:l(()=>s[1]||(s[1]=[i("Docker Hub")])),_:1}),a("ul",null,[a("li",b,[e(n,{to:"#注册"},{default:l(()=>s[2]||(s[2]=[i("注册")])),_:1})]),a("li",k,[e(n,{to:"#登录"},{default:l(()=>s[3]||(s[3]=[i("登录")])),_:1})]),a("li",h,[e(n,{to:"#拉取镜像"},{default:l(()=>s[4]||(s[4]=[i("拉取镜像")])),_:1})]),a("li",g,[e(n,{to:"#推送镜像到自己的docker-hub上面"},{default:l(()=>s[5]||(s[5]=[i("推送镜像到自己的docker Hub上面")])),_:1})]),a("li",f,[e(n,{to:"#自动创建"},{default:l(()=>s[6]||(s[6]=[i("自动创建")])),_:1})])])]),a("li",y,[e(n,{to:"#私有仓库"},{default:l(()=>s[7]||(s[7]=[i("私有仓库")])),_:1}),a("ul",null,[a("li",_,[e(n,{to:"#_1-基本私有仓库"},{default:l(()=>s[8]||(s[8]=[i("1. 基本私有仓库")])),_:1})]),a("li",q,[e(n,{to:"#_2-配置安全认证"},{default:l(()=>s[9]||(s[9]=[i("2. 配置安全认证")])),_:1})])])])])]),s[11]||(s[11]=r(`<hr><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>Docker 镜像仓库是用于存储和分发 Docker 镜像的服务。主要概念：</p><ul><li><strong>仓库(Repository)</strong>: 存放镜像的地方</li><li><strong>注册服务器(Registry)</strong>: 管理仓库的服务器</li><li><strong>标签(Tag)</strong>: 标识镜像的版本</li></ul><blockquote><p>例如：对于仓库地址 <code>dl.dockerpool.com/ubuntu</code></p><ul><li><code>dl.dockerpool.com</code> 是注册服务器地址</li><li><code>ubuntu</code> 是仓库名</li></ul></blockquote><h2 id="docker-hub" tabindex="-1"><a class="header-anchor" href="#docker-hub"><span>Docker Hub</span></a></h2><p>Docker Hub 是 Docker 官方维护的公共仓库，提供了超过 15,000 个镜像。它是最常用的镜像来源。</p><h3 id="注册" tabindex="-1"><a class="header-anchor" href="#注册"><span>注册</span></a></h3><p>访问 <a href="https://hub.docker.com" target="_blank" rel="noopener noreferrer">https://hub.docker.com</a> 免费注册账号。</p><h3 id="登录" tabindex="-1"><a class="header-anchor" href="#登录"><span>登录</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 登录</span></span>
<span class="line"><span class="token function">docker</span> login</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 退出</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">logout</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="拉取镜像" tabindex="-1"><a class="header-anchor" href="#拉取镜像"><span>拉取镜像</span></a></h3><ol><li><p>搜索镜像</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> search centos</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>搜索结果说明：</strong></p><ul><li>NAME: 镜像名称</li><li>DESCRIPTION: 镜像描述</li><li>STARS: 镜像的受欢迎程度</li><li>OFFICIAL: 是否为官方镜像</li><li>AUTOMATED: 是否自动构建</li></ul><p><strong>镜像类型：</strong></p><ul><li>官方镜像：如 <code>centos</code>，由 Docker 官方维护</li><li>用户镜像：如 <code>username/centos</code>，由用户创建维护</li></ul><blockquote><p><strong>提示：</strong> 使用 <code>--filter=stars=N</code> 可以过滤星级</p></blockquote></li><li><p>下载镜像</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> pull centos</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><h3 id="推送镜像到自己的docker-hub上面" tabindex="-1"><a class="header-anchor" href="#推送镜像到自己的docker-hub上面"><span>推送镜像到自己的docker Hub上面</span></a></h3><blockquote><p>将镜像推送到自己的docker Hub上面需要进行登录到自己的账户上。 请使用 <code>docker login</code>,退出登录请使用<code>docker logout</code>,之后使用docker push进行上传 用户也可以在登录后通过<code>docker push</code>命令将自己的镜像推送到Docker Hub<br> 下面命令中的<code>username</code>替换为自己的Docker账户用户名</p></blockquote><ol><li><p>登录账号</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> login</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>标记镜像</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> tag centos:7 username/centos:7</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>推送镜像</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> push username/centos:7</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><h3 id="自动创建" tabindex="-1"><a class="header-anchor" href="#自动创建"><span>自动创建</span></a></h3><p>Docker Hub 支持通过 GitHub 或 BitBucket 自动构建镜像：</p><ol><li>创建并登录 Docker Hub</li><li>关联 GitHub/BitBucket 账号</li><li>配置自动构建</li><li>选择代码仓库和分支</li><li>指定 Dockerfile 位置</li></ol><blockquote><p><strong>优点：</strong> 代码更新时自动构建新镜像，无需手动更新</p></blockquote><h2 id="私有仓库" tabindex="-1"><a class="header-anchor" href="#私有仓库"><span>私有仓库</span></a></h2><h3 id="_1-基本私有仓库" tabindex="-1"><a class="header-anchor" href="#_1-基本私有仓库"><span>1. 基本私有仓库</span></a></h3><h4 id="_1-1-安装运行" tabindex="-1"><a class="header-anchor" href="#_1-1-安装运行"><span>1.1 安装运行</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 启动私有仓库容器</span></span>
<span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">5000</span>:5000 <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token parameter variable">--name</span> registry registry</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 将仓库数据持久化到主机</span></span>
<span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">5000</span>:5000 <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token parameter variable">--name</span> registry <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-v</span> /mnt/registry:/var/lib/registry <span class="token punctuation">\\</span></span>
<span class="line">  registry</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-2-使用私有仓库" tabindex="-1"><a class="header-anchor" href="#_1-2-使用私有仓库"><span>1.2 使用私有仓库</span></a></h4><ol><li><p>标记下载启动镜像镜像</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> pull registry</span>
<span class="line"></span>
<span class="line"><span class="token comment">#启动容器</span></span>
<span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">5000</span>:5000  <span class="token parameter variable">--restart</span> always <span class="token parameter variable">--name</span><span class="token operator">=</span>registry <span class="token parameter variable">-v</span> /mnt/docker:/var/lib/</span>
<span class="line">registry registry</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>推送镜像</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">docker</span> push localhost:5000/centos:7</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>查看仓库镜像</p><blockquote><p>当想让本网段的其他主机也能把镜像推送到私有仓库，就需要设置仓库地址为内网IP，但由于Docker默认不允许非HTTPS方式 推送镜像。<br> 所以，需要通过Docker的配置选项来取消这个限制。或者配置能够通过HTTPS访问私有仓库。<br> Centos配置HTTP上传到私有仓库</p></blockquote><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">cat</span> <span class="token operator">&gt;</span> /etc/docker/daemon.json <span class="token operator">&lt;&lt;</span><span class="token string">EOF</span>
<span class="line">{</span>
<span class="line">    &quot;registry-mirror&quot;:[</span>
<span class="line">      &quot;https://registry.docker-cn.com&quot;</span>
<span class="line">    ],</span>
<span class="line">    &quot;insecure-registries&quot;:[</span>
<span class="line">      &quot;192.168.199.100:5000&quot;</span>
<span class="line">    ]</span>
<span class="line">}</span>
<span class="line">EOF</span></span>
<span class="line"></span>
<span class="line"><span class="token function">curl</span> http://localhost:5000/v2/_catalog</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="_2-配置安全认证" tabindex="-1"><a class="header-anchor" href="#_2-配置安全认证"><span>2. 配置安全认证</span></a></h3><h4 id="_2-1-生成证书" tabindex="-1"><a class="header-anchor" href="#_2-1-生成证书"><span>2.1 生成证书</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 创建证书目录</span></span>
<span class="line"><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> certs</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 生成证书</span></span>
<span class="line">openssl req <span class="token parameter variable">-newkey</span> rsa:4096 <span class="token parameter variable">-nodes</span> <span class="token parameter variable">-sha256</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-keyout</span> certs/domain.key <span class="token parameter variable">-x509</span> <span class="token parameter variable">-days</span> <span class="token number">365</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-out</span> certs/domain.crt</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="生成证书案例" tabindex="-1"><a class="header-anchor" href="#生成证书案例"><span>生成证书案例</span></a></h5><ul><li><p>当有一个域名，就可以使用<code>openssl</code>自行签发证书。</p></li><li><p><strong>过程</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 创建CA私钥</span></span>
<span class="line">openssl genrsa <span class="token parameter variable">-out</span> <span class="token string">&quot;root-ca.key&quot;</span> <span class="token number">4096</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 利用私钥创建CA根证书请求文件</span></span>
<span class="line">openssl req <span class="token parameter variable">-new</span> <span class="token parameter variable">-key</span> <span class="token string">&quot;root-ca.key&quot;</span> <span class="token punctuation">\\</span>   </span>
<span class="line">    <span class="token parameter variable">-out</span> <span class="token string">&quot;root-ca.csr&quot;</span> <span class="token parameter variable">-sha256</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token parameter variable">-subj</span> <span class="token string">&#39;/C=CN/ST=Shanxi/L=Datong/O=Your Company Name/CN=Your Company Name Docker Registry </span>
<span class="line">    CA&#39;</span></span>
<span class="line"><span class="token comment"># -subj /C 表示国家； /ST 表示省  /L 表示城市 /O 表示组织名 /CN通用名称</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 配置CA根证书，新建root-ca.cnf</span></span>
<span class="line"><span class="token function">vim</span> root-ca.cnf</span>
<span class="line"><span class="token punctuation">[</span>root-ca<span class="token punctuation">]</span></span>
<span class="line">basicConstraints <span class="token operator">=</span> critical,CA:TRUE,pathlen:1</span>
<span class="line">keyUsage <span class="token operator">=</span> critical, nonRepudiation, cRLSign, keyCertSign</span>
<span class="line"><span class="token assign-left variable">subjectKeyIdentifier</span><span class="token operator">=</span>hash</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 签发根证书</span></span>
<span class="line">openssl x509 <span class="token parameter variable">-req</span> <span class="token parameter variable">-days</span> <span class="token number">3650</span> <span class="token parameter variable">-in</span> <span class="token string">&quot;root-ca.csr&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token parameter variable">-signkey</span> <span class="token string">&quot;root-ca.key&quot;</span> <span class="token parameter variable">-sha256</span> <span class="token parameter variable">-out</span> <span class="token string">&quot;root-ca.crt&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token parameter variable">-extfile</span> <span class="token string">&quot;root-ca.cnf&quot;</span> <span class="token parameter variable">-extensions</span> <span class="token punctuation">\\</span></span>
<span class="line">    root_ca</span>
<span class="line">    </span>
<span class="line"><span class="token comment"># 生成站点SSL私钥</span></span>
<span class="line">openssl genrsa <span class="token parameter variable">-out</span> <span class="token string">&quot;www.wanglhdocker.com.key&quot;</span> <span class="token number">4096</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用私钥生成证书请求文件</span></span>
<span class="line">openssl req <span class="token parameter variable">-new</span> <span class="token parameter variable">-key</span> <span class="token string">&quot;www.wanglhdocker.com.key&quot;</span> <span class="token parameter variable">-out</span> <span class="token string">&quot;site.csr&quot;</span> <span class="token parameter variable">-sha256</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token parameter variable">-subj</span> <span class="token string">&#39;/C=CN/ST=Shanxi/L=Datong/O=Your Company Name/CN=www.wanglhdocker.com&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 配置证书，新建site.cnf文件</span></span>
<span class="line"><span class="token function">cat</span> <span class="token operator">&gt;</span> site.cnf <span class="token operator">&lt;&lt;</span><span class="token string">EOF</span>
<span class="line">[server]</span>
<span class="line">authorityKeyIdentifier=keyid,issuer</span>
<span class="line">basicConstraints = critical,CA:FALSE</span>
<span class="line">extendedKeyUsage=serverAuth</span>
<span class="line">keyUsage = critical, digitalSignature, keyEncipherment</span>
<span class="line">subjectAltName = DNS:docker.domain.com, IP:127.0.0.1</span>
<span class="line">subjectKeyIdentifier=hash</span>
<span class="line"></span>
<span class="line">EOF</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 签署站点SSL证书</span></span>
<span class="line">openssl x509 <span class="token parameter variable">-req</span> <span class="token parameter variable">-days</span> <span class="token number">750</span> <span class="token parameter variable">-in</span> <span class="token string">&quot;site.csr&quot;</span> <span class="token parameter variable">-sha256</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token parameter variable">-CA</span> <span class="token string">&quot;root-ca.crt&quot;</span> <span class="token parameter variable">-CAkey</span> <span class="token string">&quot;root-ca.key&quot;</span> <span class="token parameter variable">-CAcreateserial</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token parameter variable">-out</span> <span class="token string">&quot;www.wanglhdocker.com.crt&quot;</span> <span class="token parameter variable">-extfile</span> <span class="token string">&quot;site.cnf&quot;</span> <span class="token parameter variable">-extensions</span> server</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 自改 hosts，并启动</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment">##如此，就有了www.wanglhdocker.com的网站SSL私钥www.wanglhdocker.com.key和SSL证书www.wanglhdocker.</span></span>
<span class="line">com.crt及CA根证书 root-ca.crt</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>将生成的三个文件 移动到一个文件，删除其他文件夹</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">curl</span> <span class="token parameter variable">-L</span> https://github.com/docker/compose/releases/download/1.24.0-rc1/docker-compose-<span class="token variable"><span class="token variable">\`</span><span class="token function">uname</span> </span>
<span class="line"><span class="token parameter variable">-s</span><span class="token variable">\`</span></span>-<span class="token variable"><span class="token variable">\`</span><span class="token function">uname</span> <span class="token parameter variable">-m</span><span class="token variable">\`</span></span> <span class="token parameter variable">-o</span> /usr/local/bin/docker-compose</span>
<span class="line"></span>
<span class="line"><span class="token function">mv</span> /use/local/bin/docker-compose /usr/bin/docker-compose</span>
<span class="line"><span class="token function">chmod</span> +x /usr/bin/docker-compose</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="_2-2-配置认证" tabindex="-1"><a class="header-anchor" href="#_2-2-配置认证"><span>2.2 配置认证</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 创建认证文件</span></span>
<span class="line"><span class="token function">mkdir</span> auth</span>
<span class="line"><span class="token function">docker</span> run <span class="token parameter variable">--rm</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">--entrypoint</span> htpasswd <span class="token punctuation">\\</span></span>
<span class="line">  registry <span class="token parameter variable">-Bbn</span> username password <span class="token operator">&gt;</span> auth/htpasswd</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 启动带认证的仓库</span></span>
<span class="line"><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">5000</span>:5000 <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token parameter variable">--name</span> registry <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-v</span> <span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">pwd</span><span class="token variable">\`</span></span>/auth:/auth <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-v</span> <span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">pwd</span><span class="token variable">\`</span></span>/certs:/certs <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-e</span> <span class="token assign-left variable">REGISTRY_AUTH</span><span class="token operator">=</span>htpasswd <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-e</span> <span class="token assign-left variable">REGISTRY_AUTH_HTPASSWD_REALM</span><span class="token operator">=</span><span class="token string">&quot;Registry Realm&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-e</span> <span class="token assign-left variable">REGISTRY_AUTH_HTPASSWD_PATH</span><span class="token operator">=</span>/auth/htpasswd <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-e</span> <span class="token assign-left variable">REGISTRY_HTTP_TLS_CERTIFICATE</span><span class="token operator">=</span>/certs/domain.crt <span class="token punctuation">\\</span></span>
<span class="line">  <span class="token parameter variable">-e</span> <span class="token assign-left variable">REGISTRY_HTTP_TLS_KEY</span><span class="token operator">=</span>/certs/domain.key <span class="token punctuation">\\</span></span>
<span class="line">  registry</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-3-客户端配置" tabindex="-1"><a class="header-anchor" href="#_2-3-客户端配置"><span>2.3 客户端配置</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 复制证书</span></span>
<span class="line"><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /etc/docker/certs.d/myregistry:5000</span>
<span class="line"><span class="token function">cp</span> domain.crt /etc/docker/certs.d/myregistry:5000/ca.crt</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,35))])}const T=p(d,[["render",x],["__file","Docker系列学习-09.访问仓库.html.vue"]]),A=JSON.parse('{"path":"/flinux/Kubernetes/Docker%E7%B3%BB%E5%88%97%E5%AD%A6%E4%B9%A0/Docker%E7%B3%BB%E5%88%97%E5%AD%A6%E4%B9%A0-09.%E8%AE%BF%E9%97%AE%E4%BB%93%E5%BA%93.html","title":"09. 访问仓库","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"Docker Hub","slug":"docker-hub","link":"#docker-hub","children":[{"level":3,"title":"注册","slug":"注册","link":"#注册","children":[]},{"level":3,"title":"登录","slug":"登录","link":"#登录","children":[]},{"level":3,"title":"拉取镜像","slug":"拉取镜像","link":"#拉取镜像","children":[]},{"level":3,"title":"推送镜像到自己的docker Hub上面","slug":"推送镜像到自己的docker-hub上面","link":"#推送镜像到自己的docker-hub上面","children":[]},{"level":3,"title":"自动创建","slug":"自动创建","link":"#自动创建","children":[]}]},{"level":2,"title":"私有仓库","slug":"私有仓库","link":"#私有仓库","children":[{"level":3,"title":"1. 基本私有仓库","slug":"_1-基本私有仓库","link":"#_1-基本私有仓库","children":[]},{"level":3,"title":"2. 配置安全认证","slug":"_2-配置安全认证","link":"#_2-配置安全认证","children":[]}]}],"git":{"updatedTime":1709276200000,"contributors":[{"name":"Linkefou","username":"Linkefou","email":"wlh724567296@163.com","commits":1},{"name":"wanglinhao","username":"wanglinhao","email":"wanglinhao@wegooooo.com","commits":2}]},"filePathRelative":"flinux/Kubernetes/Docker系列学习/Docker系列学习-09.访问仓库.md"}');export{T as comp,A as data};
